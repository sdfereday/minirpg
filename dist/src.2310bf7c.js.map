{"version":3,"sources":["node_modules/kontra/kontra.mjs","src/common/events.js","src/common/helpers.js","src/common/consts.js","node_modules/mithril/render/vnode.js","node_modules/mithril/render/hyperscriptVnode.js","node_modules/mithril/render/hyperscript.js","node_modules/mithril/render/trust.js","node_modules/mithril/render/fragment.js","node_modules/mithril/hyperscript.js","node_modules/mithril/promise/polyfill.js","node_modules/mithril/promise/promise.js","node_modules/mithril/render/render.js","node_modules/mithril/render.js","node_modules/mithril/api/mount-redraw.js","node_modules/mithril/mount-redraw.js","node_modules/mithril/querystring/build.js","node_modules/mithril/pathname/assign.js","node_modules/mithril/pathname/build.js","node_modules/mithril/request/request.js","node_modules/mithril/request.js","node_modules/mithril/querystring/parse.js","node_modules/mithril/pathname/parse.js","node_modules/mithril/pathname/compileTemplate.js","node_modules/mithril/api/router.js","node_modules/mithril/route.js","node_modules/mithril/index.js","src/ui/effects.js","src/ui/dialogue.js","src/common/conversationIterator.js","src/input/onPush.js","src/states/startConvoState.js","src/ui/inventory.js","src/states/fieldState.js","src/states/curtainState.js","src/managers/sceneManager.js","src/sprites/spriteFunctions.js","src/sprites/entity.js","src/managers/worldManager.js","src/managers/reactionManager.js","src/managers/stateManager.js","src/index.js"],"names":["kontra","canvasEl","context","callbacks","on","event","callback","push","off","index","indexOf","splice","emit","args","map","fn","getCanvas","getContext","init","canvas","document","getElementById","querySelector","Error","imageSmoothingEnabled","Animation","constructor","spriteSheet","frames","frameRate","loop","width","height","margin","frame","_f","_a","clone","animationFactory","reset","update","dt","length","render","x","y","row","col","drawImage","image","properties","prototype","class","imageRegex","audioRegex","leadingSlash","trailingSlash","dataMap","WeakMap","imagePath","audioPath","dataPath","getUrl","url","base","URL","href","joinPath","replace","filter","s","join","getExtension","split","pop","getName","name","getCanPlay","audio","wav","mp3","canPlayType","ogg","aac","imageAssets","audioAssets","dataAssets","addGlobal","window","__k","dm","u","d","i","setImagePath","path","setAudioPath","setDataPath","loadImage","Promise","resolve","reject","resolvedUrl","fullUrl","Image","onload","location","onerror","src","loadAudio","audioEl","canPlay","Audio","concat","reduce","playableSource","source","addEventListener","load","loadData","fetch","then","response","ok","json","catch","text","set","urls","all","asset","extension","match","noop","clear","clearRect","GameLoop","fps","clearCanvas","accumulator","last","rAF","now","delta","step","clearFn","requestAnimationFrame","performance","isStopped","start","stop","cancelAnimationFrame","_frame","_last","value","callbacks$1","pressedKeys","keyMap","keydownEventHandler","evt","key","code","which","keyupEventHandler","blurEventHandler","initKeys","String","fromCharCode","bindKeys","keys","unbindKeys","keyPressed","getMethod","methodName","methodTitle","substr","search","toLowerCase","removeInterceptor","interceptors","registerPlugin","kontraObj","pluginObj","objectProto","_inc","_bInc","method","before","acc","newArgs","_aInc","result","after","newResult","Object","getOwnPropertyNames","forEach","alteredArgs","call","startsWith","unregisterPlugin","extendObject","prop","thisFrameRenderOrder","lastFrameRenderOrder","callbacks$2","trackedObjects","pressedButtons","buttonMap","pointer","radius","circleRectCollision","object","_pntr","pntr","anchor","dx","Math","max","min","dy","getCurrentObject","frameOrder","collides","collidesWithPointer","pointerDownHandler","button","undefined","pointerHandler","pointerUpHandler","mouseMoveHandler","blurEventHandler$1","eventName","clientX","clientY","ratio","offsetHeight","rect","getBoundingClientRect","isTouchEvent","type","touches","identifier","id","left","top","changed","changedTouches","preventDefault","initPointer","track","objects","_r","untrack","pointerOver","includes","onPointerDown","onDown","onPointerUp","onUp","pointerPressed","Pool","create","maxSize","obj","isAlive","_c","size","get","getAliveObjects","slice","doSort","sort","a","b","poolFactory","getIndices","bounds","indices","verticalMidpoint","horizontalMidpoint","intersectsTopQuadrants","intersectsBottomQuadrants","Quadtree","maxDepth","maxObjects","_b","_d","_o","_s","_p","subnode","Set","add","Array","from","j","arguments","isArray","apply","_sp","subWidth","subHeight","quadtreeFactory","Vector","_x","_y","vec","vectorFactory","clamp","xMin","yMin","xMax","yMax","_e","vector","Sprite","ddx","ddy","position","velocity","acceleration","_fx","_fy","rotation","ttl","Infinity","sx","sy","animations","viewX","viewY","_w","_h","firstAnimation","currentAnimation","sign","collidesWith","objX","objY","advance","draw","playAnimation","anchorWidth","anchorHeight","save","translate","rotate","scale","fillStyle","color","fillRect","restore","spriteFactory","parseFrames","consecutiveFrames","sequence","end","SpriteSheet","frameWidth","frameHeight","frameMargin","createAnimations","spriteSheetFactory","setStoreItem","localStorage","removeItem","setItem","JSON","stringify","getStoreItem","getItem","parse","e","TileEngine","tilewidth","tileheight","tilesets","layers","mapwidth","mapheight","offscreenCanvas","createElement","offscreenContext","layerMap","layerCanvases","tileEngine","assign","_sx","_sy","renderLayer","layer","layerCollidesWith","getRow","getCol","endRow","endCol","r","c","data","tileAtLayer","setTileAtLayer","tile","setLayer","addObject","removeObject","globalAlpha","opacity","tileset","firstgid","offset","cols","columns","prerender","visible","sWidth","sHeight","EV_CONVOSTART","EV_CONVOEND","EV_CONVONEXT","EV_CONVOCHOICE","EV_SCENECHANGE","EV_INTERACTION","registry","allOff","ignoreList","k","some","str","uniqueId","pre","Number","random","Date","round","toString","between","v","vmulti","dist","p1","p2","sqrt","sortByDist","target","items","circleCollision","collider","targets","destroyOnHit","filtered","console","error","offsets","collisionBodyOptions","offsetX","offsetY","debug","o","info","EV_DEBUGLOG","ENTITY_TYPE","PICKUP","NPC","ENEMY","SWITCH","DOOR","CONTAINER","ENTRANCE","PLAYER","typeWriter","onStart","onTyped","onFinished","animId","t","charAt","mounted","isTyping","choices","primeGlobals","props","redraw","callTypewriter","callText","Shell","attrs","oninit","onremove","view","choice","onclick","onChoiceSelected","isBusy","mount","m","unmount","MODES","NOTRUNNING","NEXTNODE","AWAITINGINPUT","JUSTFINISHED","COMPLETED","conversationData","onChatStarted","node","onChatNext","onChatComplete","lastPositionSaved","onChainProgress","lastNodeId","onChatCancelled","currentNode","isRunning","isComplete","displayNode","queriedNode","queryNode","query","goToExact","mode","currentIndex","goToNext","to","actions","action","log","cb","pushed","startId","onEntry","onExit","dataKey","conversationController","exitId","storyProgress","onDisplayText","actor","dialogue","onInteractionPushed","rest","enter","exit","entitiesInStore","itemsInData","item","find","storedItem","qty","onItemSelected","thumb","description","onInventoryClosed","reactionManager","getAllEntitiesOfType","interactionCooldown","origin","collisions","controlledByUser","interactible","reactionData","reactionEvent","onInventoryOpened","inventory","itemData","ctx","direction","onFadeComplete","alpha","Scene","sceneObject","currentScene","loadScene","moveSprite","dir","sprite","checkCollision","dirLength","directionNormal","oldPos","collidedWithX","collidesWithTiles","collidedWithY","flipSprite","z","customProperties","collisionMethod","entityData","ent","sheet","manualAnimation","movementDisabled","isMoving","options","worldData","getEntityFromStore","existingEntities","getAllEntities","resetEntityStates","savePickup","existingEntity","createWorld","areaId","playerStartId","entities","mapKey","playerStart","player","sprites","entity","exists","reactions","reaction","states","arr","state","currentState","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","FieldScene","sceneProps","spriteCache","spr","sceneStateMachine","screenEffectsStateMachine","goesTo","actors","playerCollidingWith","isColliding","assets","sceneManager"],"mappings":"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","file":"src.2310bf7c.js","sourceRoot":"..","sourcesContent":["/**\n * A simple event system. Allows you to hook into Kontra lifecycle events or create your own, such as for [Plugins](api/plugin).\n *\n * ```js\n * import { on, off, emit } from 'kontra';\n *\n * function callback(a, b, c) {\n *   console.log({a, b, c});\n * });\n *\n * on('myEvent', callback);\n * emit('myEvent', 1, 2, 3);  //=> {a: 1, b: 2, c: 3}\n * off('myEvent', callback);\n * ```\n * @sectionName Events\n */\n\n// expose for testing\nlet callbacks = {};\n\n/**\n * There are currently only three lifecycle events:\n * - `init` - Emitted after `konta.init()` is called.\n * - `tick` - Emitted every frame of kontra.GameLoop before the loops `update()` and `render()` functions are called.\n * - `assetLoaded` - Emitted after an asset has fully loaded using the asset loader. The callback function is passed the asset and the url of the asset as parameters.\n * @sectionName Lifecycle Events\n */\n\n/**\n * Register a callback for an event to be called whenever the event is emitted. The callback will be passed all arguments used in the `emit` call.\n * @function on\n *\n * @param {String} event - Name of the event.\n * @param {Function} callback - Function that will be called when the event is emitted.\n */\nfunction on(event, callback) {\n  callbacks[event] = callbacks[event] || [];\n  callbacks[event].push(callback);\n}\n\n/**\n * Remove a callback for an event.\n * @function off\n *\n * @param {String} event - Name of the event.\n * @param {Function} callback - The function that was passed during registration.\n */\nfunction off(event, callback) {\n  let index;\n\n  if (!callbacks[event] || (index = callbacks[event].indexOf(callback)) < 0) return;\n  callbacks[event].splice(index, 1);\n}\n\n/**\n * Call all callback functions for the event. All arguments will be passed to the callback functions.\n * @function emit\n *\n * @param {String} event - Name of the event.\n * @param {*} [args] - Arguments passed to all callbacks.\n */\nfunction emit(event, ...args) {\n  if (!callbacks[event]) return;\n  callbacks[event].map(fn => fn(...args));\n}\n\n/**\n * Functions for initializing the Kontra library and getting the canvas and context\n * objects.\n *\n * ```js\n * import { getCanvas, getContext, init } from 'kontra';\n *\n * let { canvas, context } = init();\n *\n * // or can get canvas and context through functions\n * canvas = getCanvas();\n * context = getContext();\n * ```\n * @sectionName Core\n */\n\nlet canvasEl;\nlet context;\n\n/**\n * Return the canvas element.\n * @function getCanvas\n *\n * @returns {HTMLCanvasElement} The canvas element for the game.\n */\nfunction getCanvas() {\n  return canvasEl;\n}\n\n/**\n * Return the context object.\n * @function getContext\n *\n * @returns {CanvasRenderingContext2D} The context object the game draws to.\n */\nfunction getContext() {\n  return context;\n}\n\n/**\n * Initialize the library and set up the canvas. Typically you will call `init()` as the first thing and give it the canvas to use. This will allow all Kontra objects to reference the canvas when created.\n *\n * ```js\n * import { init } from 'kontra';\n *\n * let { canvas, context } = init('game');\n * ```\n * @function init\n *\n * @param {String|HTMLCanvasElement} [canvas] - The canvas for Kontra to use. Can either be the ID of the canvas element or the canvas element itself. Defaults to using the first canvas element on the page.\n *\n * @returns {Object} An object with properties `canvas` and `context`. `canvas` it the canvas element for the game and `context` is the context object the game draws to.\n */\nfunction init(canvas) {\n\n  // check if canvas is a string first, an element next, or default to getting\n  // first canvas on page\n  canvasEl = document.getElementById(canvas) ||\n             canvas ||\n             document.querySelector('canvas');\n\n  // @if DEBUG\n  if (!canvasEl) {\n    throw Error('You must provide a canvas element for the game');\n  }\n  // @endif\n\n  context = canvasEl.getContext('2d');\n  context.imageSmoothingEnabled = false;\n\n  emit('init');\n\n  return { canvas: canvasEl, context };\n}\n\n/**\n * An object for drawing sprite sheet animations.\n *\n * An animation defines the sequence of frames to use from a sprite sheet. It also defines at what speed the animation should run using `frameRate`.\n *\n * Typically you don't create an kontra.Animation directly, but rather you would create them from kontra.SpriteSheet by passing the `animations` argument.\n *\n * ```js\n * import { SpriteSheet, Animation } from 'kontra';\n *\n * let image = new Image();\n * image.src = 'assets/imgs/character_walk_sheet.png';\n * image.onload = function() {\n *   let spriteSheet = SpriteSheet({\n *     image: image,\n *     frameWidth: 72,\n *     frameHeight: 97\n *   });\n *\n *   // you typically wouldn't create an Animation this way\n *   let animation = Animation({\n *     spriteSheet: spriteSheet,\n *     frames: [1,2,3,6],\n *     frameRate: 30\n *   });\n * };\n * ```\n * @class Animation\n *\n * @param {Object} properties - Properties of the animation.\n * @param {kontra.SpriteSheet} properties.spriteSheet - Sprite sheet for the animation.\n * @param {Number[]} properties.frames - List of frames of the animation.\n * @param {Number}  properties.frameRate - Number of frames to display in one second.\n * @param {Boolean} [properties.loop=true] - If the animation should loop.\n */\nclass Animation {\n  constructor({spriteSheet, frames, frameRate, loop = true} = {}) {\n\n    /**\n     * The sprite sheet to use for the animation.\n     * @memberof Animation\n     * @property {kontra.SpriteSheet} spriteSheet\n     */\n    this.spriteSheet = spriteSheet;\n\n    /**\n     * Sequence of frames to use from the sprite sheet.\n     * @memberof Animation\n     * @property {Number[]} frames\n     */\n    this.frames = frames;\n\n    /**\n     * Number of frames to display per second. Adjusting this value will change the speed of the animation.\n     * @memberof Animation\n     * @property {Number} frameRate\n     */\n    this.frameRate = frameRate;\n\n    /**\n     * If the animation should loop back to the beginning once completed.\n     * @memberof Animation\n     * @property {Boolean} loop\n     */\n    this.loop = loop;\n\n    let { width, height, margin = 0 } = spriteSheet.frame;\n\n    /**\n     * The width of an individual frame. Taken from the property of the same name in the [spriteSheet](api/animation#spriteSheet).\n     * @memberof Animation\n     * @property {Number} width\n     */\n    this.width = width;\n\n    /**\n     * The height of an individual frame. Taken from the property of the same name in the [spriteSheet](api/animation#spriteSheet).\n     * @memberof Animation\n     * @property {Number} height\n     */\n    this.height = height;\n\n    /**\n     * The space between each frame. Taken from the property of the same name in the [spriteSheet](api/animation#spriteSheet).\n     * @memberof Animation\n     * @property {Number} margin\n     */\n    this.margin = margin;\n\n    // f = frame, a = accumulator\n    this._f = 0;\n    this._a = 0;\n  }\n\n  /**\n   * Clone an animation so it can be used more than once. By default animations passed to kontra.Sprite will be cloned so no two sprites update the same animation. Otherwise two sprites who shared the same animation would make it update twice as fast.\n   * @memberof Animation\n   * @function clone\n   *\n   * @returns {kontra.Animation} A new kontra.Animation instance.\n   */\n  clone() {\n    return animationFactory(this);\n  }\n\n  /**\n   * Reset an animation to the first frame.\n   * @memberof Animation\n   * @function reset\n   */\n  reset() {\n    this._f = 0;\n    this._a = 0;\n  }\n\n  /**\n   * Update the animation.\n   * @memberof Animation\n   * @function update\n   *\n   * @param {Number} [dt=1/60] - Time since last update.\n   */\n  update(dt = 1/60) {\n\n    // if the animation doesn't loop we stop at the last frame\n    if (!this.loop && this._f == this.frames.length-1) return;\n\n    this._a += dt;\n\n    // update to the next frame if it's time\n    while (this._a * this.frameRate >= 1) {\n      this._f = ++this._f % this.frames.length;\n      this._a -= 1 / this.frameRate;\n    }\n  }\n\n  /**\n   * Draw the current frame of the animation.\n   * @memberof Animation\n   * @function render\n   *\n   * @param {Object} properties - Properties to draw the animation.\n   * @param {Number} properties.x - X position to draw the animation.\n   * @param {Number} properties.y - Y position to draw the animation.\n   * @param {Number} [properties.width] - width of the sprite. Defaults to [Animation.width](api/animation#width).\n   * @param {Number} [properties.height] - height of the sprite. Defaults to [Animation.height](api/animation#height).\n   * @param {Canvas​Rendering​Context2D} [properties.context] - The context the animation should draw to. Defaults to [core.getContext()](api/core#getContext).\n   */\n  render({x, y, width = this.width, height = this.height, context = getContext()} = {}) {\n\n    // get the row and col of the frame\n    let row = this.frames[this._f] / this.spriteSheet._f | 0;\n    let col = this.frames[this._f] % this.spriteSheet._f | 0;\n\n    context.drawImage(\n      this.spriteSheet.image,\n      col * this.width + (col * 2 + 1) * this.margin,\n      row * this.height + (row * 2 + 1) * this.margin,\n      this.width, this.height,\n      x, y,\n      width, height\n    );\n  }\n}\n\nfunction animationFactory(properties) {\n  return new Animation(properties);\n}\nanimationFactory.prototype = Animation.prototype;\nanimationFactory.class = Animation;\n\n/**\n * A promise based asset loader for loading images, audio, and data files. An `assetLoaded` event is emitted after each asset is fully loaded. The callback for the event is passed the asset and the url to the asset as parameters.\n *\n * ```js\n * import { load, on } from 'kontra';\n *\n * let numAssets = 3;\n * let assetsLoaded = 0;\n * on('assetLoaded', (asset, url) => {\n *   assetsLoaded++;\n *\n *   // inform user or update progress bar\n * });\n *\n * load(\n *   'assets/imgs/character.png',\n *   'assets/data/tile_engine_basic.json',\n *   ['/audio/music.ogg', '/audio/music.mp3']\n * ).then(function(assets) {\n *   // all assets have loaded\n * }).catch(function(err) {\n *   // error loading an asset\n * });\n * ```\n * @sectionName Assets\n */\n\nlet imageRegex = /(jpeg|jpg|gif|png)$/;\nlet audioRegex = /(wav|mp3|ogg|aac)$/;\nlet leadingSlash = /^\\//;\nlet trailingSlash = /\\/$/;\nlet dataMap = new WeakMap();\n\nlet imagePath = '';\nlet audioPath = '';\nlet dataPath = '';\n\n/**\n * Get the full URL from the base.\n *\n * @param {String} url - The URL to the asset.\n * @param {String} base - Base URL.\n *\n * @returns {String}\n */\nfunction getUrl(url, base) {\n  return new URL(url, base).href;\n}\n\n/**\n * Join a base path and asset path.\n *\n * @param {String} base - The asset base path.\n * @param {String} url - The URL to the asset.\n *\n * @returns {String}\n */\nfunction joinPath(base, url) {\n  return [base.replace(trailingSlash, ''), base ? url.replace(leadingSlash, '') : url]\n    .filter(s => s)\n    .join('/')\n}\n\n/**\n * Get the extension of an asset.\n *\n * @param {String} url - The URL to the asset.\n *\n * @returns {String}\n */\nfunction getExtension(url) {\n  return url.split('.').pop();\n}\n\n/**\n * Get the name of an asset.\n *\n * @param {String} url - The URL to the asset.\n *\n * @returns {String}\n */\nfunction getName(url) {\n  let name = url.replace('.' + getExtension(url), '');\n\n  // remove leading slash if there is no folder in the path\n  // @see https://stackoverflow.com/a/50592629/2124254\n  return name.split('/').length == 2 ? name.replace(leadingSlash, '') : name;\n}\n\n/**\n * Get browser audio playability.\n * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/audio.js\n *\n * @param {HTMLMediaElement} audio - Audio element.\n *\n * @returns {object}\n */\nfunction getCanPlay(audio) {\n  return {\n    wav: '',\n    mp3: audio.canPlayType('audio/mpeg;'),\n    ogg: audio.canPlayType('audio/ogg; codecs=\"vorbis\"'),\n    aac: audio.canPlayType('audio/aac;')\n  };\n}\n\n/**\n * Object of all loaded image assets by both file name and path. If the base [image path](api/assets#setImagePath) was set before the image was loaded, the file name and path will not include the base image path.\n *\n * ```js\n * import { load, setImagePath, imageAssets } from 'kontra';\n *\n * load('assets/imgs/character.png').then(function() {\n *   // Image asset can be accessed by both\n *   // name: imageAssets['assets/imgs/character']\n *   // path: imageAssets['assets/imgs/character.png']\n * });\n *\n * setImagePath('assets/imgs');\n * load('character_walk_sheet.png').then(function() {\n *   // Image asset can be accessed by both\n *   // name: imageAssets['character_walk_sheet']\n *   // path: imageAssets['character_walk_sheet.png']\n * });\n * ```\n * @property {Object} imageAssets\n */\nlet imageAssets = {};\n\n/**\n * Object of all loaded audio assets by both file name and path. If the base [audio path](api/assets#setAudioPath) was set before the audio was loaded, the file name and path will not include the base audio path.\n *\n * ```js\n * import { load, setAudioPath, audioAssets } from 'kontra';\n *\n * load('/audio/music.ogg').then(function() {\n *   // Audio asset can be accessed by both\n *   // name: audioAssets['/audio/music']\n *   // path: audioAssets['/audio/music.ogg']\n * });\n *\n * setAudioPath('/audio');\n * load('sound.ogg').then(function() {\n *   // Audio asset can be accessed by both\n *   // name: audioAssets['sound']\n *   // path: audioAssets['sound.ogg']\n * });\n * ```\n * @property {Object} audioAssets\n */\nlet audioAssets = {};\n\n/**\n * Object of all loaded data assets by both file name and path. If the base [data path](api/assets#setDataPath) was set before the data was loaded, the file name and path will not include the base data path.\n *\n * ```js\n * import { load, setDataPath, dataAssets } from 'kontra';\n *\n * load('assets/data/file.txt').then(function() {\n *   // Audio asset can be accessed by both\n *   // name: dataAssets['assets/data/file']\n *   // path: dataAssets['assets/data/file.txt']\n * });\n *\n * setDataPath('assets/data');\n * load('info.json').then(function() {\n *   // Audio asset can be accessed by both\n *   // name: dataAssets['info']\n *   // path: dataAssets['info.json']\n * });\n * ```\n * @property {Object} dataAssets\n */\nlet dataAssets = {};\n\n/**\n * Add a global kontra object so TileEngine can access information about the\n * loaded assets when kontra is loaded in parts rather than as a whole (e.g.\n * `import { load, TileEngine } from 'kontra';`)\n */\nfunction addGlobal() {\n  if (!window.__k) {\n    window.__k = {\n      dm: dataMap,\n      u: getUrl,\n      d: dataAssets,\n      i: imageAssets\n    };\n  }\n}\n\n/**\n * Sets the base path for all image assets. If a base path is set, all load calls for image assets will prepend the base path to the URL.\n *\n * ```js\n * import { setImagePath, load } from 'kontra';\n *\n * setImagePath('/imgs');\n * load('character.png');  // loads '/imgs/character.png'\n * ```\n * @function setImagePath\n *\n * @param {String} path - Base image path.\n */\nfunction setImagePath(path) {\n  imagePath = path;\n}\n\n/**\n * Sets the base path for all audio assets. If a base path is set, all load calls for audio assets will prepend the base path to the URL.\n *\n * ```js\n * import { setAudioPath, load } from 'kontra';\n *\n * setAudioPath('/audio');\n * load('music.ogg');  // loads '/audio/music.ogg'\n * ```\n * @function setAudioPath\n *\n * @param {String} path - Base audio path.\n */\nfunction setAudioPath(path) {\n  audioPath = path;\n}\n\n/**\n * Sets the base path for all data assets. If a base path is set, all load calls for data assets will prepend the base path to the URL.\n *\n * ```js\n * import { setDataPath, load } from 'kontra';\n *\n * setDataPath('/data');\n * load('file.json');  // loads '/data/file.json'\n * ```\n * @function setDataPath\n *\n * @param {String} path - Base data path.\n */\nfunction setDataPath(path) {\n  dataPath = path;\n}\n\n/**\n * Load a single Image asset. Uses the base [image path](api/assets#setImagePath) to resolve the URL.\n *\n * Once loaded, the asset will be accessible on the the [imageAssets](api/assets#imageAssets) property.\n *\n * ```js\n * import { loadImage } from 'kontra';\n *\n * loadImage('car.png').then(function(image) {\n *   console.log(image.src);  //=> 'car.png'\n * })\n * ```\n * @function loadImage\n *\n * @param {String} url - The URL to the Image file.\n *\n * @returns {Promise} A deferred promise. Promise resolves with the Image.\n */\nfunction loadImage(url) {\n  addGlobal();\n\n  return new Promise((resolve, reject) => {\n    let resolvedUrl, image, fullUrl;\n\n    resolvedUrl = joinPath(imagePath, url);\n    if (imageAssets[resolvedUrl]) return resolve(imageAssets[resolvedUrl]);\n\n    image = new Image();\n\n    image.onload = function loadImageOnLoad() {\n      fullUrl = getUrl(resolvedUrl, window.location.href);\n      imageAssets[ getName(url) ] = imageAssets[resolvedUrl] = imageAssets[fullUrl] = this;\n      emit('assetLoaded', this, url);\n      resolve(this);\n    };\n\n    image.onerror = function loadImageOnError() {\n      reject(/* @if DEBUG */ 'Unable to load image ' + /* @endif */ resolvedUrl);\n    };\n\n    image.src = resolvedUrl;\n  });\n}\n\n/**\n * Load a single Audio asset. Supports loading multiple audio formats which the loader will use to load the first audio format supported by the browser in the order listed. Uses the base [audio path](api/assets#setAudioPath) to resolve the URL.\n *\n * Once loaded, the asset will be accessible on the the [audioAssets](api/assets#audioAssets) property. Since the loader determines which audio asset to load based on browser support, you should only reference the audio by its name and not by its file path since there's no guarantee which asset was loaded.\n *\n * ```js\n * import { loadAudio, audioAssets } from 'kontra';\n *\n * loadAudio([\n *   '/audio/music.mp3',\n *   '/audio/music.ogg'\n * ]).then(function(audio) {\n *\n *   // access audio by its name only (not by its .mp3 or .ogg path)\n *   audioAssets['/audio/music'].play();\n * })\n * ```\n * @function loadAudio\n *\n * @param {String} url - The URL to the Audio file.\n *\n * @returns {Promise} A deferred promise. Promise resolves with the Audio.\n */\nfunction loadAudio(url) {\n  return new Promise((resolve, reject) => {\n    let audioEl, canPlay, resolvedUrl, fullUrl;\n\n    audioEl = new Audio();\n    canPlay = getCanPlay(audioEl);\n\n    // determine the first audio format the browser can play\n    url = [].concat(url)\n            .reduce((playableSource, source) => playableSource\n              ? playableSource\n              : canPlay[ getExtension(source) ]\n                ? source\n                : null\n            , 0);  // 0 is the shortest falsy value\n\n    if (!url) {\n      return reject(/* @if DEBUG */ 'cannot play any of the audio formats provided' + /* @endif */ url);\n    }\n\n    resolvedUrl = joinPath(audioPath, url);\n    if (audioAssets[resolvedUrl]) return resolve(audioAssets[resolvedUrl]);\n\n    audioEl.addEventListener('canplay', function loadAudioOnLoad() {\n      fullUrl = getUrl(resolvedUrl, window.location.href);\n      audioAssets[ getName(url) ] = audioAssets[resolvedUrl] = audioAssets[fullUrl] = this;\n      emit('assetLoaded', this, url);\n      resolve(this);\n    });\n\n    audioEl.onerror = function loadAudioOnError() {\n      reject(/* @if DEBUG */ 'Unable to load audio ' + /* @endif */ resolvedUrl);\n    };\n\n    audioEl.src = resolvedUrl;\n    audioEl.load();\n  });\n}\n\n/**\n * Load a single Data asset. Uses the base [data path](api/assets#setDataPath) to resolve the URL.\n *\n * Once loaded, the asset will be accessible on the the [dataAssets](api/assets#dataAssets) property.\n *\n * ```js\n * import { loadData } from 'kontra';\n *\n * loadData('assets/data/tile_engine_basic.json').then(function(data) {\n *   // data contains the parsed JSON data\n * })\n * ```\n * @function loadData\n *\n * @param {String} url - The URL to the Data file.\n *\n * @returns {Promise} A deferred promise. Promise resolves with the contents of the file. If the file is a JSON file, the contents will be parsed as JSON.\n */\nfunction loadData(url) {\n  addGlobal();\n  let resolvedUrl, fullUrl;\n\n  resolvedUrl = joinPath(dataPath, url);\n  if (dataAssets[resolvedUrl]) return Promise.resolve(dataAssets[resolvedUrl]);\n\n  return fetch(resolvedUrl).then(response => {\n    if (!response.ok) throw response;\n    return response.clone().json().catch(() => response.text())\n  }).then(response => {\n    fullUrl = getUrl(resolvedUrl, window.location.href);\n    if (typeof response === 'object') {\n      dataMap.set(response, fullUrl);\n    }\n\n    dataAssets[ getName(url) ] = dataAssets[resolvedUrl] = dataAssets[fullUrl] = response;\n    emit('assetLoaded', response, url);\n    return response;\n  });\n}\n\n/**\n * Load Image, Audio, or data files. Uses the [loadImage](api/assets#loadImage), [loadAudio](api/assets#loadAudio), and [loadData](api/assets#loadData) functions to load each asset type.\n *\n * ```js\n * import { load } from 'kontra';\n *\n * load(\n *   'assets/imgs/character.png',\n *   'assets/data/tile_engine_basic.json',\n *   ['/audio/music.ogg', '/audio/music.mp3']\n * ).then(function(assets) {\n *   // all assets have loaded\n * }).catch(function(err) {\n *   // error loading an asset\n * });\n * ```\n * @function load\n *\n * @param {String|String[]} urls - Comma separated list of asset urls to load.\n *\n * @returns {Promise} A deferred promise. Resolves with all the loaded assets.\n */\nfunction load(...urls) {\n  addGlobal();\n\n  return Promise.all(\n    urls.map(asset => {\n      // account for a string or an array for the url\n      let extension = getExtension( [].concat(asset)[0] );\n\n      return extension.match(imageRegex)\n        ? loadImage(asset)\n        : extension.match(audioRegex)\n          ? loadAudio(asset)\n          : loadData(asset);\n    })\n  );\n}\n\n// expose for testing\n\n\n// Override the getCanPlay function to provide a specific return type for tests\n\n/**\n * Noop function\n */\nconst noop = () => {};\n\n/**\n * Clear the canvas.\n */\nfunction clear() {\n  let canvas = getCanvas();\n  getContext().clearRect(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * The game loop updates and renders the game every frame. The game loop is stopped by default and will not start until the loops `start()` function is called.\n *\n * The game loop uses a time-based animation with a fixed `dt` to [avoid frame rate issues](http://blog.sklambert.com/using-time-based-animation-implement/). Each update call is guaranteed to equal 1/60 of a second.\n *\n * This means that you can avoid having to do time based calculations in your update functions  and instead do fixed updates.\n *\n * ```js\n * import { Sprite, GameLoop } from 'kontra';\n *\n * let sprite = Sprite({\n *   x: 100,\n *   y: 200,\n *   width: 20,\n *   height: 40,\n *   color: 'red'\n * });\n *\n * let loop = GameLoop({\n *   update: function(dt) {\n *     // no need to determine how many pixels you want to\n *     // move every second and multiple by dt\n *     // sprite.x += 180 * dt;\n *\n *     // instead just update by how many pixels you want\n *     // to move every frame and the loop will ensure 60FPS\n *     sprite.x += 3;\n *   },\n *   render: function() {\n *     sprite.render();\n *   }\n * });\n *\n * loop.start();\n * ```\n * @sectionName GameLoop\n *\n * @param {Object}   properties - Properties of the game loop.\n * @param {Function} properties.update - Function called every frame to update the game. Is passed the fixed `dt` as a parameter.\n * @param {Function} properties.render - Function called every frame to render the game.\n * @param {Number}   [properties.fps=60] - Desired frame rate.\n * @param {Boolean}  [properties.clearCanvas=true] - Clear the canvas every frame before the `render()` function is called.\n */\nfunction GameLoop({fps = 60, clearCanvas = true, update, render} = {}) {\n  // check for required functions\n  // @if DEBUG\n  if ( !(update && render) ) {\n    throw Error('You must provide update() and render() functions');\n  }\n  // @endif\n\n  // animation variables\n  let accumulator = 0;\n  let delta = 1E3 / fps;  // delta between performance.now timings (in ms)\n  let step = 1 / fps;\n  let clearFn = clearCanvas ? clear : noop;\n  let last, rAF, now, dt, loop;\n\n  /**\n   * Called every frame of the game loop.\n   */\n  function frame() {\n    rAF = requestAnimationFrame(frame);\n\n    now = performance.now();\n    dt = now - last;\n    last = now;\n\n    // prevent updating the game with a very large dt if the game were to lose focus\n    // and then regain focus later\n    if (dt > 1E3) {\n      return;\n    }\n\n    emit('tick');\n    accumulator += dt;\n\n    while (accumulator >= delta) {\n      loop.update(step);\n\n      accumulator -= delta;\n    }\n\n    clearFn();\n    loop.render();\n  }\n\n  // game loop object\n  loop = {\n    /**\n     * Called every frame to update the game. Put all of your games update logic here.\n     * @memberof GameLoop\n     * @function update\n     *\n     * @param {Number} dt - The fixed dt time of 1/60 of a frame.\n     */\n    update,\n\n    /**\n     * Called every frame to render the game. Put all of your games render logic here.\n     * @memberof GameLoop\n     * @function render\n     */\n    render,\n\n    /**\n     * If the game loop is currently stopped.\n     *\n     * ```js\n     * import { GameLoop } from 'kontra';\n     *\n     * let loop = GameLoop({\n     *   // ...\n     * });\n     * console.log(loop.isStopped);  //=> true\n     *\n     * loop.start();\n     * console.log(loop.isStopped);  //=> false\n     *\n     * loop.stop();\n     * console.log(loop.isStopped);  //=> true\n     * ```\n     * @memberof GameLoop\n     * @property {Boolean} isStopped\n     */\n    isStopped: true,\n\n    /**\n     * Start the game loop.\n     * @memberof GameLoop\n     * @function start\n     */\n    start() {\n      last = performance.now();\n      this.isStopped = false;\n      requestAnimationFrame(frame);\n    },\n\n    /**\n     * Stop the game loop.\n     * @memberof GameLoop\n     * @function stop\n     */\n    stop() {\n      this.isStopped = true;\n      cancelAnimationFrame(rAF);\n    },\n\n    // expose properties for testing\n    // @if DEBUG\n    _frame: frame,\n    set _last(value) {\n      last = value;\n    }\n    // @endif\n  };\n\n  return loop;\n}\n\n/**\n * A minimalistic keyboard API. You can use it move the main sprite or respond to a key press.\n *\n * ```js\n * import { initKeys, keyPressed } from 'kontra';\n *\n * // this function must be called first before keyboard\n * // functions will work\n * initKeys();\n *\n * function update() {\n *   if (keyPressed('left')) {\n *     // move left\n *   }\n * }\n * ```\n * @sectionName Keyboard\n */\n\n/**\n * Below is a list of keys that are provided by default. If you need to extend this list, you can use the [keyMap](api/keyboard#keyMap) property.\n *\n * - a-z\n * - 0-9\n * - enter, esc, space, left, up, right, down\n * @sectionName Available Keys\n */\n\nlet callbacks$1 = {};\nlet pressedKeys = {};\n\n/**\n * A map of keycodes to key names. Add to this object to expand the list of [available keys](api/keyboard#available-keys).\n *\n * ```js\n * import { keyMap, bindKeys } from 'kontra';\n *\n * keyMap[34] = 'pageDown';\n *\n * bindKeys('pageDown', function(e) {\n *   // handle pageDown key\n * });\n * ```\n * @property {Object} keyMap\n */\nlet keyMap = {\n  // named keys\n  'Enter': 'enter',\n  'Escape': 'esc',\n  'Space': 'space',\n  'ArrowLeft': 'left',\n  'ArrowUp': 'up',\n  'ArrowRight': 'right',\n  'ArrowDown': 'down',\n  // for Edge compatibility\n  13: 'enter',\n  27: 'esc',\n  32: 'space',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down'\n};\n\n/**\n * Execute a function that corresponds to a keyboard key.\n *\n * @param {KeyboardEvent} evt\n */\nfunction keydownEventHandler(evt) {\n  let key = keyMap[evt.code || evt.which];\n  pressedKeys[key] = true;\n\n  if (callbacks$1[key]) {\n    callbacks$1[key](evt);\n  }\n}\n\n/**\n * Set the released key to not being pressed.\n *\n * @param {KeyboardEvent} evt\n */\nfunction keyupEventHandler(evt) {\n  pressedKeys[ keyMap[evt.code || evt.which] ] = false;\n}\n\n/**\n * Reset pressed keys.\n */\nfunction blurEventHandler() {\n  pressedKeys = {};\n}\n\n/**\n * Initialize keyboard event listeners. This function must be called before using other keyboard functions.\n * @function initKeys\n */\nfunction initKeys() {\n  let i;\n\n  // alpha keys\n  // @see https://stackoverflow.com/a/43095772/2124254\n  for (i = 0; i < 26; i++) {\n    // rollupjs considers this a side-effect (for now), so we'll do it in the\n    // initKeys function\n    keyMap[i + 65] = keyMap['Key' + String.fromCharCode(i + 65)] = String.fromCharCode(i + 97);\n  }\n\n  // numeric keys\n  for (i = 0; i < 10; i++) {\n    keyMap[48+i] = keyMap['Digit'+i] = ''+i;\n  }\n\n  window.addEventListener('keydown', keydownEventHandler);\n  window.addEventListener('keyup', keyupEventHandler);\n  window.addEventListener('blur', blurEventHandler);\n}\n\n/**\n * Bind a set of keys that will call the callback function when they are pressed. Takes a single key or an array of keys. Is passed the original KeyboardEvent as a parameter.\n *\n * ```js\n * import { initKeys, bindKeys } from 'kontra';\n *\n * initKeys();\n *\n * bindKeys('p', function(e) {\n *   // pause the game\n * });\n * bindKeys(['enter', 'space'], function(e) {\n *   e.preventDefault();\n *   // fire gun\n * });\n * ```\n * @function bindKeys\n *\n * @param {String|String[]} keys - Key or keys to bind.\n */\nfunction bindKeys(keys, callback) {\n  // smaller than doing `Array.isArray(keys) ? keys : [keys]`\n  [].concat(keys).map(key => callbacks$1[key] = callback);\n}\n\n/**\n * Remove the callback function for a bound set of keys. Takes a single key or an array of keys.\n *\n * ```js\n * import { unbindKeys } from 'kontra';\n *\n * unbindKeys('left');\n * unbindKeys(['enter', 'space']);\n * ```\n * @function unbindKeys\n *\n * @param {String|String[]} keys - Key or keys to unbind.\n */\nfunction unbindKeys(keys) {\n  // 0 is the smallest falsy value\n  [].concat(keys).map(key => callbacks$1[key] = 0);\n}\n\n/**\n * Check if a key is currently pressed. Use during an `update()` function to perform actions each frame.\n *\n * ```js\n * import { Sprite, initKeys, keyPressed } from 'kontra';\n *\n * initKeys();\n *\n * let sprite = Sprite({\n *   update: function() {\n *     if (keyPressed('left')){\n *       // left arrow pressed\n *     }\n *     else if (keyPressed('right')) {\n *       // right arrow pressed\n *     }\n *\n *     if (keyPressed('up')) {\n *       // up arrow pressed\n *     }\n *     else if (keyPressed('down')) {\n *       // down arrow pressed\n *     }\n *   }\n * });\n * ```\n * @function keyPressed\n *\n * @param {String} key - Key to check for pressed state.\n *\n * @returns {Boolean} `true` if the key is pressed, `false` otherwise.\n */\nfunction keyPressed(key) {\n  return !!pressedKeys[key];\n}\n\n/**\n * A plugin system based on the [interceptor pattern](https://en.wikipedia.org/wiki/Interceptor_pattern), designed to share reusable code such as more advance collision detection or a 2D physics engine.\n *\n * ```js\n * import { registerPlugin, Sprite } from 'kontra';\n * import loggingPlugin from 'path/to/plugin/code.js'\n *\n * // register a plugin that adds logging to all Sprites\n * registerPlugin(Sprite, loggingPlugin);\n * ```\n * @sectionName Plugin\n */\n\n/**\n * @docs docs/api_docs/plugin.js\n */\n\n/**\n * Get the kontra object method name from the plugin.\n *\n * @param {String} methodName - Before/After function name\n *\n * @returns {String}\n */\nfunction getMethod(methodName) {\n  let methodTitle = methodName.substr( methodName.search(/[A-Z]/) );\n  return methodTitle[0].toLowerCase() + methodTitle.substr(1);\n}\n\n/**\n * Remove an interceptor.\n *\n * @param {function[]} interceptors - Before/After interceptor list\n * @param {function} fn - Interceptor function\n */\nfunction removeInterceptor(interceptors, fn) {\n  let index = interceptors.indexOf(fn);\n  if (index !== -1) {\n    interceptors.splice(index, 1);\n  }\n}\n\n/**\n * Register a plugin to run a set of functions before or after the Kontra object functions.\n * @function registerPlugin\n *\n * @param {Object} kontraObj - Kontra object to attach the plugin to.\n * @param {Object} pluginObj - Plugin object with before and after intercept functions.\n */\nfunction registerPlugin(kontraObj, pluginObj) {\n  let objectProto = kontraObj.prototype;\n\n  if (!objectProto) return;\n\n  // create interceptor list and functions\n  if (!objectProto._inc) {\n    objectProto._inc = {};\n    objectProto._bInc = function beforePlugins(context, method, ...args) {\n      return this._inc[method].before.reduce((acc, fn) => {\n        let newArgs = fn(context, ...acc);\n        return newArgs ? newArgs : acc;\n      }, args);\n    };\n    objectProto._aInc = function afterPlugins(context, method, result, ...args) {\n      return this._inc[method].after.reduce((acc, fn) => {\n        let newResult = fn(context, acc, ...args);\n        return newResult ? newResult : acc;\n      }, result);\n    };\n  }\n\n  // add plugin to interceptors\n  Object.getOwnPropertyNames(pluginObj).forEach(methodName => {\n    let method = getMethod(methodName);\n\n    if (!objectProto[method]) return;\n\n    // override original method\n    if (!objectProto['_o' + method]) {\n      objectProto['_o' + method] = objectProto[method];\n\n      objectProto[method] = function interceptedFn(...args) {\n\n        // call before interceptors\n        let alteredArgs = this._bInc(this, method, ...args);\n\n        let result = objectProto['_o' + method].call(this, ...alteredArgs);\n\n        // call after interceptors\n        return this._aInc(this, method, result, ...args);\n      };\n    }\n\n    // create interceptors for the method\n    if (!objectProto._inc[method]) {\n      objectProto._inc[method] = {\n        before: [],\n        after: []\n      };\n    }\n\n    if (methodName.startsWith('before')) {\n      objectProto._inc[method].before.push(pluginObj[methodName]);\n    }\n    else if (methodName.startsWith('after')) {\n      objectProto._inc[method].after.push(pluginObj[methodName]);\n    }\n  });\n}\n\n/**\n * Unregister a plugin from a Kontra object.\n * @function unregisterPlugin\n *\n * @param {Object} kontraObj - Kontra object to detach plugin from.\n * @param {Object} pluginObj - The plugin object that was passed during registration.\n */\nfunction unregisterPlugin(kontraObj, pluginObj) {\n  let objectProto = kontraObj.prototype;\n\n  if (!objectProto || !objectProto._inc) return;\n\n  // remove plugin from interceptors\n  Object.getOwnPropertyNames(pluginObj).forEach(methodName => {\n    let method = getMethod(methodName);\n\n    if (methodName.startsWith('before')) {\n      removeInterceptor(objectProto._inc[method].before, pluginObj[methodName]);\n    }\n    else if (methodName.startsWith('after')) {\n      removeInterceptor(objectProto._inc[method].after, pluginObj[methodName]);\n    }\n  });\n}\n\n/**\n * Safely extend the functionality of a Kontra object. Any properties that already exist on the Kontra object will not be added.\n *\n * ```js\n * import { extendObject, Vector } from 'kontra';\n *\n * // add a subtract function to all Vectors\n * extendObject(Vector, {\n *   subtract(vec) {\n *     return Vector(this.x - vec.x, this.y - vec.y);\n *   }\n * });\n * ```\n * @function extendObject\n *\n * @param {Object} kontraObj - Kontra object to extend\n * @param {Object} properties - Properties to add.\n */\nfunction extendObject(kontraObj, properties) {\n  let objectProto = kontraObj.prototype;\n\n  if (!objectProto) return;\n\n  Object.getOwnPropertyNames(properties).forEach(prop => {\n    if (!objectProto[prop]) {\n      objectProto[prop] = properties[prop];\n    }\n  });\n}\n\n/**\n * A simple pointer API. You can use it move the main sprite or respond to a pointer event. Works with both mouse and touch events.\n *\n * Pointer events can be added on a global level or on individual sprites or objects. Before an object can receive pointer events, you must tell the pointer which objects to track and the object must haven been rendered to the canvas using `object.render()`.\n *\n * After an object is tracked and rendered, you can assign it an `onDown()`, `onUp()`, or `onOver()` functions which will be called whenever a pointer down, up, or over event happens on the object.\n *\n * ```js\n * import { initPointer, track, Sprite } from 'kontra';\n *\n * // this function must be called first before pointer\n * // functions will work\n * initPointer();\n *\n * let sprite = Sprite({\n *   onDown: function() {\n *     // handle on down events on the sprite\n *   },\n *   onUp: function() {\n *     // handle on up events on the sprite\n *   },\n *   onOver: function() {\n *     // handle on over events on the sprite\n *   }\n * });\n *\n * track(sprite);\n * sprite.render();\n * ```\n *\n * By default, the pointer is treated as a circle and will check for collisions against objects assuming they are rectangular (have a width and height property).\n *\n * If you need to perform a different type of collision detection, assign the object a `collidesWithPointer()` function and it will be called instead. The function is passed the pointer object. Use this function to determine how the pointer circle should collide with the object.\n *\n * ```js\n * import { Sprite } from 'kontra';\n\n * let sprite = Srite({\n *   x: 10,\n *   y: 10,\n *   radius: 10\n *   collidesWithPointer: function(pointer) {\n *     // perform a circle v circle collision test\n *     let dx = pointer.x - this.x;\n *     let dy = pointer.y - this.y;\n *     return Math.sqrt(dx * dx + dy * dy) < this.radius;\n *   }\n * });\n * ```\n * @sectionName Pointer\n */\n\n// save each object as they are rendered to determine which object\n// is on top when multiple objects are the target of an event.\n// we'll always use the last frame's object order so we know\n// the finalized order of all objects, otherwise an object could ask\n// if it's being hovered when it's rendered first even if other objects\n// would block it later in the render order\nlet thisFrameRenderOrder = [];\nlet lastFrameRenderOrder = [];\n\nlet callbacks$2 = {};\nlet trackedObjects = [];\nlet pressedButtons = {};\n\n/**\n * Below is a list of buttons that you can use.\n *\n * - left, middle, right\n * @sectionName Available Buttons\n */\nlet buttonMap = {\n  0: 'left',\n  1: 'middle',\n  2: 'right'\n};\n\n/**\n * Object containing the `radius` and current `x` and `y` position of the pointer relative to the top-left corner of the canvas.\n *\n * ```js\n * import { initPointer, pointer } from 'kontra';\n *\n * initPointer();\n *\n * console.log(pointer);  //=> { x: 100, y: 200, radius: 5 };\n * ```\n * @property {Object} pointer\n */\nlet pointer = {\n  x: 0,\n  y: 0,\n  radius: 5  // arbitrary size\n};\n\n/**\n * Detection collision between a rectangle and a circlevt.\n * @see https://yal.cc/rectangle-circle-intersection-test/\n *\n * @param {Object} object - Object to check collision against.\n */\nfunction circleRectCollision(object, _pntr) {\n  const pntr = _pntr || pointer;\n\n  let x = object.x;\n  let y = object.y;\n  if (object.anchor) {\n    x -= object.width * object.anchor.x;\n    y -= object.height * object.anchor.y;\n  }\n\n  let dx = pntr.x - Math.max(x, Math.min(pntr.x, x + object.width));\n  let dy = pntr.y - Math.max(y, Math.min(pntr.y, y + object.height));\n  return (dx * dx + dy * dy) < (pntr.radius * pntr.radius);\n}\n\n/**\n * Get the first on top object that the pointer collides with.\n *\n * @returns {Object} First object to collide with the pointer.\n */\nfunction getCurrentObject(_pntr) {\n  const pntr = _pntr || pointer;\n\n  // if pointer events are required on the very first frame or without a game\n  // loop, use the current frame order array\n  let frameOrder = (lastFrameRenderOrder.length ? lastFrameRenderOrder : thisFrameRenderOrder);\n  let length = frameOrder.length - 1;\n  let object, collides;\n\n  for (let i = length; i >= 0; i--) {\n    object = frameOrder[i];\n\n    if (object.collidesWithPointer) {\n      collides = object.collidesWithPointer(pntr);\n    }\n    else {\n      collides = circleRectCollision(object, pntr);\n    }\n\n    if (collides) {\n      return object;\n    }\n  }\n}\n\n/**\n * Execute the onDown callback for an object.\n *\n * @param {MouseEvent|TouchEvent} evt\n */\nfunction pointerDownHandler(evt) {\n\n  // touchstart should be treated like a left mouse button\n  let button = evt.button !== undefined ? buttonMap[evt.button] : 'left';\n  pressedButtons[button] = true;\n  pointerHandler(evt, 'onDown');\n}\n\n/**\n * Execute the onUp callback for an object.\n *\n * @param {MouseEvent|TouchEvent} evt\n */\nfunction pointerUpHandler(evt) {\n  let button = evt.button !== undefined ? buttonMap[evt.button] : 'left';\n  pressedButtons[button] = false;\n  pointerHandler(evt, 'onUp');\n}\n\n/**\n * Track the position of the mousevt.\n *\n * @param {MouseEvent|TouchEvent} evt\n */\nfunction mouseMoveHandler(evt) {\n  pointerHandler(evt, 'onOver');\n}\n\n/**\n * Reset pressed buttons.\n */\nfunction blurEventHandler$1() {\n  pressedButtons = {};\n}\n\n/**\n * Find the first object for the event and execute it's callback function\n *\n * @param {MouseEvent|TouchEvent} evt\n * @param {string} eventName - Which event was called.\n */\nfunction pointerHandler(evt, eventName) {\n  let canvas = getCanvas();\n\n  if (!canvas) return;\n\n  let clientX, clientY;\n  let ratio = canvas.height / canvas.offsetHeight;\n  let rect = canvas.getBoundingClientRect();\n\n  let isTouchEvent = ['touchstart', 'touchmove', 'touchend'].indexOf(evt.type) !== -1;\n  if (isTouchEvent) {\n    // Update pointer.touches\n    pointer.touches = {};\n    for (var i = 0; i < evt.touches.length; i++) {\n      pointer.touches[evt.touches[i].identifier] = {\n        id: evt.touches[i].identifier,\n        x: (evt.touches[i].clientX - rect.left) * ratio,\n        y: (evt.touches[i].clientY - rect.top) * ratio,\n        changed: false\n      };\n    }\n    // Handle all touches\n    for (var i = evt.changedTouches.length; i--;) {\n      const id = evt.changedTouches[i].identifier;\n      if (typeof pointer.touches[id] !== \"undefined\") {\n        pointer.touches[id].changed = true;\n      }\n\n      clientX = evt.changedTouches[i].clientX; // Save for later\n      clientY = evt.changedTouches[i].clientY;\n\n      // Trigger events\n      let object = getCurrentObject({\n        id,\n        x: (clientX - rect.left) * ratio,\n        y: (clientY - rect.top) * ratio,\n        radius: pointer.radius // only for collision\n      });\n\n      if (object && object[eventName]) {\n        object[eventName](evt);\n      }\n\n      if (callbacks$2[eventName]) {\n        callbacks$2[eventName](evt, object);\n      }\n    }\n  } else {\n    clientX = evt.clientX;\n    clientY = evt.clientY;\n  }\n\n  pointer.x = (clientX - rect.left) * ratio;\n  pointer.y = (clientY - rect.top) * ratio;\n\n  evt.preventDefault();\n\n  if (!isTouchEvent) { // Prevent double touch event\n    let object = getCurrentObject();\n    if (object && object[eventName]) {\n      object[eventName](evt);\n    }\n\n    if (callbacks$2[eventName]) {\n      callbacks$2[eventName](evt, object);\n    }\n  }\n}\n\n/**\n * Initialize pointer event listeners. This function must be called before using other pointer functions.\n * @function initPointer\n */\nfunction initPointer() {\n  let canvas = getCanvas();\n\n  canvas.addEventListener('mousedown', pointerDownHandler);\n  canvas.addEventListener('touchstart', pointerDownHandler);\n  canvas.addEventListener('mouseup', pointerUpHandler);\n  canvas.addEventListener('touchend', pointerUpHandler);\n  canvas.addEventListener('touchcancel', pointerUpHandler);\n  canvas.addEventListener('blur', blurEventHandler$1);\n  canvas.addEventListener('mousemove', mouseMoveHandler);\n  canvas.addEventListener('touchmove', mouseMoveHandler);\n\n  // reset object render order on every new frame\n  on('tick', () => {\n    lastFrameRenderOrder.length = 0;\n\n    thisFrameRenderOrder.map(object => {\n      lastFrameRenderOrder.push(object);\n    });\n\n    thisFrameRenderOrder.length = 0;\n  });\n}\n\n/**\n * Begin tracking pointer events for a set of objects. Takes a single object or an array of objects.\n *\n * ```js\n * import { initPointer, track } from 'kontra';\n *\n * initPointer();\n *\n * track(obj);\n * track([obj1, obj2]);\n * ```\n * @function track\n *\n * @param {Object|Object[]} objects - Objects to track.\n */\nfunction track(objects) {\n  [].concat(objects).map(object => {\n\n    // override the objects render function to keep track of render order\n    if (!object._r) {\n      object._r = object.render;\n\n      object.render = function() {\n        thisFrameRenderOrder.push(this);\n        this._r();\n      };\n\n      trackedObjects.push(object);\n    }\n  });\n}\n\n/**\n* Remove the callback function for a bound set of objects.\n *\n * ```js\n * import { untrack } from 'kontra';\n *\n * untrack(obj);\n * untrack([obj1, obj2]);\n * ```\n * @function untrack\n *\n * @param {Object|Object[]} objects - Object or objects to stop tracking.\n */\nfunction untrack(objects) {\n  [].concat(objects).map(object => {\n\n    // restore original render function to no longer track render order\n    object.render = object._r;\n    object._r = 0;  // 0 is the shortest falsy value\n\n    let index = trackedObjects.indexOf(object);\n    if (index !== -1) {\n      trackedObjects.splice(index, 1);\n    }\n  });\n}\n\n/**\n * Check to see if the pointer is currently over the object. Since multiple objects may be rendered on top of one another, only the top most object under the pointer will return true.\n *\n * ```js\n * import { initPointer, track, pointer, pointerOver, Sprite } from 'kontra';\n *\n * initPointer();\n *\n * let sprite1 = Sprite({\n *   x: 10,\n *   y: 10,\n *   width: 10,\n *   height: 10\n * });\n * let sprite2 = Sprite({\n *   x: 15,\n *   y: 10,\n *   width: 10,\n *   height: 10\n * });\n *\n * track([sprite1, sprite2]);\n *\n * sprite1.render();\n * sprite2.render();\n *\n * pointer.x = 14;\n * pointer.y = 15;\n *\n * console.log(pointerOver(sprite1));  //=> false\n * console.log(pointerOver(sprite2));  //=> true\n * ```\n * @function pointerOver\n *\n * @param {Object} object - The object to check if the pointer is over.\n *\n * @returns {Boolean} `true` if the pointer is currently over the object, `false` otherwise.\n */\nfunction pointerOver(object) {\n  if (!trackedObjects.includes(object)) return false;\n\n  return getCurrentObject() === object;\n}\n\n/**\n * Register a function to be called on all pointer down events. Is passed the original Event and the target object (if there is one).\n *\n * ```js\n * import { initPointer, onPointerDown } from 'kontra';\n *\n * initPointer();\n *\n * onPointerDown(function(e, object) {\n *   // handle pointer down\n * })\n * ```\n * @function onPointerDown\n *\n * @param {Function} callback - Function to call on pointer down.\n */\nfunction onPointerDown(callback) {\n  callbacks$2.onDown = callback;\n}\n\n/**\n* Register a function to be called on all pointer up events. Is passed the original Event and the target object (if there is one).\n *\n * ```js\n * import { initPointer, onPointerUp } from 'kontra';\n *\n * initPointer();\n *\n * onPointerUp(function(e, object) {\n *   // handle pointer up\n * })\n * ```\n * @function onPointerUp\n *\n * @param {Function} callback - Function to call on pointer up.\n */\nfunction onPointerUp(callback) {\n  callbacks$2.onUp = callback;\n}\n\n/**\n * Check if a button is currently pressed. Use during an `update()` function to perform actions each frame.\n *\n * ```js\n * import { initPointer, pointerPressed } from 'kontra';\n *\n * initPointer();\n *\n * Sprite({\n *   update: function() {\n *     if (pointerPressed('left')){\n *       // left mouse button pressed\n *     }\n *     else if (pointerPressed('right')) {\n *       // right mouse button pressed\n *     }\n *   }\n * });\n * ```\n * @function pointerPressed\n *\n * @param {String} button - Button to check for pressed state.\n *\n * @returns {Boolean} `true` if the button is pressed, `false` otherwise.\n */\nfunction pointerPressed(button) {\n  return !!pressedButtons[button]\n}\n\n/**\n * A fast and memory efficient [object pool](https://gameprogrammingpatterns.com/object-pool.html) for sprite reuse. Perfect for particle systems or SHUMPs. The pool starts out with just one object, but will grow in size to accommodate as many objects as are needed.\n *\n * <canvas width=\"600\" height=\"200\" id=\"pool-example\"></canvas>\n * <script src=\"assets/js/pool.js\"></script>\n * @class Pool\n *\n * @param {Object} properties - Properties of the pool.\n * @param {Function} properties.create - Function that returns a new object to be added to the pool when there are no more alive objects.\n * @param {Number} [properties.maxSize=1024] - The maximum number of objects allowed in the pool. The pool will never grow beyond this size.\n */\nclass Pool {\n  /**\n   * @docs docs/api_docs/pool.js\n   */\n\n  constructor({create, maxSize = 1024} = {}) {\n\n    // check for the correct structure of the objects added to pools so we know that the\n    // rest of the pool code will work without errors\n    // @if DEBUG\n    let obj;\n    if (!create ||\n        ( !( obj = create() ) ||\n          !( obj.update && obj.init &&\n             obj.isAlive )\n       )) {\n      throw Error('Must provide create() function which returns an object with init(), update(), and isAlive() functions');\n    }\n    // @endif\n\n    // c = create\n    this._c = create;\n\n    /**\n     * All objects currently in the pool, both alive and not alive.\n     * @memberof Pool\n     * @property {Object[]} objects\n     */\n    this.objects = [create()]; // start the pool with an object\n\n    /**\n     * The number of alive objects.\n     * @memberof Pool\n     * @property {Number} size\n     */\n    this.size = 0;\n\n    /**\n     * The maximum number of objects allowed in the pool. The pool will never grow beyond this size.\n     * @memberof Pool\n     * @property {Number} maxSize\n     */\n    this.maxSize = maxSize;\n  }\n\n  /**\n   * Get and return an object from the pool. The properties parameter will be passed directly to the objects `init()` function. If you're using a kontra.Sprite, you should also pass the `ttl` property to designate how many frames you want the object to be alive for.\n   *\n   * If you want to control when the sprite is ready for reuse, pass `Infinity` for `ttl`. You'll need to set the sprites `ttl` to `0` when you're ready for the sprite to be reused.\n   *\n   * ```js\n   * // exclude-tablist\n   * let sprite = pool.get({\n   *   // the object will get these properties and values\n   *   x: 100,\n   *   y: 200,\n   *   width: 20,\n   *   height: 40,\n   *   color: 'red',\n   *\n   *   // pass Infinity for ttl to prevent the object from being reused\n   *   // until you set it back to 0\n   *   ttl: Infinity\n   * });\n   * ```\n   * @memberof Pool\n   * @function get\n   *\n   * @param {Object} properties - Properties to pass to the objects `init()` function.\n   *\n   * @returns {Object} The newly initialized object.\n   */\n  get(properties = {}) {\n    // the pool is out of objects if the first object is in use and it can't grow\n    if (this.size === this.objects.length) {\n      if (this.size === this.maxSize) {\n        return;\n      }\n      // double the size of the array by adding twice as many new objects to the end\n      else {\n        for (let i = 0; i < this.size && this.objects.length < this.maxSize; i++) {\n          this.objects.push(this._c());\n        }\n      }\n    }\n\n    // save off first object in pool to reassign to last object after unshift\n    let obj = this.objects[this.size];\n    this.size++;\n    obj.init(properties);\n    return obj;\n  }\n\n  /**\n   * Returns an array of all alive objects. Useful if you need to do special processing on all alive objects outside of the pool, such as add all alive objects to a kontra.Quadtree.\n   * @memberof Pool\n   * @function getAliveObjects\n   *\n   * @returns {Object[]} An Array of all alive objects.\n   */\n  getAliveObjects() {\n    return this.objects.slice(0, this.size);\n  }\n\n  /**\n   * Clear the object pool. Removes all objects from the pool and resets its [size](api/pool#size) to 1.\n   * @memberof Pool\n   * @function clear\n   */\n  clear() {\n    this.size = this.objects.length = 0;\n    this.objects.push(this._c());\n  }\n\n  /**\n   * Update all alive objects in the pool by calling the objects `update()` function. This function also manages when each object should be recycled, so it is recommended that you do not call the objects `update()` function outside of this function.\n   * @memberof Pool\n   * @function update\n   *\n   * @param {Number} [dt] - Time since last update.\n   */\n  update(dt) {\n    let obj;\n    let doSort = false;\n    for (let i = this.size; i--; ) {\n      obj = this.objects[i];\n\n      obj.update(dt);\n\n      if (!obj.isAlive()) {\n        doSort = true;\n        this.size--;\n      }\n    }\n    // sort all dead elements to the end of the pool\n    if (doSort) {\n      this.objects.sort((a, b) => b.isAlive() - a.isAlive());\n    }\n  }\n\n  /**\n   * Render all alive objects in the pool by calling the objects `render()` function.\n   * @memberof Pool\n   * @function render\n   */\n  render() {\n    for (let i = this.size; i--; ) {\n      this.objects[i].render();\n    }\n  }\n}\n\nfunction poolFactory(properties) {\n  return new Pool(properties);\n}\npoolFactory.prototype = Pool.prototype;\npoolFactory.class = Pool;\n\n/**\n * Determine which subnodes the object intersects with\n *\n * @param {Object} object - Object to check.\n * @param {Object} bounds - Bounds of the quadtree.\n *\n * @returns {Number[]} List of all subnodes object intersects.\n */\nfunction getIndices(object, bounds) {\n  let indices = [];\n\n  let verticalMidpoint = bounds.x + bounds.width / 2;\n  let horizontalMidpoint = bounds.y + bounds.height / 2;\n\n  // save off quadrant checks for reuse\n  let intersectsTopQuadrants = object.y < horizontalMidpoint && object.y + object.height >= bounds.y;\n  let intersectsBottomQuadrants = object.y + object.height >= horizontalMidpoint && object.y < bounds.y + bounds.height;\n\n  // object intersects with the left quadrants\n  if (object.x < verticalMidpoint && object.x + object.width >= bounds.x) {\n    if (intersectsTopQuadrants) {  // top left\n      indices.push(0);\n    }\n\n    if (intersectsBottomQuadrants) {  // bottom left\n      indices.push(2);\n    }\n  }\n\n  // object intersects with the right quadrants\n  if (object.x + object.width >= verticalMidpoint && object.x < bounds.x + bounds.width) {  // top right\n    if (intersectsTopQuadrants) {\n      indices.push(1);\n    }\n\n    if (intersectsBottomQuadrants) {  // bottom right\n      indices.push(3);\n    }\n  }\n\n  return indices;\n}\n\n/*\nThe quadtree acts like an object pool in that it will create subnodes as objects are needed but it won't clean up the subnodes when it collapses to avoid garbage collection.\n\nThe quadrant indices are numbered as follows (following a z-order curve):\n     |\n  0  |  1\n ----+----\n  2  |  3\n     |\n*/\n\n\n/**\n * A 2D [spatial partitioning](https://gameprogrammingpatterns.com/spatial-partition.html) data structure. Use it to quickly group objects by their position for faster access and collision checking.\n *\n * <canvas width=\"600\" height=\"200\" id=\"quadtree-example\"></canvas>\n * <script src=\"assets/js/quadtree.js\"></script>\n * @class Quadtree\n *\n * @param {Object} properties - Properties of the quadtree.\n * @param {Number} [properties.maxDepth=3] - Maximum node depth of the quadtree.\n * @param {Number} [properties.maxObjects=25] - Maximum number of objects a node can have before splitting.\n * @param {Object} [properties.bounds] - The 2D space (x, y, width, height) the quadtree occupies. Defaults to the entire canvas width and height.\n */\nclass Quadtree {\n  /**\n   * @docs docs/api_docs/quadtree.js\n   */\n\n  constructor({maxDepth = 3, maxObjects = 25, bounds} = {}) {\n\n    /**\n     * Maximum node depth of the quadtree.\n     * @memberof Quadtree\n     * @property {Number} maxDepth\n     */\n    this.maxDepth = maxDepth;\n\n    /**\n     * Maximum number of objects a node can have before splitting.\n     * @memberof Quadtree\n     * @property {Number} maxObjects\n     */\n    this.maxObjects = maxObjects;\n\n    /**\n     * The 2D space (x, y, width, height) the quadtree occupies.\n     * @memberof Quadtree\n     * @property {Object} bounds\n     */\n    let canvas = getCanvas();\n    this.bounds = bounds || {\n      x: 0,\n      y: 0,\n      width: canvas.width,\n      height: canvas.height\n    };\n\n    // since we won't clean up any subnodes, we need to keep track of which nodes are\n    // currently the leaf node so we know which nodes to add objects to\n    // b = branch, d = depth, o = objects, s = subnodes, p = parent\n    this._b = false;\n    this._d = 0;\n    this._o = [];\n    this._s = [];\n    this._p = null;\n  }\n\n  /**\n   * Removes all objects from the quadtree. You should clear the quadtree every frame before adding all objects back into it.\n   * @memberof Quadtree\n   * @function clear\n   */\n  clear() {\n    this._s.map(function(subnode) {\n      subnode.clear();\n    });\n\n    this._b = false;\n    this._o.length = 0;\n  }\n\n  /**\n   * Get an array of all objects that belong to the same node as the passed in object.\n   *\n   * **Note:** if the passed in object is also part of the quadtree, it will not be returned in the results.\n   *\n   * ```js\n   * import { Sprite, Quadtree } from 'kontra';\n   *\n   * let quadtree = Quadtree();\n   * let player = Sprite({\n   *   // ...\n   * });\n   * let enemy1 = Sprite({\n   *   // ...\n   * });\n   * let enemy2 = Sprite({\n   *   // ...\n   * });\n   *\n   * quadtree.add(player, enemy1, enemy2);\n   * quadtree.get(player);  //=> [enemy1]\n   * ```\n   * @memberof Quadtree\n   * @function get\n   *\n   * @param {Object} object - Object to use for finding other objects. The object must have the properties `x`, `y`, `width`, and `height` so that its position in the quadtree can be calculated.\n   *\n   * @returns {Object[]} A list of objects in the same node as the object, not including the object itself.\n   */\n  get(object) {\n    // since an object can belong to multiple nodes we should not add it multiple times\n    let objects = new Set();\n    let indices, i;\n\n    // traverse the tree until we get to a leaf node\n    while (this._s.length && this._b) {\n      indices = getIndices(object, this.bounds);\n\n      for (i = 0; i < indices.length; i++) {\n        this._s[ indices[i] ].get(object).forEach(obj => objects.add(obj));\n      }\n\n      return Array.from(objects);\n    }\n\n    // don't add the object to the return list\n    return this._o.filter(obj => obj !== object);\n  }\n\n  /**\n   * Add objects to the quadtree and group them by their position. Can take a single object, a list of objects, and an array of objects.\n   *\n   * ```js\n   * import { Quadtree, Sprite, Pool, GameLoop } from 'kontra';\n   *\n   * let quadtree = Quadtree();\n   * let bulletPool = Pool({\n   *   create: Sprite\n   * });\n   *\n   * let player = Sprite({\n   *   // ...\n   * });\n   * let enemy = Sprite({\n   *   // ...\n   * });\n   *\n   * // create some bullets\n   * for (let i = 0; i < 100; i++) {\n   *   bulletPool.get({\n   *     // ...\n   *   });\n   * }\n   *\n   * let loop = GameLoop({\n   *   update: function() {\n   *     quadtree.clear();\n   *     quadtree.add(player, enemy, bulletPool.getAliveObjects());\n   *   }\n   * });\n   * ```\n   * @memberof Quadtree\n   * @function add\n   *\n   * @param {Object|Object[]} objectsN - Objects to add to the quadtree.\n   */\n  add() {\n    let i, j, object, obj;\n\n    for (j = 0; j < arguments.length; j++) {\n      object = arguments[j];\n\n      // add a group of objects separately\n      if (Array.isArray(object)) {\n        this.add.apply(this, object);\n\n        continue;\n      }\n\n      // current node has subnodes, so we need to add this object into a subnode\n      if (this._b) {\n        this._a(object);\n\n        continue;\n      }\n\n      // this node is a leaf node so add the object to it\n      this._o.push(object);\n\n      // split the node if there are too many objects\n      if (this._o.length > this.maxObjects && this._d < this.maxDepth) {\n        this._sp();\n\n        // move all objects to their corresponding subnodes\n        for (i = 0; (obj = this._o[i]); i++) {\n          this._a(obj);\n        }\n\n        this._o.length = 0;\n      }\n    }\n  }\n\n  /**\n   * Add an object to a subnode.\n   *\n   * @param {Object} object - Object to add into a subnode\n   */\n  // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#use-placeholder-arguments-instead-of-var\n  _a(object, indices, i) {\n    indices = getIndices(object, this.bounds);\n\n    // add the object to all subnodes it intersects\n    for (i = 0; i < indices.length; i++) {\n      this._s[ indices[i] ].add(object);\n    }\n  }\n\n  /**\n   * Split the node into four subnodes.\n   */\n  // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#use-placeholder-arguments-instead-of-var\n  _sp(subWidth, subHeight, i) {\n    this._b = true;\n\n    // only split if we haven't split before\n    if (this._s.length) {\n      return;\n    }\n\n    subWidth = this.bounds.width / 2 | 0;\n    subHeight = this.bounds.height / 2 | 0;\n\n    for (i = 0; i < 4; i++) {\n      this._s[i] = quadtreeFactory({\n        bounds: {\n          x: this.bounds.x + (i % 2 === 1 ? subWidth : 0),  // nodes 1 and 3\n          y: this.bounds.y + (i >= 2 ? subHeight : 0),      // nodes 2 and 3\n          width: subWidth,\n          height: subHeight\n        },\n        maxDepth: this.maxDepth,\n        maxObjects: this.maxObjects,\n      });\n\n      // d = depth, p = parent\n      this._s[i]._d = this._d+1;\n      /* @if VISUAL_DEBUG */\n      this._s[i]._p = this;\n      /* @endif */\n    }\n  }\n\n  /**\n   * Draw the quadtree. Useful for visual debugging.\n   */\n   /* @if VISUAL_DEBUG **\n   render() {\n     // don't draw empty leaf nodes, always draw branch nodes and the first node\n     if (this._o.length || this._d === 0 ||\n         (this._p && this._p._b)) {\n\n       context.strokeStyle = 'red';\n       context.strokeRect(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height);\n\n       if (this._s.length) {\n         for (let i = 0; i < 4; i++) {\n           this._s[i].render();\n         }\n       }\n     }\n   }\n   /* @endif */\n}\n\nfunction quadtreeFactory(properties) {\n  return new Quadtree(properties);\n}\nquadtreeFactory.prototype = Quadtree.prototype;\nquadtreeFactory.class = Quadtree;\n\n/**\n * A simple 2d vector object.\n *\n * ```js\n * import { Vector } from 'kontra';\n *\n * let vector = Vector(100, 200);\n * ```\n * @class Vector\n *\n * @param {Number} [x=0] - X coordinate of the vector.\n * @param {Number} [y=0] - Y coordinate of the vector.\n */\nclass Vector {\n  constructor(x = 0, y = 0) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * Return a new Vector whose value is the addition of the current Vector and the passed in Vector. If `dt` is provided, the result is multiplied by the value.\n   * @memberof Vector\n   * @function add\n   *\n   * @param {kontra.Vector} vector - Vector to add to the current Vector.\n   * @param {Number} [dt=1] - Time since last update.\n   *\n   * @returns {kontra.Vector} A new kontra.Vector instance.\n   */\n  add(vec, dt = 1) {\n    return vectorFactory(\n      this.x + (vec.x || 0) * dt,\n      this.y + (vec.y || 0) * dt,\n      this\n    );\n  }\n\n  /**\n   * Clamp the Vector between two points, preventing `x` and `y` from going below or above the minimum and maximum values. Perfect for keeping a sprite from going outside the game boundaries.\n   *\n   * ```js\n   * import { Vector } from 'kontra';\n   *\n   * let vector = Vector(100, 200);\n   * vector.clamp(0, 0, 200, 300);\n   *\n   * vector.x += 200;\n   * console.log(vector.x);  //=> 200\n   *\n   * vector.y -= 300;\n   * console.log(vector.y);  //=> 0\n   *\n   * vector.add({x: -500, y: 500});\n   * console.log(vector);    //=> {x: 0, y: 300}\n   * ```\n   * @memberof Vector\n   * @function clamp\n   *\n   * @param {Number} xMin - Minimum x value.\n   * @param {Number} yMin - Minimum y value.\n   * @param {Number} xMax - Maximum x value.\n   * @param {Number} yMax - Maximum y value.\n   */\n  clamp(xMin, yMin, xMax, yMax) {\n    this._c = true;\n    this._a = xMin;\n    this._b = yMin;\n    this._d = xMax;\n    this._e = yMax;\n  }\n\n  /**\n   * X coordinate of the vector.\n   * @memberof Vector\n   * @property {Number} x\n   */\n  get x() {\n    return this._x;\n  }\n\n  /**\n   * Y coordinate of the vector.\n   * @memberof Vector\n   * @property {Number} y\n   */\n  get y() {\n    return this._y;\n  }\n\n  set x(value) {\n    this._x = (this._c ? Math.min( Math.max(this._a, value), this._d ) : value);\n  }\n\n  set y(value) {\n    this._y = (this._c ? Math.min( Math.max(this._b, value), this._e ) : value);\n  }\n}\n\nfunction vectorFactory(x, y, vec = {}) {\n  let vector = new Vector(x, y);\n\n  // preserve vector clamping when creating new vectors\n  if (vec._c) {\n    vector.clamp(vec._a, vec._b, vec._d, vec._e);\n\n    // reset x and y so clamping takes effect\n    vector.x = x;\n    vector.y = y;\n  }\n\n  return vector;\n}\nvectorFactory.prototype = Vector.prototype;\nvectorFactory.class = Vector;\n\n/**\n * A versatile way to update and draw your game objects. It can handle simple rectangles, images, and sprite sheet animations. It can be used for your main player object as well as tiny particles in a particle engine.\n * @class Sprite\n *\n * @param {Object} properties - Properties of the sprite.\n * @param {Number} properties.x - X coordinate of the position vector.\n * @param {Number} properties.y - Y coordinate of the position vector.\n * @param {Number} [properties.dx] - X coordinate of the velocity vector.\n * @param {Number} [properties.dy] - Y coordinate of the velocity vector.\n * @param {Number} [properties.ddx] - X coordinate of the acceleration vector.\n * @param {Number} [properties.ddy] - Y coordinate of the acceleration vector.\n *\n * @param {String} [properties.color] - Fill color for the sprite if no image or animation is provided.\n * @param {Number} [properties.width] - Width of the sprite.\n * @param {Number} [properties.height] - Height of the sprite.\n *\n * @param {Number} [properties.ttl=Infinity] - How many frames the sprite should be alive. Used by kontra.Pool.\n * @param {Number} [properties.rotation=0] - Sprites rotation around the origin in radians.\n * @param {Number} [properties.anchor={x:0,y:0}] - The x and y origin of the sprite. {x:0, y:0} is the top left corner of the sprite, {x:1, y:1} is the bottom right corner.\n *\n * @param {Canvas​Rendering​Context2D} [properties.context] - The context the sprite should draw to. Defaults to [core.getContext()](api/core#getContext).\n *\n * @param {Image|HTMLCanvasElement} [properties.image] - Use an image to draw the sprite.\n * @param {Object} [properties.animations] - An object of [Animations](api/animation) from a kontra.Spritesheet to animate the sprite.\n *\n * @param {Function} [properties.update] - Function called every frame to update the sprite.\n * @param {Function} [properties.render] - Function called every frame to render the sprite.\n * @param {*} [properties.*] - Any additional properties you need added to the sprite. For example, if you pass `Sprite({type: 'player'})` then the sprite will also have a property of the same name and value. You can pass as many additional properties as you want.\n */\nclass Sprite {\n  /**\n   * @docs docs/api_docs/sprite.js\n   */\n\n  constructor(properties) {\n    this.init(properties);\n  }\n\n  /**\n   * Use this function to reinitialize a sprite. It takes the same properties object as the constructor. Useful it you want to repurpose a sprite.\n   * @memberof Sprite\n   * @function init\n   *\n   * @param {Object} properties - Properties of the sprite.\n   */\n  init(properties = {}) {\n    let { x, y, dx, dy, ddx, ddy, width, height, image } = properties;\n\n    /**\n     * The sprites position vector. The sprites position is its position in the world, as opposed to the position in the [viewport](api/sprite#viewX). Typically the position in the world and the viewport are the same value. If the sprite has been [added to a tileEngine](/api/tileEngine#addObject), the position vector represents where in the tile world the sprite is while the viewport represents where to draw the sprite in relation to the top-left corner of the canvas.\n     * @memberof Sprite\n     * @property {kontra.Vector} position\n     */\n    this.position = vectorFactory(x, y);\n\n    /**\n     * The sprites velocity vector.\n     * @memberof Sprite\n     * @property {kontra.Vector} velocity\n     */\n    this.velocity = vectorFactory(dx, dy);\n\n    /**\n     * The sprites acceleration vector.\n     * @memberof Sprite\n     * @property {kontra.Vector} acceleration\n     */\n    this.acceleration = vectorFactory(ddx, ddy);\n\n    // defaults\n\n    // sx = flipX, sy = flipY\n    this._fx = this._fy = 1;\n\n    /**\n     * The rotation of the sprite around the origin in radians.\n     * @memberof Sprite\n     * @property {Number} rotation\n     */\n    this.width = this.height = this.rotation = 0;\n\n    /**\n     * How may frames the sprite should be alive. Primarily used by kontra.Pool to know when to recycle an object.\n     * @memberof Sprite\n     * @property {Number} ttl\n     */\n    this.ttl = Infinity;\n\n    /**\n     * The x and y origin of the sprite. {x:0, y:0} is the top left corner of the sprite, {x:1, y:1} is the bottom right corner.\n     * @memberof Sprite\n     * @property {Object} anchor\n     *\n     * @example\n     * // exclude-code:start\n     * let { Sprite } = kontra;\n     * // exclude-code:end\n     * // exclude-script:start\n     * import { Sprite } from 'kontra';\n     * // exclude-script:end\n     *\n     * let sprite = Sprite({\n     *   x: 150,\n     *   y: 100,\n     *   color: 'red',\n     *   width: 50,\n     *   height: 50,\n     *   // exclude-code:start\n     *   context: context,\n     *   // exclude-code:end\n     *   render: function() {\n     *     this.draw();\n     *\n     *     // draw origin\n     *     this.context.fillStyle = 'yellow';\n     *     this.context.beginPath();\n     *     this.context.arc(this.x, this.y, 3, 0, 2*Math.PI);\n     *     this.context.fill();\n     *   }\n     * });\n     * sprite.render();\n     *\n     * sprite.anchor = {x: 0.5, y: 0.5};\n     * sprite.x = 300;\n     * sprite.render();\n     *\n     * sprite.anchor = {x: 1, y: 1};\n     * sprite.x = 450;\n     * sprite.render();\n     */\n    this.anchor = {x: 0, y: 0};\n\n    /**\n     * The context the sprite will draw to.\n     * @memberof Sprite\n     * @property {Canvas​Rendering​Context2D} context\n     */\n    this.context = getContext();\n\n    /**\n     * The color of the sprite if it was passed as an argument.\n     * @memberof Sprite\n     * @property {String} color\n     */\n\n     /**\n     * The image the sprite will use when drawn if passed as an argument.\n     * @memberof Sprite\n     * @property {Image|HTMLCanvasElement} image\n     */\n\n    // add all properties to the sprite, overriding any defaults\n    for (let prop in properties) {\n      this[prop] = properties[prop];\n    }\n\n    // image sprite\n    if (image) {\n      this.width = (width !== undefined) ? width : image.width;\n      this.height = (height !== undefined) ? height : image.height;\n    }\n\n    /**\n     * The X coordinate of the camera. Used to determine [viewX](api/sprite#viewX).\n     * @memberof Sprite\n     * @property {Number} sx\n     */\n    this.sx = 0;\n\n    /**\n     * The Y coordinate of the camera. Used to determine [viewY](api/sprite#viewY).\n     * @memberof Sprite\n     * @property {Number} sy\n     */\n    this.sy = 0;\n  }\n\n  // define getter and setter shortcut functions to make it easier to work with the\n  // position, velocity, and acceleration vectors.\n\n  /**\n   * X coordinate of the position vector.\n   * @memberof Sprite\n   * @property {Number} x\n   */\n  get x() {\n    return this.position.x;\n  }\n\n  /**\n   * Y coordinate of the position vector.\n   * @memberof Sprite\n   * @property {Number} y\n   */\n  get y() {\n    return this.position.y;\n  }\n\n  /**\n   * X coordinate of the velocity vector.\n   * @memberof Sprite\n   * @property {Number} dx\n   */\n  get dx() {\n    return this.velocity.x;\n  }\n\n  /**\n   * Y coordinate of the velocity vector.\n   * @memberof Sprite\n   * @property {Number} dy\n   */\n  get dy() {\n    return this.velocity.y;\n  }\n\n  /**\n   * X coordinate of the acceleration vector.\n   * @memberof Sprite\n   * @property {Number} ddx\n   */\n  get ddx() {\n    return this.acceleration.x;\n  }\n\n  /**\n   * Y coordinate of the acceleration vector.\n   * @memberof Sprite\n   * @property {Number} ddy\n   */\n  get ddy() {\n    return this.acceleration.y;\n  }\n\n  /**\n   * An object of [Animations](api/animation) from a kontra.SpriteSheet to animate the sprite. Each animation is named so that it can can be used by name for the sprites [playAnimation()](api/sprite#playAnimation) function.\n   *\n   * ```js\n   * import { Sprite, SpriteSheet } from 'kontra';\n   *\n   * let spriteSheet = SpriteSheet({\n   *   // ...\n   *   animations: {\n   *     idle: {\n   *       frames: 1,\n   *       loop: false,\n   *     },\n   *     walk: {\n   *       frames: [1,2,3]\n   *     }\n   *   }\n   * });\n   *\n   * let sprite = Sprite({\n   *   x: 100,\n   *   y: 200,\n   *   animations: spriteSheet.animations\n   * });\n   *\n   * sprite.playAnimation('idle');\n   * ```\n   * @memberof Sprite\n   * @property {Object} animations\n   */\n  get animations() {\n    return this._a;\n  }\n\n  /**\n   * Readonly. X coordinate of where to draw the sprite. Typically the same value as the [position vector](api/sprite#position) unless the sprite has been [added to a tileEngine](api/tileEngine#addObject).\n   * @memberof Sprite\n   * @property {Number} viewX\n   */\n  get viewX() {\n    return this.x - this.sx;\n  }\n\n  /**\n   * Readonly. Y coordinate of where to draw the sprite. Typically the same value as the [position vector](api/sprite#position) unless the sprite has been [added to a tileEngine](api/tileEngine#addObject).\n   * @memberof Sprite\n   * @property {Number} viewY\n   */\n  get viewY() {\n    return this.y - this.sy;\n  }\n\n  /**\n   * The width of the sprite. If the sprite is a [rectangle sprite](api/sprite#rectangle-sprite), it uses the passed in value. For an [image sprite](api/sprite#image-sprite) it is the width of the image. And for an [animation sprite](api/sprite#animation-sprite) it is the width of a single frame of the animation.\n   *\n   * Setting the value to a negative number will result in the sprite being flipped across the vertical axis while the width will remain a positive value.\n   * @memberof Sprite\n   * @property {Number} width\n   */\n  get width() {\n    return this._w;\n  }\n\n  /**\n   * The height of the sprite. If the sprite is a [rectangle sprite](api/sprite#rectangle-sprite), it uses the passed in value. For an [image sprite](api/sprite#image-sprite) it is the height of the image. And for an [animation sprite](api/sprite#animation-sprite) it is the height of a single frame of the animation.\n   *\n   * Setting the value to a negative number will result in the sprite being flipped across the horizontal axis while the height will remain a positive value.\n   * @memberof Sprite\n   * @property {Number} height\n   */\n  get height() {\n    return this._h;\n  }\n\n  set x(value) {\n    this.position.x = value;\n  }\n  set y(value) {\n    this.position.y = value;\n  }\n  set dx(value) {\n    this.velocity.x = value;\n  }\n  set dy(value) {\n    this.velocity.y = value;\n  }\n  set ddx(value) {\n    this.acceleration.x = value;\n  }\n  set ddy(value) {\n    this.acceleration.y = value;\n  }\n\n  set animations(value) {\n    let prop, firstAnimation;\n    // a = animations\n    this._a = {};\n\n    // clone each animation so no sprite shares an animation\n    for (prop in value) {\n      this._a[prop] = value[prop].clone();\n\n      // default the current animation to the first one in the list\n      firstAnimation = firstAnimation || this._a[prop];\n    }\n\n    /**\n     * The currently playing Animation object if `animations` was passed as an argument.\n     * @memberof Sprite\n     * @property {kontra.Animation} currentAnimation\n     */\n    this.currentAnimation = firstAnimation;\n    this.width = this.width || firstAnimation.width;\n    this.height = this.height || firstAnimation.height;\n  }\n\n  // readonly\n  set viewX(value) {\n    return;\n  }\n  set viewY(value) {\n    return;\n  }\n\n  set width(value) {\n    let sign = value < 0 ? -1 : 1;\n\n    this._fx = sign;\n    this._w = value * sign;\n  }\n  set height(value) {\n    let sign = value < 0 ? -1 : 1;\n\n    this._fy = sign;\n    this._h = value * sign;\n  }\n\n  /**\n   * Check if the sprite is alive. Primarily used by kontra.Pool to know when to recycle an object.\n   * @memberof Sprite\n   * @function isAlive\n   *\n   * @returns {Boolean} `true` if the sprites [ttl](api/sprite#ttl) property is above `0`, `false` otherwise.\n   */\n  isAlive() {\n    return this.ttl > 0;\n  }\n\n  /**\n   * Check if the sprite collide with the object. Uses a simple [Axis-Aligned Bounding Box (AABB) collision check](https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection#Axis-Aligned_Bounding_Box). Takes into account the sprites [anchor](api/sprite#anchor).\n   *\n   * **NOTE:** Does not take into account sprite rotation. If you need collision detection between rotated sprites you will need to implement your own `collidesWith()` function. I suggest looking at the Separate Axis Theorem.\n   *\n   * ```js\n   * import { Sprite } from 'kontra';\n   *\n   * let sprite = Sprite({\n   *   x: 100,\n   *   y: 200,\n   *   width: 20,\n   *   height: 40\n   * });\n   *\n   * let sprite2 = Sprite({\n   *   x: 150,\n   *   y: 200,\n   *   width: 20,\n   *   height: 20\n   * });\n   *\n   * sprite.collidesWith(sprite2);  //=> false\n   *\n   * sprite2.x = 115;\n   *\n   * sprite.collidesWith(sprite2);  //=> true\n   * ```\n   *\n   * If you need a different type of collision check, you can override this function by passing an argument by the same name.\n   *\n   * ```js\n   * // circle collision\n   * function collidesWith(object) {\n   *   let dx = this.x - object.x;\n   *   let dy = this.y - object.y;\n   *   let distance = Math.sqrt(dx * dx + dy * dy);\n   *\n   *   return distance < this.radius + object.radius;\n   * }\n   *\n   * let sprite = Sprite({\n   *   x: 100,\n   *   y: 200,\n   *   radius: 25,\n   *   collidesWith: collidesWith\n   * });\n   *\n   * let sprite2 = Sprite({\n   *   x: 150,\n   *   y: 200,\n   *   radius: 30,\n   *   collidesWith: collidesWith\n   * });\n   *\n   * sprite.collidesWith(sprite2);  //=> true\n   * ```\n   * @memberof Sprite\n   * @function collidesWith\n   *\n   * @param {Object} object - Object to check collision against.\n   *\n   * @returns {Boolean|null} `true` if the objects collide, `false` otherwise. Will return `null` if the either of the two objects are rotated.\n   */\n  collidesWith(object) {\n    if (this.rotation || object.rotation) return null;\n\n    // take into account sprite anchors\n    let x = this.x - this.width * this.anchor.x;\n    let y = this.y - this.height * this.anchor.y;\n\n    let objX = object.x;\n    let objY = object.y;\n    if (object.anchor) {\n      objX -= object.width * object.anchor.x;\n      objY -= object.height * object.anchor.y;\n    }\n\n    return x < objX + object.width &&\n           x + this.width > objX &&\n           y < objY + object.height &&\n           y + this.height > objY;\n  }\n\n  /**\n   * Update the sprites position based on its velocity and acceleration. Calls the sprites [advance()](api/sprite#advance) function.\n   * @memberof Sprite\n   * @function update\n   *\n   * @param {Number} [dt] - Time since last update.\n   */\n  update(dt) {\n    this.advance(dt);\n  }\n\n  /**\n   * Render the sprite. Calls the sprites [draw()](api/sprite#draw) function.\n   * @memberof Sprite\n   * @function render\n   */\n  render() {\n    this.draw();\n  }\n\n  /**\n   * Set the currently playing animation of an animation sprite.\n   *\n   * ```js\n   * import { Sprite, SpriteSheet } from 'kontra';\n   *\n   * let spriteSheet = SpriteSheet({\n   *   // ...\n   *   animations: {\n   *     idle: {\n   *       frames: 1\n   *     },\n   *     walk: {\n   *       frames: [1,2,3]\n   *     }\n   *   }\n   * });\n   *\n   * let sprite = Sprite({\n   *   x: 100,\n   *   y: 200,\n   *   animations: spriteSheet.animations\n   * });\n   *\n   * sprite.playAnimation('idle');\n   * ```\n   * @memberof Sprite\n   * @function playAnimation\n   *\n   * @param {String} name - Name of the animation to play.\n   */\n  playAnimation(name) {\n    this.currentAnimation = this.animations[name];\n\n    if (!this.currentAnimation.loop) {\n      this.currentAnimation.reset();\n    }\n  }\n\n  /**\n   * Move the sprite by its acceleration and velocity. If the sprite is an [animation sprite](api/sprite#animation-sprite), it also advances the animation every frame.\n   *\n   * If you override the sprites [update()](api/sprite#update) function with your own update function, you can call this function to move the sprite normally.\n   *\n   * ```js\n   * import { Sprite } from 'kontra';\n   *\n   * let sprite = Sprite({\n   *   x: 100,\n   *   y: 200,\n   *   width: 20,\n   *   height: 40,\n   *   dx: 5,\n   *   dy: 2,\n   *   update: function() {\n   *     // move the sprite normally\n   *     sprite.advance();\n   *\n   *     // change the velocity at the edges of the canvas\n   *     if (this.x < 0 ||\n   *         this.x + this.width > this.context.canvas.width) {\n   *       this.dx = -this.dx;\n   *     }\n   *     if (this.y < 0 ||\n   *         this.y + this.height > this.context.canvas.height) {\n   *       this.dy = -this.dy;\n   *     }\n   *   }\n   * });\n   * ```\n   * @memberof Sprite\n   * @function advance\n   *\n   * @param {Number} [dt] - Time since last update.\n   *\n   */\n  advance(dt) {\n    this.velocity = this.velocity.add(this.acceleration, dt);\n    this.position = this.position.add(this.velocity, dt);\n\n    this.ttl--;\n\n    if (this.currentAnimation) {\n      this.currentAnimation.update(dt);\n    }\n  }\n\n  /**\n   * Draw the sprite at its X and Y position. This function changes based on the type of the sprite. For a [rectangle sprite](api/sprite#rectangle-sprite), it uses `context.fillRect()`, for an [image sprite](api/sprite#image-sprite) it uses `context.drawImage()`, and for an [animation sprite](api/sprite#animation-sprite) it uses the [currentAnimation](api/sprite#currentAnimation) `render()` function.\n   *\n   * If you override the sprites `render()` function with your own render function, you can call this function to draw the sprite normally.\n   *\n   * ```js\n   * import { Sprite } from 'kontra';\n   *\n   * let sprite = Sprite({\n   *  x: 290,\n   *  y: 80,\n   *  color: 'red',\n   *  width: 20,\n   *  height: 40,\n   *\n   *  render: function() {\n   *    // draw the rectangle sprite normally\n   *    this.draw();\n   *\n   *    // outline the sprite\n   *    this.context.strokeStyle = 'yellow';\n   *    this.context.lineWidth = 2;\n   *    this.context.strokeRect(this.x, this.y, this.width, this.height);\n   *  }\n   * });\n   *\n   * sprite.render();\n   * ```\n   * @memberof Sprite\n   * @function draw\n   */\n  draw() {\n    let anchorWidth = -this.width * this.anchor.x;\n    let anchorHeight = -this.height * this.anchor.y;\n\n    this.context.save();\n    this.context.translate(this.viewX, this.viewY);\n\n    // rotate around the anchor\n    if (this.rotation) {\n      this.context.rotate(this.rotation);\n    }\n\n    // flip sprite around the center so the x/y position does not change\n    if (this._fx == -1 || this._fy == -1) {\n      let x = this.width / 2 + anchorWidth;\n      let y = this.height / 2 + anchorHeight;\n\n      this.context.translate(x, y);\n      this.context.scale(this._fx, this._fy);\n      this.context.translate(-x, -y);\n    }\n\n    if (this.image) {\n      this.context.drawImage(\n        this.image,\n        0, 0, this.image.width, this.image.height,\n        anchorWidth, anchorHeight, this.width, this.height\n      );\n    }\n    else if (this.currentAnimation) {\n      this.currentAnimation.render({\n        x: anchorWidth,\n        y: anchorHeight,\n        width: this.width,\n        height: this.height,\n        context: this.context\n      });\n    }\n    else {\n      this.context.fillStyle = this.color;\n      this.context.fillRect(anchorWidth, anchorHeight, this.width, this.height);\n    }\n\n    this.context.restore();\n  }\n}\n\nfunction spriteFactory(properties) {\n  return new Sprite(properties);\n}\nspriteFactory.prototype = Sprite.prototype;\nspriteFactory.class = Sprite;\n\n/**\n * Parse a string of consecutive frames.\n *\n * @param {Number|String} frames - Start and end frame.\n *\n * @returns {Number|Number[]} List of frames.\n */\nfunction parseFrames(consecutiveFrames) {\n  // return a single number frame\n  // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#coercion-to-test-for-types\n  if (+consecutiveFrames === consecutiveFrames) {\n    return consecutiveFrames;\n  }\n\n  let sequence = [];\n  let frames = consecutiveFrames.split('..');\n\n  // coerce string to number\n  // @see https://github.com/jed/140bytes/wiki/Byte-saving-techniques#coercion-to-test-for-types\n  let start = +frames[0];\n  let end = +frames[1];\n  let i = start;\n\n  // ascending frame order\n  if (start < end) {\n    for (; i <= end; i++) {\n      sequence.push(i);\n    }\n  }\n  // descending order\n  else {\n    for (; i >= end; i--) {\n      sequence.push(i);\n    }\n  }\n\n  return sequence;\n}\n\n/**\n * A sprite sheet to animate a sequence of images. Used to create [animation sprites](api/sprite#animation-sprite).\n *\n * <figure>\n *   <a href=\"assets/imgs/character_walk_sheet.png\">\n *     <img src=\"assets/imgs/character_walk_sheet.png\" alt=\"11 frames of a walking pill-like alien wearing a space helmet.\">\n *   </a>\n *   <figcaption>Sprite sheet image courtesy of <a href=\"https://kenney.nl/assets\">Kenney</a>.</figcaption>\n * </figure>\n *\n * Typically you create a sprite sheet just to create animations and then use the animations for your sprite.\n *\n * ```js\n * import { Sprite, SpriteSheet } from 'kontra';\n *\n * let image = new Image();\n * image.src = 'assets/imgs/character_walk_sheet.png';\n * image.onload = function() {\n *   let spriteSheet = SpriteSheet({\n *     image: image,\n *     frameWidth: 72,\n *     frameHeight: 97,\n *     animations: {\n *       // create a named animation: walk\n *       walk: {\n *         frames: '0..9',  // frames 0 through 9\n *         frameRate: 30\n *       }\n *     }\n *   });\n *\n *   let sprite = Sprite({\n *     x: 200,\n *     y: 100,\n *\n *     // use the sprite sheet animations for the sprite\n *     animations: spriteSheet.animations\n *   });\n * };\n * ```\n * @class SpriteSheet\n *\n * @param {Object} properties - Properties of the sprite sheet.\n * @param {Image|HTMLCanvasElement} properties.image - The sprite sheet image.\n * @param {Number} properties.frameWidth - The width of a single frame.\n * @param {Number} properties.frameHeight - The height of a single frame.\n * @param {Number} [properties.frameMargin=0] - The amount of whitespace between each frame.\n * @param {Object} [properties.animations] - Animations to create from the sprite sheet using kontra.Animation. Passed directly into the sprite sheets [createAnimations()](api/spriteSheet#createAnimations) function.\n */\nclass SpriteSheet {\n  constructor({image, frameWidth, frameHeight, frameMargin, animations} = {}) {\n    // @if DEBUG\n    if (!image) {\n      throw Error('You must provide an Image for the SpriteSheet');\n    }\n    // @endif\n\n    /**\n     * An object of named kontra.Animation objects. Typically you pass this object into kontra.Sprite to create an [animation sprites](api/spriteSheet#animation-sprite).\n     * @memberof SpriteSheet\n     * @property {Object} animations\n     */\n    this.animations = {};\n\n    /**\n     * The sprite sheet image.\n     * @memberof SpriteSheet\n     * @property {Image|HTMLCanvasElement} image\n     */\n    this.image = image;\n\n    /**\n     * An object that defines properties of a single frame in the sprite sheet. It has properties of `width`, `height`, and `margin`.\n     *\n     * `width` and `height` are the width of a single frame, while `margin` defines the amount of whitespace between each frame.\n     * @memberof SpriteSheet\n     * @property {Object} frame\n     */\n    this.frame = {\n      width: frameWidth,\n      height: frameHeight,\n      margin: frameMargin\n    };\n\n    // f = framesPerRow\n    this._f = image.width / frameWidth | 0;\n\n    this.createAnimations(animations);\n  }\n\n  /**\n   * Create named animations from the sprite sheet. Called from the constructor if the `animations` argument is passed.\n   *\n   * This function populates the sprite sheets `animations` property with kontra.Animation objects. Each animation is accessible by its name.\n   *\n   * ```js\n   * import { Sprite, SpriteSheet } from 'kontra';\n   *\n   * let image = new Image();\n   * image.src = 'assets/imgs/character_walk_sheet.png';\n   * image.onload = function() {\n   *\n   *   let spriteSheet = SpriteSheet({\n   *     image: image,\n   *     frameWidth: 72,\n   *     frameHeight: 97,\n   *\n   *     // this will also call createAnimations()\n   *     animations: {\n   *       // create 1 animation: idle\n   *       idle: {\n   *         // a single frame\n   *         frames: 1\n   *       }\n   *     }\n   *   });\n   *\n   *   spriteSheet.createAnimations({\n   *     // create 4 animations: jump, walk, moonWalk, attack\n   *     jump: {\n   *       // sequence of frames (can be non-consecutive)\n   *       frames: [1, 10, 1],\n   *       frameRate: 10,\n   *       loop: false,\n   *     },\n   *     walk: {\n   *       // ascending consecutive frame animation (frames 2-6, inclusive)\n   *       frames: '2..6',\n   *       frameRate: 20\n   *     },\n   *     moonWalk: {\n   *       // descending consecutive frame animation (frames 6-2, inclusive)\n   *       frames: '6..2',\n   *       frameRate: 20\n   *     },\n   *     attack: {\n   *       // you can also mix and match, in this case frames [8,9,10,13,10,9,8]\n   *       frames: ['8..10', 13, '10..8'],\n   *       frameRate: 10,\n   *       loop: false,\n   *     }\n   *   });\n   * };\n   * ```\n   * @memberof SpriteSheet\n   * @function createAnimations\n   *\n   * @param {Object} animations - Object of named animations to create from the sprite sheet.\n   * @param {Number|String|Number[]|String[]} animations.<name>.frames - The sequence of frames to use from the sprite sheet. It can either be a single frame (`1`), a sequence of frames (`[1,2,3,4]`), or a consecutive frame notation (`'1..4'`). Sprite sheet frames are `0` indexed.\n   * @param {Number} animations.<name>.frameRate - The number frames to display per second.\n   * @param {Boolean} [animations.<name>.loop=true] - If the animation should loop back to the beginning once completed.\n   */\n  createAnimations(animations) {\n    let sequence, name;\n\n    for (name in animations) {\n      let { frames, frameRate, loop } = animations[name];\n\n      // array that holds the order of the animation\n      sequence = [];\n\n      // @if DEBUG\n      if (frames === undefined) {\n        throw Error('Animation ' + name + ' must provide a frames property');\n      }\n      // @endif\n\n      // add new frames to the end of the array\n      [].concat(frames).map(frame => {\n        sequence = sequence.concat(parseFrames(frame));\n      });\n\n      this.animations[name] = animationFactory({\n        spriteSheet: this,\n        frames: sequence,\n        frameRate,\n        loop\n      });\n    }\n  }\n}\n\nfunction spriteSheetFactory(properties) {\n  return new SpriteSheet(properties);\n}\nspriteSheetFactory.prototype = SpriteSheet.prototype;\nspriteSheetFactory.class = SpriteSheet;\n\n/**\n * A simple interface to LocalStorage based on [store.js](https://github.com/marcuswestin/store.js), whose sole purpose is to ensure that any keys you save to LocalStorage come out the same type as when they went in.\n *\n * Normally when you save something to LocalStorage, it converts it into a string. So if you were to save a number, it would be saved as `\"12\"` instead of `12`. This means when you retrieved the number, it would now be a string.\n *\n * ```js\n * import { setStoreItem, getStoreItem } from 'kontra';\n *\n * setStoreItem('highScore', 100);\n * getStoreItem('highScore');  //=> 100\n * ```\n * @sectionName Store\n */\n\n/**\n * Save an item to localStorage.\n * @function setStoreItem\n *\n * @param {String} key - The name of the key.\n * @param {*} value - The value to store.\n */\nfunction setStoreItem(key, value) {\n  if (value === undefined) {\n    localStorage.removeItem(key);\n  }\n  else {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}\n\n/**\n * Retrieve an item from localStorage and convert it back to its original type.\n * @function getStoreItem\n *\n * @param {String} key - Name of the key of the item to retrieve.\n *\n * @returns {*} The retrieved item.\n */\nfunction getStoreItem(key) {\n  let value = localStorage.getItem(key);\n\n  try {\n    value = JSON.parse(value);\n  }\n  catch(e) {}\n\n  return value;\n}\n\n/**\n * A tile engine for managing and drawing tilesets.\n *\n * <figure>\n *   <a href=\"assets/imgs/mapPack_tilesheet.png\">\n *     <img src=\"assets/imgs/mapPack_tilesheet.png\" alt=\"Tileset to create an overworld map in various seasons.\">\n *   </a>\n *   <figcaption>Tileset image courtesy of <a href=\"https://kenney.nl/assets\">Kenney</a>.</figcaption>\n * </figure>\n * @sectionName TileEngine\n *\n * @param {Object} properties - Properties of the tile engine.\n * @param {Number} properties.width - Width of the tile map (in number of tiles).\n * @param {Number} properties.height - Height of the tile map (in number of tiles).\n * @param {Number} properties.tilewidth - Width of a single tile (in pixels).\n * @param {Number} properties.tileheight - Height of a single tile (in pixels).\n * @param {Canvas​Rendering​Context2D} [properties.context] - The context the tile engine should draw to. Defaults to [core.getContext()](api/core#getContext)\n *\n * @param {Object[]} properties.tilesets - Array of tileset objects.\n * @param {Number} properties.tilesetN.firstgid - First tile index of the tileset. The first tileset will have a firstgid of 1 as 0 represents an empty tile.\n * @param {String|HTMLImageElement} properties.tilesetN.image - Relative path to the HTMLImageElement or an HTMLImageElement. If passing a relative path, the image file must have been [loaded](api/assets#load) first.\n * @param {Number} [properties.tilesetN.margin=0] - The amount of whitespace between each tile (in pixels).\n * @param {Number} [properties.tilesetN.tilewidth] - Width of the tileset (in pixels). Defaults to properties.tilewidth.\n * @param {Number} [properties.tilesetN.tileheight] - Height of the tileset (in pixels). Defaults to properties.tileheight.\n * @param {String} [properties.tilesetN.source] - Relative path to the source JSON file. The source JSON file must have been [loaded](api/assets#load) first.\n * @param {Number} [properties.tilesetN.columns] - Number of columns in the tileset image.\n *\n * @param {Object[]} properties.layers - Array of layer objects.\n * @param {String} properties.layerN.name - Unique name of the layer.\n * @param {Number[]} properties.layerN.data - 1D array of tile indices.\n * @param {Boolean} [properties.layerN.visible=true] - If the layer should be drawn or not.\n * @param {Number} [properties.layerN.opacity=1] - Percent opacity of the layer.\n */\n\n/**\n * @docs docs/api_docs/tileEngine.js\n */\n\nfunction TileEngine(properties = {}) {\n  let {\n    width,\n    height,\n    tilewidth,\n    tileheight,\n    context = getContext(),\n    tilesets,\n    layers\n  } = properties;\n\n  let mapwidth = width * tilewidth;\n  let mapheight = height * tileheight;\n\n  // create an off-screen canvas for pre-rendering the map\n  // @see http://jsperf.com/render-vs-prerender\n  let offscreenCanvas = document.createElement('canvas');\n  let offscreenContext = offscreenCanvas.getContext('2d');\n  offscreenCanvas.width = mapwidth;\n  offscreenCanvas.height = mapheight;\n\n  // map layer names to data\n  let layerMap = {};\n  let layerCanvases = {};\n\n  // objects added to tile engine to sync with the camera\n  let objects = [];\n\n  /**\n   * The width of tile map (in tiles).\n   * @memberof TileEngine\n   * @property {Number} width\n   */\n\n  /**\n   * The height of tile map (in tiles).\n   * @memberof TileEngine\n   * @property {Number} height\n   */\n\n  /**\n   * The width a tile (in pixels).\n   * @memberof TileEngine\n   * @property {Number} tilewidth\n   */\n\n  /**\n   * The height of a tile (in pixels).\n   * @memberof TileEngine\n   * @property {Number} tileheight\n   */\n\n  /**\n   * Array of all layers of the tile engine.\n   * @memberof TileEngine\n   * @property {Object[]} layers\n   */\n\n  /**\n   * Array of all tilesets of the tile engine.\n   * @memberof TileEngine\n   * @property {Object[]} tilesets\n   */\n\n  let tileEngine = Object.assign({\n\n    /**\n     * The context the tile engine will draw to.\n     * @memberof TileEngine\n     * @property {CanvasRenderingContext2D} context\n     */\n    context: context,\n\n    /**\n     * The width of the tile map (in pixels).\n     * @memberof TileEngine\n     * @property {Number} mapwidth\n     */\n    mapwidth: mapwidth,\n\n    /**\n     * The height of the tile map (in pixels).\n     * @memberof TileEngine\n     * @property {Number} mapheight\n     */\n    mapheight: mapheight,\n    _sx: 0,\n    _sy: 0,\n\n\n    // d = dirty\n    _d: false,\n\n    /**\n     * X coordinate of the tile map camera.\n     * @memberof TileEngine\n     * @property {Number} sx\n     */\n    get sx() {\n      return this._sx;\n    },\n\n    /**\n     * Y coordinate of the tile map camera.\n     * @memberof TileEngine\n     * @property {Number} sy\n     */\n    get sy() {\n      return this._sy;\n    },\n\n    // when clipping an image, sx and sy must within the image region, otherwise\n    // Firefox and Safari won't draw it.\n    // @see http://stackoverflow.com/questions/19338032/canvas-indexsizeerror-index-or-size-is-negative-or-greater-than-the-allowed-a\n    set sx(value) {\n      this._sx = Math.min( Math.max(0, value), mapwidth - getCanvas().width );\n      objects.forEach(obj => obj.sx = this._sx);\n    },\n\n    set sy(value) {\n      this._sy = Math.min( Math.max(0, value), mapheight - getCanvas().height );\n      objects.forEach(obj => obj.sy = this._sy);\n    },\n\n    /**\n     * Render all visible layers.\n     * @memberof TileEngine\n     * @function render\n     */\n    render() {\n      if (this._d) {\n        this._d = false;\n        this._p();\n      }\n\n      render(offscreenCanvas);\n    },\n\n    /**\n     * Render a specific layer by name.\n     * @memberof TileEngine\n     * @function renderLayer\n     *\n     * @param {String} name - Name of the layer to render.\n     */\n    renderLayer(name) {\n      let canvas = layerCanvases[name];\n      let layer = layerMap[name];\n\n      if (!canvas) {\n        // cache the rendered layer so we can render it again without redrawing\n        // all tiles\n        canvas = document.createElement('canvas');\n        canvas.width = mapwidth;\n        canvas.height = mapheight;\n\n        layerCanvases[name] = canvas;\n        tileEngine._r(layer, canvas.getContext('2d'));\n      }\n\n      if (layer._d) {\n        layer._d = false;\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n        tileEngine._r(layer, canvas.getContext('2d'));\n      }\n\n      render(canvas);\n    },\n\n    /**\n     * Check if the object collides with the layer (shares a gird coordinate with any positive tile index in layers data). The object being checked must have the properties `x`, `y`, `width`, and `height` so that its position in the grid can be calculated. kontra.Sprite defines these properties for you.\n     *\n     * ```js\n     * import { TileEngine, Sprite } from 'kontra';\n     *\n     * let tileEngine = TileEngine({\n     *   tilewidth: 32,\n     *   tileheight: 32,\n     *   width: 4,\n     *   height: 4,\n     *   tilesets: [{\n     *     // ...\n     *   }],\n     *   layers: [{\n     *     name: 'collision',\n     *     data: [ 0,0,0,0,\n     *             0,1,4,0,\n     *             0,2,5,0,\n     *             0,0,0,0 ]\n     *   }]\n     * });\n     *\n     * let sprite = Sprite({\n     *   x: 50,\n     *   y: 20,\n     *   width: 5,\n     *   height: 5\n     * });\n     *\n     * tileEngine.layerCollidesWith('collision', sprite);  //=> false\n     *\n     * sprite.y = 28;\n     *\n     * tileEngine.layerCollidesWith('collision', sprite);  //=> true\n     * ```\n     * @memberof TileEngine\n     * @function layerCollidesWith\n     *\n     * @param {String} name - The name of the layer to check for collision.\n     * @param {Object} object - Object to check collision against.\n     *\n     * @returns {boolean} `true` if the object collides with a tile, `false` otherwise.\n     */\n    layerCollidesWith(name, object) {\n      let x = object.x;\n      let y = object.y;\n      if (object.anchor) {\n        x -= object.width * object.anchor.x;\n        y -= object.height * object.anchor.y;\n      }\n\n      let row = getRow(y);\n      let col = getCol(x);\n      let endRow = getRow(y + object.height);\n      let endCol = getCol(x + object.width);\n\n      let layer = layerMap[name];\n\n      // check all tiles\n      for (let r = row; r <= endRow; r++) {\n        for (let c = col; c <= endCol; c++) {\n          if (layer.data[c + r * this.width]) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the tile at the specified layer using either x and y coordinates or row and column coordinates.\n     *\n     * ```js\n     * import { TileEngine } from 'kontra';\n     *\n     * let tileEngine = TileEngine({\n     *   tilewidth: 32,\n     *   tileheight: 32,\n     *   width: 4,\n     *   height: 4,\n     *   tilesets: [{\n     *     // ...\n     *   }],\n     *   layers: [{\n     *     name: 'collision',\n     *     data: [ 0,0,0,0,\n     *             0,1,4,0,\n     *             0,2,5,0,\n     *             0,0,0,0 ]\n     *   }]\n     * });\n     *\n     * tileEngine.tileAtLayer('collision', {x: 50, y: 50});  //=> 1\n     * tileEngine.tileAtLayer('collision', {row: 2, col: 1});  //=> 2\n     * ```\n     * @memberof TileEngine\n     * @function tileAtLayer\n     *\n     * @param {String} name - Name of the layer.\n     * @param {Object} position - Position of the tile in either {x, y} or {row, col} coordinates.\n     *\n     * @returns {Number} The tile index. Will return `-1` if no layer exists by the provided name.\n     */\n    tileAtLayer(name, position) {\n      let row = position.row || getRow(position.y);\n      let col = position.col || getCol(position.x);\n\n      if (layerMap[name]) {\n        return layerMap[name].data[col + row * tileEngine.width];\n      }\n\n      return -1;\n    },\n\n    /**\n     * Set the tile at the specified layer using either x and y coordinates or row and column coordinates.\n     *\n     * ```js\n     * import { TileEngine } from 'kontra';\n     *\n     * let tileEngine = TileEngine({\n     *   tilewidth: 32,\n     *   tileheight: 32,\n     *   width: 4,\n     *   height: 4,\n     *   tilesets: [{\n     *     // ...\n     *   }],\n     *   layers: [{\n     *     name: 'collision',\n     *     data: [ 0,0,0,0,\n     *             0,1,4,0,\n     *             0,2,5,0,\n     *             0,0,0,0 ]\n     *   }]\n     * });\n     *\n     * tileEngine.setTileAtLayer('collision', {row: 2, col: 1}, 10);\n     * tileEngine.tileAtLayer('collision', {row: 2, col: 1});  //=> 10\n     * ```\n     * @memberof TileEngine\n     * @function setTileAtLayer\n     *\n     * @param {String} name - Name of the layer.\n     * @param {Object} position - Position of the tile in either {x, y} or {row, col} coordinates.\n     * @param {Number} tile - Tile index to set.\n     */\n    setTileAtLayer(name, position, tile) {\n      let row = position.row || getRow(position.y);\n      let col = position.col || getCol(position.x);\n\n      if (layerMap[name]) {\n        layerMap[name]._d = true;\n        layerMap[name].data[col + row * tileEngine.width] = tile;\n      }\n    },\n\n    /**\n    * Set the data at the specified layer.\n    * \n    * ```js\n    * import { TileEngine } from 'kontra';\n    *\n    * let tileEngine = TileEngine({\n    *   tilewidth: 32,\n    *   tileheight: 32,\n    *   width: 2,\n    *   height: 2,\n    *   tilesets: [{\n    *     // ...\n    *   }],\n    *   layers: [{\n    *     name: 'collision',\n    *     data: [ 0,1,\n    *             2,3 ]\n    *   }]\n    * });\n    *\n    * tileEngine.setLayer('collision', [ 4,5,6,7]);\n    * tileEngine.tileAtLayer('collision', {row: 0, col: 0});  //=> 4\n    * tileEngine.tileAtLayer('collision', {row: 0, col: 1});  //=> 5\n    * tileEngine.tileAtLayer('collision', {row: 1, col: 0});  //=> 6\n    * tileEngine.tileAtLayer('collision', {row: 1, col: 1});  //=> 7\n    * ```\n    * \n    * @memberof TileEngine\n    * @function setLayer\n    * \n    * @param {String} name - Name of the layer.\n    * @param {Number[]} data - 1D array of tile indices.\n    */\n    setLayer(name, data) {\n      if (layerMap[name]) {\n        layerMap[name]._d = true;\n        layerMap[name].data = data;\n      }\n    },\n\n\n\n    /**\n     * Add an object to the tile engine. The tile engine will set the objects camera position (`sx`, `sy`) to be in sync with the tile engine camera. kontra.Sprite uses this information to draw the sprite to the correct position on the canvas.\n     * @memberof TileEngine\n     * @function addObject\n     *\n     * @param {Object} object - Object to add to the tile engine.\n     */\n    addObject(object) {\n      objects.push(object);\n      object.sx = this._sx;\n      object.sy = this._sy;\n    },\n\n    /**\n     * Remove an object from the tile engine.\n     * @memberof TileEngine\n     * @function removeObject\n     *\n     * @param {Object} object - Object to remove from the tile engine.\n     */\n    removeObject(object) {\n      let index = objects.indexOf(object);\n      if (index !== -1) {\n        objects.splice(index, 1);\n        object.sx = object.sy = 0;\n      }\n    },\n\n    // expose for testing\n    _r: renderLayer,\n    _p: prerender,\n\n    // @if DEBUG\n    layerCanvases: layerCanvases,\n    layerMap: layerMap\n    // @endif\n  }, properties);\n\n  // resolve linked files (source, image)\n  tileEngine.tilesets.map(tileset => {\n    // get the url of the Tiled JSON object (in this case, the properties object)\n    let url = (window.__k ? window.__k.dm.get(properties) : '') || window.location.href;\n\n    if (tileset.source) {\n      // @if DEBUG\n      if (!window.__k) {\n        throw Error(`You must use \"load\" or \"loadData\" to resolve tileset.source`);\n      }\n      // @endif\n\n      let source = window.__k.d[window.__k.u(tileset.source, url)];\n\n      // @if DEBUG\n      if (!source) {\n        throw Error(`You must load the tileset source \"${tileset.source}\" before loading the tileset`);\n      }\n      // @endif\n\n      Object.keys(source).map(key => {\n        tileset[key] = source[key];\n      });\n    }\n\n    if (''+tileset.image === tileset.image) {\n      // @if DEBUG\n      if (!window.__k) {\n        throw Error(`You must use \"load\" or \"loadImage\" to resolve tileset.image`);\n      }\n      // @endif\n\n      let image = window.__k.i[window.__k.u(tileset.image, url)];\n\n      // @if DEBUG\n      if (!image) {\n        throw Error(`You must load the image \"${tileset.image}\" before loading the tileset`);\n      }\n      // @endif\n\n      tileset.image = image;\n    }\n  });\n\n  /**\n   * Get the row from the y coordinate.\n   * @private\n   *\n   * @param {Number} y - Y coordinate.\n   *\n   * @return {Number}\n   */\n  function getRow(y) {\n    return y / tileEngine.tileheight | 0;\n  }\n\n  /**\n   * Get the col from the x coordinate.\n   * @private\n   *\n   * @param {Number} x - X coordinate.\n   *\n   * @return {Number}\n   */\n  function getCol(x) {\n    return x / tileEngine.tilewidth | 0;\n  }\n\n  /**\n   * Render a layer.\n   * @private\n   *\n   * @param {Object} layer - Layer data.\n   * @param {Context} context - Context to draw layer to.\n   */\n  function renderLayer(layer, context) {\n    context.save();\n    context.globalAlpha = layer.opacity;\n\n    (layer.data || []).map((tile, index) => {\n\n      // skip empty tiles (0)\n      if (!tile) return;\n\n      // find the tileset the tile belongs to\n      // assume tilesets are ordered by firstgid\n      let tileset;\n      for (let i = tileEngine.tilesets.length-1; i >= 0; i--) {\n        tileset = tileEngine.tilesets[i];\n\n        if (tile / tileset.firstgid >= 1) {\n          break;\n        }\n      }\n\n      let tilewidth = tileset.tilewidth || tileEngine.tilewidth;\n      let tileheight = tileset.tileheight || tileEngine.tileheight;\n      let margin = tileset.margin || 0;\n\n      let image = tileset.image;\n\n      let offset = tile - tileset.firstgid;\n      let cols = tileset.columns ||\n        image.width / (tilewidth + margin) | 0;\n\n      let x = (index % tileEngine.width) * tilewidth;\n      let y = (index / tileEngine.width | 0) * tileheight;\n      let sx = (offset % cols) * (tilewidth + margin);\n      let sy = (offset / cols | 0) * (tileheight + margin);\n\n      context.drawImage(\n        image,\n        sx, sy, tilewidth, tileheight,\n        x, y, tilewidth, tileheight\n      );\n    });\n\n    context.restore();\n  }\n\n  /**\n   * Pre-render the tiles to make drawing fast.\n   * @private\n   */\n  function prerender() {\n    if (tileEngine.layers) {\n      tileEngine.layers.map(layer => {\n        layer._d = false;\n        layerMap[layer.name] = layer;\n\n        if (layer.visible !== false) {\n          tileEngine._r(layer, offscreenContext);\n        }\n      });\n    }\n  }\n\n  /**\n   * Render a tile engine canvas.\n   * @private\n   *\n   * @param {HTMLCanvasElement} canvas - Tile engine canvas to draw.\n   */\n  function render(canvas) {\n    const { width, height } = getCanvas();\n    const sWidth = Math.min(canvas.width, width);\n    const sHeight = Math.min(canvas.height, height);\n\n    tileEngine.context.drawImage(\n      canvas,\n      tileEngine.sx, tileEngine.sy, sWidth, sHeight,\n      0, 0, sWidth, sHeight\n    );\n  }\n\n  prerender();\n  return tileEngine;\n}\n\nlet kontra = {\n  Animation: animationFactory,\n\n  imageAssets,\n  audioAssets,\n  dataAssets,\n  setImagePath,\n  setAudioPath,\n  setDataPath,\n  loadImage,\n  loadAudio,\n  loadData,\n  load,\n\n  init,\n  getCanvas,\n  getContext,\n\n  on,\n  off,\n  emit,\n\n  GameLoop,\n\n  keyMap,\n  initKeys,\n  bindKeys,\n  unbindKeys,\n  keyPressed,\n\n  registerPlugin,\n  unregisterPlugin,\n  extendObject,\n\n  initPointer,\n  pointer,\n  track,\n  untrack,\n  pointerOver,\n  onPointerDown,\n  onPointerUp,\n  pointerPressed,\n\n  Pool: poolFactory,\n  Quadtree: quadtreeFactory,\n  Sprite: spriteFactory,\n  SpriteSheet: spriteSheetFactory,\n\n  setStoreItem,\n  getStoreItem,\n\n  TileEngine,\n  Vector: vectorFactory\n};\n\nexport { animationFactory as Animation, imageAssets, audioAssets, dataAssets, setImagePath, setAudioPath, setDataPath, loadImage, loadAudio, loadData, load, init, getCanvas, getContext, on, off, emit, GameLoop, keyMap, initKeys, bindKeys, unbindKeys, keyPressed, registerPlugin, unregisterPlugin, extendObject, initPointer, pointer, track, untrack, pointerOver, onPointerDown, onPointerUp, pointerPressed, poolFactory as Pool, quadtreeFactory as Quadtree, spriteFactory as Sprite, spriteSheetFactory as SpriteSheet, setStoreItem, getStoreItem, TileEngine, vectorFactory as Vector };\nexport default kontra;\n","import { on as kontraOn, off as kontraOff, emit as kontraEmit } from \"kontra\";\r\n\r\nexport const EV_CONVOSTART = \"ev.convoStart\";\r\nexport const EV_CONVOEND = \"ev.convoEnd\";\r\nexport const EV_CONVONEXT = \"ev.convoNext\";\r\nexport const EV_CONVOCHOICE = \"ev.convoChoice\";\r\nexport const EV_SCENECHANGE = \"ev.sceneChange\";\r\nexport const EV_INTERACTION = \"ev.onInteraction\";\r\n\r\nlet registry = {};\r\n\r\nexport const on = (e, fn) => {\r\n  registry[e] = fn;\r\n  kontraOn(e, registry[e]);\r\n};\r\n\r\nexport const off = (e, fn) => kontraOff(e, fn);\r\n\r\nexport const allOff = (ignoreList = []) =>\r\n  Object.keys(registry).map(\r\n    k => !ignoreList.some(str => str === k) && off(k, registry[k])\r\n  );\r\n\r\nexport const emit = (e, args = null) => kontraEmit(e, args);\r\n","import { emit, EV_DEBUGLOG } from \"../common/events\";\r\n\r\nexport const uniqueId = (pre = \"\") =>\r\n  `${pre}${pre.length ? \"_\" : \"\"}` +\r\n  (Number(String(Math.random()).slice(2)) +\r\n    Date.now() +\r\n    Math.round(performance.now())).toString(36);\r\n\r\nexport const between = (v, a, b) => v > a && v < b;\r\n\r\nexport const vmulti = (vec, v) => {\r\n  let x = 0;\r\n  let y = 0;\r\n  if (typeof v === \"object\") {\r\n    x = vec.x * v.x;\r\n    y = vec.y * v.y;\r\n  } else {\r\n    x = vec.x * v;\r\n    y = vec.y * v;\r\n  }\r\n  return Vector(x, y);\r\n};\r\n\r\nexport const dist = (p1, p2) => {\r\n  const a = p1.x - p2.x;\r\n  const b = p1.y - p2.y;\r\n  return Math.sqrt(a * a + b * b);\r\n};\r\n\r\nexport const sortByDist = (target, items = []) =>\r\n  items.sort((a, b) => dist(target, a.position) - dist(target, b.position));\r\n\r\nexport const circleCollision = (collider, targets, destroyOnHit = false) => {\r\n  if (!collider.radius) {\r\n    console.error(\"Cannot detect collisions without radius property.\");\r\n  }\r\n\r\n  const filtered = targets.filter(target => {\r\n    /* Because why would you ever want to collide with yourself? */\r\n    if (collider.id === target.id) return;\r\n\r\n    const offsets = target.collisionBodyOptions\r\n      ? {\r\n          x: target.collisionBodyOptions.offsetX\r\n            ? target.x + target.collisionBodyOptions.offsetX\r\n            : target.x,\r\n          y: target.collisionBodyOptions.offsetY\r\n            ? target.y + target.collisionBodyOptions.offsetY\r\n            : target.y\r\n        }\r\n      : {\r\n          x: target.x,\r\n          y: target.y\r\n        };\r\n\r\n    let dx = offsets.x - collider.x;\r\n    let dy = offsets.y - collider.y;\r\n\r\n    /* You might be seeing results from two perspectives. I'd ensure that it only comes from\r\n    one in the case of a door. */\r\n    //debug(target.name + \": \" + Math.sqrt(dx * dx + dy * dy))\r\n    if (Math.sqrt(dx * dx + dy * dy) < target.radius + collider.width) {\r\n      target.ttl = destroyOnHit ? 0 : target.ttl;\r\n      return target;\r\n    }\r\n  });\r\n\r\n  return filtered;\r\n};\r\n\r\nexport const debug = o => {\r\n  console.info(o);\r\n  emit(EV_DEBUGLOG, o);\r\n};\r\n","export const ENTITY_TYPE = {\r\n  PICKUP: 0,\r\n  NPC: 1,\r\n  ENEMY: 2,\r\n  SWITCH: 3,\r\n  DOOR: 4,\r\n  CONTAINER: 5,\r\n  ENTRANCE: 6,\r\n  PLAYER: 99\r\n};\r\n","\"use strict\"\n\nfunction Vnode(tag, key, attrs, children, text, dom) {\n\treturn {tag: tag, key: key, attrs: attrs, children: children, text: text, dom: dom, domSize: undefined, state: undefined, events: undefined, instance: undefined}\n}\nVnode.normalize = function(node) {\n\tif (Array.isArray(node)) return Vnode(\"[\", undefined, undefined, Vnode.normalizeChildren(node), undefined, undefined)\n\tif (node == null || typeof node === \"boolean\") return null\n\tif (typeof node === \"object\") return node\n\treturn Vnode(\"#\", undefined, undefined, String(node), undefined, undefined)\n}\nVnode.normalizeChildren = function(input) {\n\tvar children = []\n\tif (input.length) {\n\t\tvar isKeyed = input[0] != null && input[0].key != null\n\t\t// Note: this is a *very* perf-sensitive check.\n\t\t// Fun fact: merging the loop like this is somehow faster than splitting\n\t\t// it, noticeably so.\n\t\tfor (var i = 1; i < input.length; i++) {\n\t\t\tif ((input[i] != null && input[i].key != null) !== isKeyed) {\n\t\t\t\tthrow new TypeError(\"Vnodes must either always have keys or never have keys!\")\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tchildren[i] = Vnode.normalize(input[i])\n\t\t}\n\t}\n\treturn children\n}\n\nmodule.exports = Vnode\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\n// Call via `hyperscriptVnode.apply(startOffset, arguments)`\n//\n// The reason I do it this way, forwarding the arguments and passing the start\n// offset in `this`, is so I don't have to create a temporary array in a\n// performance-critical path.\n//\n// In native ES6, I'd instead add a final `...args` parameter to the\n// `hyperscript` and `fragment` factories and define this as\n// `hyperscriptVnode(...args)`, since modern engines do optimize that away. But\n// ES5 (what Mithril requires thanks to IE support) doesn't give me that luxury,\n// and engines aren't nearly intelligent enough to do either of these:\n//\n// 1. Elide the allocation for `[].slice.call(arguments, 1)` when it's passed to\n//    another function only to be indexed.\n// 2. Elide an `arguments` allocation when it's passed to any function other\n//    than `Function.prototype.apply` or `Reflect.apply`.\n//\n// In ES6, it'd probably look closer to this (I'd need to profile it, though):\n// module.exports = function(attrs, ...children) {\n//     if (attrs == null || typeof attrs === \"object\" && attrs.tag == null && !Array.isArray(attrs)) {\n//         if (children.length === 1 && Array.isArray(children[0])) children = children[0]\n//     } else {\n//         children = children.length === 0 && Array.isArray(attrs) ? attrs : [attrs, ...children]\n//         attrs = undefined\n//     }\n//\n//     if (attrs == null) attrs = {}\n//     return Vnode(\"\", attrs.key, attrs, children)\n// }\nmodule.exports = function() {\n\tvar attrs = arguments[this], start = this + 1, children\n\n\tif (attrs == null) {\n\t\tattrs = {}\n\t} else if (typeof attrs !== \"object\" || attrs.tag != null || Array.isArray(attrs)) {\n\t\tattrs = {}\n\t\tstart = this\n\t}\n\n\tif (arguments.length === start + 1) {\n\t\tchildren = arguments[start]\n\t\tif (!Array.isArray(children)) children = [children]\n\t} else {\n\t\tchildren = []\n\t\twhile (start < arguments.length) children.push(arguments[start++])\n\t}\n\n\treturn Vnode(\"\", attrs.key, attrs, children)\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\n\nvar selectorParser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\nvar selectorCache = {}\nvar hasOwn = {}.hasOwnProperty\n\nfunction isEmpty(object) {\n\tfor (var key in object) if (hasOwn.call(object, key)) return false\n\treturn true\n}\n\nfunction compileSelector(selector) {\n\tvar match, tag = \"div\", classes = [], attrs = {}\n\twhile (match = selectorParser.exec(selector)) {\n\t\tvar type = match[1], value = match[2]\n\t\tif (type === \"\" && value !== \"\") tag = value\n\t\telse if (type === \"#\") attrs.id = value\n\t\telse if (type === \".\") classes.push(value)\n\t\telse if (match[3][0] === \"[\") {\n\t\t\tvar attrValue = match[6]\n\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\tif (match[4] === \"class\") classes.push(attrValue)\n\t\t\telse attrs[match[4]] = attrValue === \"\" ? attrValue : attrValue || true\n\t\t}\n\t}\n\tif (classes.length > 0) attrs.className = classes.join(\" \")\n\treturn selectorCache[selector] = {tag: tag, attrs: attrs}\n}\n\nfunction execSelector(state, vnode) {\n\tvar attrs = vnode.attrs\n\tvar children = Vnode.normalizeChildren(vnode.children)\n\tvar hasClass = hasOwn.call(attrs, \"class\")\n\tvar className = hasClass ? attrs.class : attrs.className\n\n\tvnode.tag = state.tag\n\tvnode.attrs = null\n\tvnode.children = undefined\n\n\tif (!isEmpty(state.attrs) && !isEmpty(attrs)) {\n\t\tvar newAttrs = {}\n\n\t\tfor (var key in attrs) {\n\t\t\tif (hasOwn.call(attrs, key)) newAttrs[key] = attrs[key]\n\t\t}\n\n\t\tattrs = newAttrs\n\t}\n\n\tfor (var key in state.attrs) {\n\t\tif (hasOwn.call(state.attrs, key) && key !== \"className\" && !hasOwn.call(attrs, key)){\n\t\t\tattrs[key] = state.attrs[key]\n\t\t}\n\t}\n\tif (className != null || state.attrs.className != null) attrs.className =\n\t\tclassName != null\n\t\t\t? state.attrs.className != null\n\t\t\t\t? String(state.attrs.className) + \" \" + String(className)\n\t\t\t\t: className\n\t\t\t: state.attrs.className != null\n\t\t\t\t? state.attrs.className\n\t\t\t\t: null\n\n\tif (hasClass) attrs.class = null\n\n\tfor (var key in attrs) {\n\t\tif (hasOwn.call(attrs, key) && key !== \"key\") {\n\t\t\tvnode.attrs = attrs\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (Array.isArray(children) && children.length === 1 && children[0] != null && children[0].tag === \"#\") {\n\t\tvnode.text = children[0].children\n\t} else {\n\t\tvnode.children = children\n\t}\n\n\treturn vnode\n}\n\nfunction hyperscript(selector) {\n\tif (selector == null || typeof selector !== \"string\" && typeof selector !== \"function\" && typeof selector.view !== \"function\") {\n\t\tthrow Error(\"The selector must be either a string or a component.\");\n\t}\n\n\tvar vnode = hyperscriptVnode.apply(1, arguments)\n\n\tif (typeof selector === \"string\") {\n\t\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\t\tif (selector !== \"[\") return execSelector(selectorCache[selector] || compileSelector(selector), vnode)\n\t}\n\n\tvnode.tag = selector\n\treturn vnode\n}\n\nmodule.exports = hyperscript\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(html) {\n\tif (html == null) html = \"\"\n\treturn Vnode(\"<\", undefined, undefined, html, undefined, undefined)\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar hyperscriptVnode = require(\"./hyperscriptVnode\")\n\nmodule.exports = function() {\n\tvar vnode = hyperscriptVnode.apply(0, arguments)\n\n\tvnode.tag = \"[\"\n\tvnode.children = Vnode.normalizeChildren(vnode.children)\n\treturn vnode\n}\n","\"use strict\"\n\nvar hyperscript = require(\"./render/hyperscript\")\n\nhyperscript.trust = require(\"./render/trust\")\nhyperscript.fragment = require(\"./render/fragment\")\n\nmodule.exports = hyperscript\n","\"use strict\"\n/** @constructor */\nvar PromisePolyfill = function(executor) {\n\tif (!(this instanceof PromisePolyfill)) throw new Error(\"Promise must be called with `new`\")\n\tif (typeof executor !== \"function\") throw new TypeError(\"executor must be a function\")\n\n\tvar self = this, resolvers = [], rejectors = [], resolveCurrent = handler(resolvers, true), rejectCurrent = handler(rejectors, false)\n\tvar instance = self._instance = {resolvers: resolvers, rejectors: rejectors}\n\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\tfunction handler(list, shouldAbsorb) {\n\t\treturn function execute(value) {\n\t\t\tvar then\n\t\t\ttry {\n\t\t\t\tif (shouldAbsorb && value != null && (typeof value === \"object\" || typeof value === \"function\") && typeof (then = value.then) === \"function\") {\n\t\t\t\t\tif (value === self) throw new TypeError(\"Promise can't be resolved w/ itself\")\n\t\t\t\t\texecuteOnce(then.bind(value))\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallAsync(function() {\n\t\t\t\t\t\tif (!shouldAbsorb && list.length === 0) console.error(\"Possible unhandled promise rejection:\", value)\n\t\t\t\t\t\tfor (var i = 0; i < list.length; i++) list[i](value)\n\t\t\t\t\t\tresolvers.length = 0, rejectors.length = 0\n\t\t\t\t\t\tinstance.state = shouldAbsorb\n\t\t\t\t\t\tinstance.retry = function() {execute(value)}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\trejectCurrent(e)\n\t\t\t}\n\t\t}\n\t}\n\tfunction executeOnce(then) {\n\t\tvar runs = 0\n\t\tfunction run(fn) {\n\t\t\treturn function(value) {\n\t\t\t\tif (runs++ > 0) return\n\t\t\t\tfn(value)\n\t\t\t}\n\t\t}\n\t\tvar onerror = run(rejectCurrent)\n\t\ttry {then(run(resolveCurrent), onerror)} catch (e) {onerror(e)}\n\t}\n\n\texecuteOnce(executor)\n}\nPromisePolyfill.prototype.then = function(onFulfilled, onRejection) {\n\tvar self = this, instance = self._instance\n\tfunction handle(callback, list, next, state) {\n\t\tlist.push(function(value) {\n\t\t\tif (typeof callback !== \"function\") next(value)\n\t\t\telse try {resolveNext(callback(value))} catch (e) {if (rejectNext) rejectNext(e)}\n\t\t})\n\t\tif (typeof instance.retry === \"function\" && state === instance.state) instance.retry()\n\t}\n\tvar resolveNext, rejectNext\n\tvar promise = new PromisePolyfill(function(resolve, reject) {resolveNext = resolve, rejectNext = reject})\n\thandle(onFulfilled, instance.resolvers, resolveNext, true), handle(onRejection, instance.rejectors, rejectNext, false)\n\treturn promise\n}\nPromisePolyfill.prototype.catch = function(onRejection) {\n\treturn this.then(null, onRejection)\n}\nPromisePolyfill.prototype.finally = function(callback) {\n\treturn this.then(\n\t\tfunction(value) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn value\n\t\t\t})\n\t\t},\n\t\tfunction(reason) {\n\t\t\treturn PromisePolyfill.resolve(callback()).then(function() {\n\t\t\t\treturn PromisePolyfill.reject(reason);\n\t\t\t})\n\t\t}\n\t)\n}\nPromisePolyfill.resolve = function(value) {\n\tif (value instanceof PromisePolyfill) return value\n\treturn new PromisePolyfill(function(resolve) {resolve(value)})\n}\nPromisePolyfill.reject = function(value) {\n\treturn new PromisePolyfill(function(resolve, reject) {reject(value)})\n}\nPromisePolyfill.all = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tvar total = list.length, count = 0, values = []\n\t\tif (list.length === 0) resolve([])\n\t\telse for (var i = 0; i < list.length; i++) {\n\t\t\t(function(i) {\n\t\t\t\tfunction consume(value) {\n\t\t\t\t\tcount++\n\t\t\t\t\tvalues[i] = value\n\t\t\t\t\tif (count === total) resolve(values)\n\t\t\t\t}\n\t\t\t\tif (list[i] != null && (typeof list[i] === \"object\" || typeof list[i] === \"function\") && typeof list[i].then === \"function\") {\n\t\t\t\t\tlist[i].then(consume, reject)\n\t\t\t\t}\n\t\t\t\telse consume(list[i])\n\t\t\t})(i)\n\t\t}\n\t})\n}\nPromisePolyfill.race = function(list) {\n\treturn new PromisePolyfill(function(resolve, reject) {\n\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\tlist[i].then(resolve, reject)\n\t\t}\n\t})\n}\n\nmodule.exports = PromisePolyfill\n","\"use strict\"\n\nvar PromisePolyfill = require(\"./polyfill\")\n\nif (typeof window !== \"undefined\") {\n\tif (typeof window.Promise === \"undefined\") {\n\t\twindow.Promise = PromisePolyfill\n\t} else if (!window.Promise.prototype.finally) {\n\t\twindow.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = window.Promise\n} else if (typeof global !== \"undefined\") {\n\tif (typeof global.Promise === \"undefined\") {\n\t\tglobal.Promise = PromisePolyfill\n\t} else if (!global.Promise.prototype.finally) {\n\t\tglobal.Promise.prototype.finally = PromisePolyfill.prototype.finally\n\t}\n\tmodule.exports = global.Promise\n} else {\n\tmodule.exports = PromisePolyfill\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function($window) {\n\tvar $doc = $window && $window.document\n\tvar currentRedraw\n\n\tvar nameSpace = {\n\t\tsvg: \"http://www.w3.org/2000/svg\",\n\t\tmath: \"http://www.w3.org/1998/Math/MathML\"\n\t}\n\n\tfunction getNameSpace(vnode) {\n\t\treturn vnode.attrs && vnode.attrs.xmlns || nameSpace[vnode.tag]\n\t}\n\n\t//sanity check to discourage people from doing `vnode.state = ...`\n\tfunction checkState(vnode, original) {\n\t\tif (vnode.state !== original) throw new Error(\"`vnode.state` must not be modified\")\n\t}\n\n\t//Note: the hook is passed as the `this` argument to allow proxying the\n\t//arguments without requiring a full array allocation to do so. It also\n\t//takes advantage of the fact the current `vnode` is the first argument in\n\t//all lifecycle methods.\n\tfunction callHook(vnode) {\n\t\tvar original = vnode.state\n\t\ttry {\n\t\t\treturn this.apply(original, arguments)\n\t\t} finally {\n\t\t\tcheckState(vnode, original)\n\t\t}\n\t}\n\n\t// IE11 (at least) throws an UnspecifiedError when accessing document.activeElement when\n\t// inside an iframe. Catch and swallow this error, and heavy-handidly return null.\n\tfunction activeElement() {\n\t\ttry {\n\t\t\treturn $doc.activeElement\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t}\n\t//create\n\tfunction createNodes(parent, vnodes, start, end, hooks, nextSibling, ns) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) {\n\t\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t}\n\tfunction createNode(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tif (typeof tag === \"string\") {\n\t\t\tvnode.state = {}\n\t\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\t\tswitch (tag) {\n\t\t\t\tcase \"#\": createText(parent, vnode, nextSibling); break\n\t\t\t\tcase \"<\": createHTML(parent, vnode, ns, nextSibling); break\n\t\t\t\tcase \"[\": createFragment(parent, vnode, hooks, ns, nextSibling); break\n\t\t\t\tdefault: createElement(parent, vnode, hooks, ns, nextSibling)\n\t\t\t}\n\t\t}\n\t\telse createComponent(parent, vnode, hooks, ns, nextSibling)\n\t}\n\tfunction createText(parent, vnode, nextSibling) {\n\t\tvnode.dom = $doc.createTextNode(vnode.children)\n\t\tinsertNode(parent, vnode.dom, nextSibling)\n\t}\n\tvar possibleParents = {caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\"}\n\tfunction createHTML(parent, vnode, ns, nextSibling) {\n\t\tvar match = vnode.children.match(/^\\s*?<(\\w+)/im) || []\n\t\t// not using the proper parent makes the child element(s) vanish.\n\t\t//     var div = document.createElement(\"div\")\n\t\t//     div.innerHTML = \"<td>i</td><td>j</td>\"\n\t\t//     console.log(div.innerHTML)\n\t\t// --> \"ij\", no <td> in sight.\n\t\tvar temp = $doc.createElement(possibleParents[match[1]] || \"div\")\n\t\tif (ns === \"http://www.w3.org/2000/svg\") {\n\t\t\ttemp.innerHTML = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + vnode.children + \"</svg>\"\n\t\t\ttemp = temp.firstChild\n\t\t} else {\n\t\t\ttemp.innerHTML = vnode.children\n\t\t}\n\t\tvnode.dom = temp.firstChild\n\t\tvnode.domSize = temp.childNodes.length\n\t\t// Capture nodes to remove, so we don't confuse them.\n\t\tvnode.instance = []\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tvar child\n\t\twhile (child = temp.firstChild) {\n\t\t\tvnode.instance.push(child)\n\t\t\tfragment.appendChild(child)\n\t\t}\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createFragment(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar fragment = $doc.createDocumentFragment()\n\t\tif (vnode.children != null) {\n\t\t\tvar children = vnode.children\n\t\t\tcreateNodes(fragment, children, 0, children.length, hooks, null, ns)\n\t\t}\n\t\tvnode.dom = fragment.firstChild\n\t\tvnode.domSize = fragment.childNodes.length\n\t\tinsertNode(parent, fragment, nextSibling)\n\t}\n\tfunction createElement(parent, vnode, hooks, ns, nextSibling) {\n\t\tvar tag = vnode.tag\n\t\tvar attrs = vnode.attrs\n\t\tvar is = attrs && attrs.is\n\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tvar element = ns ?\n\t\t\tis ? $doc.createElementNS(ns, tag, {is: is}) : $doc.createElementNS(ns, tag) :\n\t\t\tis ? $doc.createElement(tag, {is: is}) : $doc.createElement(tag)\n\t\tvnode.dom = element\n\n\t\tif (attrs != null) {\n\t\t\tsetAttrs(vnode, attrs, ns)\n\t\t}\n\n\t\tinsertNode(parent, element, nextSibling)\n\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (vnode.text != null) {\n\t\t\t\tif (vnode.text !== \"\") element.textContent = vnode.text\n\t\t\t\telse vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t}\n\t\t\tif (vnode.children != null) {\n\t\t\t\tvar children = vnode.children\n\t\t\t\tcreateNodes(element, children, 0, children.length, hooks, null, ns)\n\t\t\t\tif (vnode.tag === \"select\" && attrs != null) setLateSelectAttrs(vnode, attrs)\n\t\t\t}\n\t\t}\n\t}\n\tfunction initComponent(vnode, hooks) {\n\t\tvar sentinel\n\t\tif (typeof vnode.tag.view === \"function\") {\n\t\t\tvnode.state = Object.create(vnode.tag)\n\t\t\tsentinel = vnode.state.view\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t} else {\n\t\t\tvnode.state = void 0\n\t\t\tsentinel = vnode.tag\n\t\t\tif (sentinel.$$reentrantLock$$ != null) return\n\t\t\tsentinel.$$reentrantLock$$ = true\n\t\t\tvnode.state = (vnode.tag.prototype != null && typeof vnode.tag.prototype.view === \"function\") ? new vnode.tag(vnode) : vnode.tag(vnode)\n\t\t}\n\t\tinitLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) initLifecycle(vnode.attrs, vnode, hooks)\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tsentinel.$$reentrantLock$$ = null\n\t}\n\tfunction createComponent(parent, vnode, hooks, ns, nextSibling) {\n\t\tinitComponent(vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tcreateNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.dom != null ? vnode.instance.domSize : 0\n\t\t}\n\t\telse {\n\t\t\tvnode.domSize = 0\n\t\t}\n\t}\n\n\t//update\n\t/**\n\t * @param {Element|Fragment} parent - the parent element\n\t * @param {Vnode[] | null} old - the list of vnodes of the last `render()` call for\n\t *                               this part of the tree\n\t * @param {Vnode[] | null} vnodes - as above, but for the current `render()` call.\n\t * @param {Function[]} hooks - an accumulator of post-render hooks (oncreate/onupdate)\n\t * @param {Element | null} nextSibling - the next DOM node if we're dealing with a\n\t *                                       fragment that is not the last item in its\n\t *                                       parent\n\t * @param {'svg' | 'math' | String | null} ns) - the current XML namespace, if any\n\t * @returns void\n\t */\n\t// This function diffs and patches lists of vnodes, both keyed and unkeyed.\n\t//\n\t// We will:\n\t//\n\t// 1. describe its general structure\n\t// 2. focus on the diff algorithm optimizations\n\t// 3. discuss DOM node operations.\n\n\t// ## Overview:\n\t//\n\t// The updateNodes() function:\n\t// - deals with trivial cases\n\t// - determines whether the lists are keyed or unkeyed based on the first non-null node\n\t//   of each list.\n\t// - diffs them and patches the DOM if needed (that's the brunt of the code)\n\t// - manages the leftovers: after diffing, are there:\n\t//   - old nodes left to remove?\n\t// \t - new nodes to insert?\n\t// \t deal with them!\n\t//\n\t// The lists are only iterated over once, with an exception for the nodes in `old` that\n\t// are visited in the fourth part of the diff and in the `removeNodes` loop.\n\n\t// ## Diffing\n\t//\n\t// Reading https://github.com/localvoid/ivi/blob/ddc09d06abaef45248e6133f7040d00d3c6be853/packages/ivi/src/vdom/implementation.ts#L617-L837\n\t// may be good for context on longest increasing subsequence-based logic for moving nodes.\n\t//\n\t// In order to diff keyed lists, one has to\n\t//\n\t// 1) match nodes in both lists, per key, and update them accordingly\n\t// 2) create the nodes present in the new list, but absent in the old one\n\t// 3) remove the nodes present in the old list, but absent in the new one\n\t// 4) figure out what nodes in 1) to move in order to minimize the DOM operations.\n\t//\n\t// To achieve 1) one can create a dictionary of keys => index (for the old list), then iterate\n\t// over the new list and for each new vnode, find the corresponding vnode in the old list using\n\t// the map.\n\t// 2) is achieved in the same step: if a new node has no corresponding entry in the map, it is new\n\t// and must be created.\n\t// For the removals, we actually remove the nodes that have been updated from the old list.\n\t// The nodes that remain in that list after 1) and 2) have been performed can be safely removed.\n\t// The fourth step is a bit more complex and relies on the longest increasing subsequence (LIS)\n\t// algorithm.\n\t//\n\t// the longest increasing subsequence is the list of nodes that can remain in place. Imagine going\n\t// from `1,2,3,4,5` to `4,5,1,2,3` where the numbers are not necessarily the keys, but the indices\n\t// corresponding to the keyed nodes in the old list (keyed nodes `e,d,c,b,a` => `b,a,e,d,c` would\n\t//  match the above lists, for example).\n\t//\n\t// In there are two increasing subsequences: `4,5` and `1,2,3`, the latter being the longest. We\n\t// can update those nodes without moving them, and only call `insertNode` on `4` and `5`.\n\t//\n\t// @localvoid adapted the algo to also support node deletions and insertions (the `lis` is actually\n\t// the longest increasing subsequence *of old nodes still present in the new list*).\n\t//\n\t// It is a general algorithm that is fireproof in all circumstances, but it requires the allocation\n\t// and the construction of a `key => oldIndex` map, and three arrays (one with `newIndex => oldIndex`,\n\t// the `LIS` and a temporary one to create the LIS).\n\t//\n\t// So we cheat where we can: if the tails of the lists are identical, they are guaranteed to be part of\n\t// the LIS and can be updated without moving them.\n\t//\n\t// If two nodes are swapped, they are guaranteed not to be part of the LIS, and must be moved (with\n\t// the exception of the last node if the list is fully reversed).\n\t//\n\t// ## Finding the next sibling.\n\t//\n\t// `updateNode()` and `createNode()` expect a nextSibling parameter to perform DOM operations.\n\t// When the list is being traversed top-down, at any index, the DOM nodes up to the previous\n\t// vnode reflect the content of the new list, whereas the rest of the DOM nodes reflect the old\n\t// list. The next sibling must be looked for in the old list using `getNextSibling(... oldStart + 1 ...)`.\n\t//\n\t// In the other scenarios (swaps, upwards traversal, map-based diff),\n\t// the new vnodes list is traversed upwards. The DOM nodes at the bottom of the list reflect the\n\t// bottom part of the new vnodes list, and we can use the `v.dom`  value of the previous node\n\t// as the next sibling (cached in the `nextSibling` variable).\n\n\n\t// ## DOM node moves\n\t//\n\t// In most scenarios `updateNode()` and `createNode()` perform the DOM operations. However,\n\t// this is not the case if the node moved (second and fourth part of the diff algo). We move\n\t// the old DOM nodes before updateNode runs because it enables us to use the cached `nextSibling`\n\t// variable rather than fetching it using `getNextSibling()`.\n\t//\n\t// The fourth part of the diff currently inserts nodes unconditionally, leading to issues\n\t// like #1791 and #1999. We need to be smarter about those situations where adjascent old\n\t// nodes remain together in the new list in a way that isn't covered by parts one and\n\t// three of the diff algo.\n\n\tfunction updateNodes(parent, old, vnodes, hooks, nextSibling, ns) {\n\t\tif (old === vnodes || old == null && vnodes == null) return\n\t\telse if (old == null || old.length === 0) createNodes(parent, vnodes, 0, vnodes.length, hooks, nextSibling, ns)\n\t\telse if (vnodes == null || vnodes.length === 0) removeNodes(parent, old, 0, old.length)\n\t\telse {\n\t\t\tvar isOldKeyed = old[0] != null && old[0].key != null\n\t\t\tvar isKeyed = vnodes[0] != null && vnodes[0].key != null\n\t\t\tvar start = 0, oldStart = 0\n\t\t\tif (!isOldKeyed) while (oldStart < old.length && old[oldStart] == null) oldStart++\n\t\t\tif (!isKeyed) while (start < vnodes.length && vnodes[start] == null) start++\n\t\t\tif (isKeyed === null && isOldKeyed == null) return // both lists are full of nulls\n\t\t\tif (isOldKeyed !== isKeyed) {\n\t\t\t\tremoveNodes(parent, old, oldStart, old.length)\n\t\t\t\tcreateNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else if (!isKeyed) {\n\t\t\t\t// Don't index past the end of either list (causes deopts).\n\t\t\t\tvar commonLength = old.length < vnodes.length ? old.length : vnodes.length\n\t\t\t\t// Rewind if necessary to the first non-null index on either side.\n\t\t\t\t// We could alternatively either explicitly create or remove nodes when `start !== oldStart`\n\t\t\t\t// but that would be optimizing for sparse lists which are more rare than dense ones.\n\t\t\t\tstart = start < oldStart ? start : oldStart\n\t\t\t\tfor (; start < commonLength; start++) {\n\t\t\t\t\to = old[start]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o === v || o == null && v == null) continue\n\t\t\t\t\telse if (o == null) createNode(parent, v, hooks, ns, getNextSibling(old, start + 1, nextSibling))\n\t\t\t\t\telse if (v == null) removeNode(parent, o)\n\t\t\t\t\telse updateNode(parent, o, v, hooks, getNextSibling(old, start + 1, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\tif (old.length > commonLength) removeNodes(parent, old, start, old.length)\n\t\t\t\tif (vnodes.length > commonLength) createNodes(parent, vnodes, start, vnodes.length, hooks, nextSibling, ns)\n\t\t\t} else {\n\t\t\t\t// keyed diff\n\t\t\t\tvar oldEnd = old.length - 1, end = vnodes.length - 1, map, o, v, oe, ve, topSibling\n\n\t\t\t\t// bottom-up\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t}\n\t\t\t\t// top-down\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t\tif (o.key !== v.key) break\n\t\t\t\t\toldStart++, start++\n\t\t\t\t\tif (o !== v) updateNode(parent, o, v, hooks, getNextSibling(old, oldStart, nextSibling), ns)\n\t\t\t\t}\n\t\t\t\t// swaps and list reversals\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (start === end) break\n\t\t\t\t\tif (o.key !== ve.key || oe.key !== v.key) break\n\t\t\t\t\ttopSibling = getNextSibling(old, oldStart, nextSibling)\n\t\t\t\t\tmoveNodes(parent, oe, topSibling)\n\t\t\t\t\tif (oe !== v) updateNode(parent, oe, v, hooks, topSibling, ns)\n\t\t\t\t\tif (++start <= --end) moveNodes(parent, o, nextSibling)\n\t\t\t\t\tif (o !== ve) updateNode(parent, o, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldStart++; oldEnd--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t\to = old[oldStart]\n\t\t\t\t\tv = vnodes[start]\n\t\t\t\t}\n\t\t\t\t// bottom up once again\n\t\t\t\twhile (oldEnd >= oldStart && end >= start) {\n\t\t\t\t\tif (oe.key !== ve.key) break\n\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\toldEnd--, end--\n\t\t\t\t\toe = old[oldEnd]\n\t\t\t\t\tve = vnodes[end]\n\t\t\t\t}\n\t\t\t\tif (start > end) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\telse if (oldStart > oldEnd) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\telse {\n\t\t\t\t\t// inspired by ivi https://github.com/ivijs/ivi/ by Boris Kaul\n\t\t\t\t\tvar originalNextSibling = nextSibling, vnodesLength = end - start + 1, oldIndices = new Array(vnodesLength), li=0, i=0, pos = 2147483647, matched = 0, map, lisIndices\n\t\t\t\t\tfor (i = 0; i < vnodesLength; i++) oldIndices[i] = -1\n\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\tif (map == null) map = getKeyMap(old, oldStart, oldEnd + 1)\n\t\t\t\t\t\tve = vnodes[i]\n\t\t\t\t\t\tvar oldIndex = map[ve.key]\n\t\t\t\t\t\tif (oldIndex != null) {\n\t\t\t\t\t\t\tpos = (oldIndex < pos) ? oldIndex : -1 // becomes -1 if nodes were re-ordered\n\t\t\t\t\t\t\toldIndices[i-start] = oldIndex\n\t\t\t\t\t\t\toe = old[oldIndex]\n\t\t\t\t\t\t\told[oldIndex] = null\n\t\t\t\t\t\t\tif (oe !== ve) updateNode(parent, oe, ve, hooks, nextSibling, ns)\n\t\t\t\t\t\t\tif (ve.dom != null) nextSibling = ve.dom\n\t\t\t\t\t\t\tmatched++\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnextSibling = originalNextSibling\n\t\t\t\t\tif (matched !== oldEnd - oldStart + 1) removeNodes(parent, old, oldStart, oldEnd + 1)\n\t\t\t\t\tif (matched === 0) createNodes(parent, vnodes, start, end + 1, hooks, nextSibling, ns)\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (pos === -1) {\n\t\t\t\t\t\t\t// the indices of the indices of the items that are part of the\n\t\t\t\t\t\t\t// longest increasing subsequence in the oldIndices list\n\t\t\t\t\t\t\tlisIndices = makeLisIndices(oldIndices)\n\t\t\t\t\t\t\tli = lisIndices.length - 1\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif (lisIndices[li] === i - start) li--\n\t\t\t\t\t\t\t\t\telse moveNodes(parent, v, nextSibling)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (i = end; i >= start; i--) {\n\t\t\t\t\t\t\t\tv = vnodes[i]\n\t\t\t\t\t\t\t\tif (oldIndices[i-start] === -1) createNode(parent, v, hooks, ns, nextSibling)\n\t\t\t\t\t\t\t\tif (v.dom != null) nextSibling = vnodes[i].dom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateNode(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvar oldTag = old.tag, tag = vnode.tag\n\t\tif (oldTag === tag) {\n\t\t\tvnode.state = old.state\n\t\t\tvnode.events = old.events\n\t\t\tif (shouldNotUpdate(vnode, old)) return\n\t\t\tif (typeof oldTag === \"string\") {\n\t\t\t\tif (vnode.attrs != null) {\n\t\t\t\t\tupdateLifecycle(vnode.attrs, vnode, hooks)\n\t\t\t\t}\n\t\t\t\tswitch (oldTag) {\n\t\t\t\t\tcase \"#\": updateText(old, vnode); break\n\t\t\t\t\tcase \"<\": updateHTML(parent, old, vnode, ns, nextSibling); break\n\t\t\t\t\tcase \"[\": updateFragment(parent, old, vnode, hooks, nextSibling, ns); break\n\t\t\t\t\tdefault: updateElement(old, vnode, hooks, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse updateComponent(parent, old, vnode, hooks, nextSibling, ns)\n\t\t}\n\t\telse {\n\t\t\tremoveNode(parent, old)\n\t\t\tcreateNode(parent, vnode, hooks, ns, nextSibling)\n\t\t}\n\t}\n\tfunction updateText(old, vnode) {\n\t\tif (old.children.toString() !== vnode.children.toString()) {\n\t\t\told.dom.nodeValue = vnode.children\n\t\t}\n\t\tvnode.dom = old.dom\n\t}\n\tfunction updateHTML(parent, old, vnode, ns, nextSibling) {\n\t\tif (old.children !== vnode.children) {\n\t\t\tremoveHTML(parent, old)\n\t\t\tcreateHTML(parent, vnode, ns, nextSibling)\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t\tvnode.instance = old.instance\n\t\t}\n\t}\n\tfunction updateFragment(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tupdateNodes(parent, old.children, vnode.children, hooks, nextSibling, ns)\n\t\tvar domSize = 0, children = vnode.children\n\t\tvnode.dom = null\n\t\tif (children != null) {\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar child = children[i]\n\t\t\t\tif (child != null && child.dom != null) {\n\t\t\t\t\tif (vnode.dom == null) vnode.dom = child.dom\n\t\t\t\t\tdomSize += child.domSize || 1\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (domSize !== 1) vnode.domSize = domSize\n\t\t}\n\t}\n\tfunction updateElement(old, vnode, hooks, ns) {\n\t\tvar element = vnode.dom = old.dom\n\t\tns = getNameSpace(vnode) || ns\n\n\t\tif (vnode.tag === \"textarea\") {\n\t\t\tif (vnode.attrs == null) vnode.attrs = {}\n\t\t\tif (vnode.text != null) {\n\t\t\t\tvnode.attrs.value = vnode.text //FIXME handle multiple children\n\t\t\t\tvnode.text = undefined\n\t\t\t}\n\t\t}\n\t\tupdateAttrs(vnode, old.attrs, vnode.attrs, ns)\n\t\tif (!maybeSetContentEditable(vnode)) {\n\t\t\tif (old.text != null && vnode.text != null && vnode.text !== \"\") {\n\t\t\t\tif (old.text.toString() !== vnode.text.toString()) old.dom.firstChild.nodeValue = vnode.text\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (old.text != null) old.children = [Vnode(\"#\", undefined, undefined, old.text, undefined, old.dom.firstChild)]\n\t\t\t\tif (vnode.text != null) vnode.children = [Vnode(\"#\", undefined, undefined, vnode.text, undefined, undefined)]\n\t\t\t\tupdateNodes(element, old.children, vnode.children, hooks, null, ns)\n\t\t\t}\n\t\t}\n\t}\n\tfunction updateComponent(parent, old, vnode, hooks, nextSibling, ns) {\n\t\tvnode.instance = Vnode.normalize(callHook.call(vnode.state.view, vnode))\n\t\tif (vnode.instance === vnode) throw Error(\"A view cannot return the vnode it received as argument\")\n\t\tupdateLifecycle(vnode.state, vnode, hooks)\n\t\tif (vnode.attrs != null) updateLifecycle(vnode.attrs, vnode, hooks)\n\t\tif (vnode.instance != null) {\n\t\t\tif (old.instance == null) createNode(parent, vnode.instance, hooks, ns, nextSibling)\n\t\t\telse updateNode(parent, old.instance, vnode.instance, hooks, nextSibling, ns)\n\t\t\tvnode.dom = vnode.instance.dom\n\t\t\tvnode.domSize = vnode.instance.domSize\n\t\t}\n\t\telse if (old.instance != null) {\n\t\t\tremoveNode(parent, old.instance)\n\t\t\tvnode.dom = undefined\n\t\t\tvnode.domSize = 0\n\t\t}\n\t\telse {\n\t\t\tvnode.dom = old.dom\n\t\t\tvnode.domSize = old.domSize\n\t\t}\n\t}\n\tfunction getKeyMap(vnodes, start, end) {\n\t\tvar map = Object.create(null)\n\t\tfor (; start < end; start++) {\n\t\t\tvar vnode = vnodes[start]\n\t\t\tif (vnode != null) {\n\t\t\t\tvar key = vnode.key\n\t\t\t\tif (key != null) map[key] = start\n\t\t\t}\n\t\t}\n\t\treturn map\n\t}\n\t// Lifted from ivi https://github.com/ivijs/ivi/\n\t// takes a list of unique numbers (-1 is special and can\n\t// occur multiple times) and returns an array with the indices\n\t// of the items that are part of the longest increasing\n\t// subsequece\n\tvar lisTemp = []\n\tfunction makeLisIndices(a) {\n\t\tvar result = [0]\n\t\tvar u = 0, v = 0, i = 0\n\t\tvar il = lisTemp.length = a.length\n\t\tfor (var i = 0; i < il; i++) lisTemp[i] = a[i]\n\t\tfor (var i = 0; i < il; ++i) {\n\t\t\tif (a[i] === -1) continue\n\t\t\tvar j = result[result.length - 1]\n\t\t\tif (a[j] < a[i]) {\n\t\t\t\tlisTemp[i] = j\n\t\t\t\tresult.push(i)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tu = 0\n\t\t\tv = result.length - 1\n\t\t\twhile (u < v) {\n\t\t\t\t// Fast integer average without overflow.\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tvar c = (u >>> 1) + (v >>> 1) + (u & v & 1)\n\t\t\t\tif (a[result[c]] < a[i]) {\n\t\t\t\t\tu = c + 1\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = c\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (a[i] < a[result[u]]) {\n\t\t\t\tif (u > 0) lisTemp[i] = result[u - 1]\n\t\t\t\tresult[u] = i\n\t\t\t}\n\t\t}\n\t\tu = result.length\n\t\tv = result[u - 1]\n\t\twhile (u-- > 0) {\n\t\t\tresult[u] = v\n\t\t\tv = lisTemp[v]\n\t\t}\n\t\tlisTemp.length = 0\n\t\treturn result\n\t}\n\n\tfunction getNextSibling(vnodes, i, nextSibling) {\n\t\tfor (; i < vnodes.length; i++) {\n\t\t\tif (vnodes[i] != null && vnodes[i].dom != null) return vnodes[i].dom\n\t\t}\n\t\treturn nextSibling\n\t}\n\n\t// This covers a really specific edge case:\n\t// - Parent node is keyed and contains child\n\t// - Child is removed, returns unresolved promise in `onbeforeremove`\n\t// - Parent node is moved in keyed diff\n\t// - Remaining children still need moved appropriately\n\t//\n\t// Ideally, I'd track removed nodes as well, but that introduces a lot more\n\t// complexity and I'm not exactly interested in doing that.\n\tfunction moveNodes(parent, vnode, nextSibling) {\n\t\tvar frag = $doc.createDocumentFragment()\n\t\tmoveChildToFrag(parent, frag, vnode)\n\t\tinsertNode(parent, frag, nextSibling)\n\t}\n\tfunction moveChildToFrag(parent, frag, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\t\t\tfrag.appendChild(vnode.instance[i])\n\t\t\t\t}\n\t\t\t} else if (vnode.tag !== \"[\") {\n\t\t\t\t// Don't recurse for text nodes *or* elements, just fragments\n\t\t\t\tfrag.appendChild(vnode.dom)\n\t\t\t} else if (vnode.children.length === 1) {\n\t\t\t\tvnode = vnode.children[0]\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\tif (child != null) moveChildToFrag(parent, frag, child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\tfunction insertNode(parent, dom, nextSibling) {\n\t\tif (nextSibling != null) parent.insertBefore(dom, nextSibling)\n\t\telse parent.appendChild(dom)\n\t}\n\n\tfunction maybeSetContentEditable(vnode) {\n\t\tif (vnode.attrs == null || (\n\t\t\tvnode.attrs.contenteditable == null && // attribute\n\t\t\tvnode.attrs.contentEditable == null // property\n\t\t)) return false\n\t\tvar children = vnode.children\n\t\tif (children != null && children.length === 1 && children[0].tag === \"<\") {\n\t\t\tvar content = children[0].children\n\t\t\tif (vnode.dom.innerHTML !== content) vnode.dom.innerHTML = content\n\t\t}\n\t\telse if (vnode.text != null || children != null && children.length !== 0) throw new Error(\"Child node of a contenteditable must be trusted\")\n\t\treturn true\n\t}\n\n\t//remove\n\tfunction removeNodes(parent, vnodes, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar vnode = vnodes[i]\n\t\t\tif (vnode != null) removeNode(parent, vnode)\n\t\t}\n\t}\n\tfunction removeNode(parent, vnode) {\n\t\tvar mask = 0\n\t\tvar original = vnode.state\n\t\tvar stateResult, attrsResult\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.state.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\tmask = 1\n\t\t\t\tstateResult = result\n\t\t\t}\n\t\t}\n\t\tif (vnode.attrs && typeof vnode.attrs.onbeforeremove === \"function\") {\n\t\t\tvar result = callHook.call(vnode.attrs.onbeforeremove, vnode)\n\t\t\tif (result != null && typeof result.then === \"function\") {\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tmask |= 2\n\t\t\t\tattrsResult = result\n\t\t\t}\n\t\t}\n\t\tcheckState(vnode, original)\n\n\t\t// If we can, try to fast-path it and avoid all the overhead of awaiting\n\t\tif (!mask) {\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t} else {\n\t\t\tif (stateResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 1) { mask &= 2; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tstateResult.then(next, next)\n\t\t\t}\n\t\t\tif (attrsResult != null) {\n\t\t\t\tvar next = function () {\n\t\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\t\tif (mask & 2) { mask &= 1; if (!mask) reallyRemove() }\n\t\t\t\t}\n\t\t\t\tattrsResult.then(next, next)\n\t\t\t}\n\t\t}\n\n\t\tfunction reallyRemove() {\n\t\t\tcheckState(vnode, original)\n\t\t\tonremove(vnode)\n\t\t\tremoveChild(parent, vnode)\n\t\t}\n\t}\n\tfunction removeHTML(parent, vnode) {\n\t\tfor (var i = 0; i < vnode.instance.length; i++) {\n\t\t\tparent.removeChild(vnode.instance[i])\n\t\t}\n\t}\n\tfunction removeChild(parent, vnode) {\n\t\t// Dodge the recursion overhead in a few of the most common cases.\n\t\twhile (vnode.dom != null && vnode.dom.parentNode === parent) {\n\t\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\t\tvnode = vnode.instance\n\t\t\t\tif (vnode != null) continue\n\t\t\t} else if (vnode.tag === \"<\") {\n\t\t\t\tremoveHTML(parent, vnode)\n\t\t\t} else {\n\t\t\t\tif (vnode.tag !== \"[\") {\n\t\t\t\t\tparent.removeChild(vnode.dom)\n\t\t\t\t\tif (!Array.isArray(vnode.children)) break\n\t\t\t\t}\n\t\t\t\tif (vnode.children.length === 1) {\n\t\t\t\t\tvnode = vnode.children[0]\n\t\t\t\t\tif (vnode != null) continue\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = 0; i < vnode.children.length; i++) {\n\t\t\t\t\t\tvar child = vnode.children[i]\n\t\t\t\t\t\tif (child != null) removeChild(parent, child)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\tfunction onremove(vnode) {\n\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onremove === \"function\") callHook.call(vnode.state.onremove, vnode)\n\t\tif (vnode.attrs && typeof vnode.attrs.onremove === \"function\") callHook.call(vnode.attrs.onremove, vnode)\n\t\tif (typeof vnode.tag !== \"string\") {\n\t\t\tif (vnode.instance != null) onremove(vnode.instance)\n\t\t} else {\n\t\t\tvar children = vnode.children\n\t\t\tif (Array.isArray(children)) {\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\tvar child = children[i]\n\t\t\t\t\tif (child != null) onremove(child)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//attrs\n\tfunction setAttrs(vnode, attrs, ns) {\n\t\tfor (var key in attrs) {\n\t\t\tsetAttr(vnode, key, null, attrs[key], ns)\n\t\t}\n\t}\n\tfunction setAttr(vnode, key, old, value, ns) {\n\t\tif (key === \"key\" || key === \"is\" || value == null || isLifecycleMethod(key) || (old === value && !isFormAttribute(vnode, key)) && typeof value !== \"object\") return\n\t\tif (key[0] === \"o\" && key[1] === \"n\") return updateEvent(vnode, key, value)\n\t\tif (key.slice(0, 6) === \"xlink:\") vnode.dom.setAttributeNS(\"http://www.w3.org/1999/xlink\", key.slice(6), value)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, value)\n\t\telse if (hasPropertyKey(vnode, key, ns)) {\n\t\t\tif (key === \"value\") {\n\t\t\t\t// Only do the coercion if we're actually going to check the value.\n\t\t\t\t/* eslint-disable no-implicit-coercion */\n\t\t\t\t//setting input[value] to same value by typing on focused element moves cursor to end in Chrome\n\t\t\t\tif ((vnode.tag === \"input\" || vnode.tag === \"textarea\") && vnode.dom.value === \"\" + value && vnode.dom === activeElement()) return\n\t\t\t\t//setting select[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"select\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t//setting option[value] to same value while having select open blinks select dropdown in Chrome\n\t\t\t\tif (vnode.tag === \"option\" && old !== null && vnode.dom.value === \"\" + value) return\n\t\t\t\t/* eslint-enable no-implicit-coercion */\n\t\t\t}\n\t\t\t// If you assign an input type that is not supported by IE 11 with an assignment expression, an error will occur.\n\t\t\tif (vnode.tag === \"input\" && key === \"type\") vnode.dom.setAttribute(key, value)\n\t\t\telse vnode.dom[key] = value\n\t\t} else {\n\t\t\tif (typeof value === \"boolean\") {\n\t\t\t\tif (value) vnode.dom.setAttribute(key, \"\")\n\t\t\t\telse vnode.dom.removeAttribute(key)\n\t\t\t}\n\t\t\telse vnode.dom.setAttribute(key === \"className\" ? \"class\" : key, value)\n\t\t}\n\t}\n\tfunction removeAttr(vnode, key, old, ns) {\n\t\tif (key === \"key\" || key === \"is\" || old == null || isLifecycleMethod(key)) return\n\t\tif (key[0] === \"o\" && key[1] === \"n\" && !isLifecycleMethod(key)) updateEvent(vnode, key, undefined)\n\t\telse if (key === \"style\") updateStyle(vnode.dom, old, null)\n\t\telse if (\n\t\t\thasPropertyKey(vnode, key, ns)\n\t\t\t&& key !== \"className\"\n\t\t\t&& !(key === \"value\" && (\n\t\t\t\tvnode.tag === \"option\"\n\t\t\t\t|| vnode.tag === \"select\" && vnode.dom.selectedIndex === -1 && vnode.dom === activeElement()\n\t\t\t))\n\t\t\t&& !(vnode.tag === \"input\" && key === \"type\")\n\t\t) {\n\t\t\tvnode.dom[key] = null\n\t\t} else {\n\t\t\tvar nsLastIndex = key.indexOf(\":\")\n\t\t\tif (nsLastIndex !== -1) key = key.slice(nsLastIndex + 1)\n\t\t\tif (old !== false) vnode.dom.removeAttribute(key === \"className\" ? \"class\" : key)\n\t\t}\n\t}\n\tfunction setLateSelectAttrs(vnode, attrs) {\n\t\tif (\"value\" in attrs) {\n\t\t\tif(attrs.value === null) {\n\t\t\t\tif (vnode.dom.selectedIndex !== -1) vnode.dom.value = null\n\t\t\t} else {\n\t\t\t\tvar normalized = \"\" + attrs.value // eslint-disable-line no-implicit-coercion\n\t\t\t\tif (vnode.dom.value !== normalized || vnode.dom.selectedIndex === -1) {\n\t\t\t\t\tvnode.dom.value = normalized\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\"selectedIndex\" in attrs) setAttr(vnode, \"selectedIndex\", null, attrs.selectedIndex, undefined)\n\t}\n\tfunction updateAttrs(vnode, old, attrs, ns) {\n\t\tif (attrs != null) {\n\t\t\tfor (var key in attrs) {\n\t\t\t\tsetAttr(vnode, key, old && old[key], attrs[key], ns)\n\t\t\t}\n\t\t}\n\t\tvar val\n\t\tif (old != null) {\n\t\t\tfor (var key in old) {\n\t\t\t\tif (((val = old[key]) != null) && (attrs == null || attrs[key] == null)) {\n\t\t\t\t\tremoveAttr(vnode, key, val, ns)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction isFormAttribute(vnode, attr) {\n\t\treturn attr === \"value\" || attr === \"checked\" || attr === \"selectedIndex\" || attr === \"selected\" && vnode.dom === activeElement() || vnode.tag === \"option\" && vnode.dom.parentNode === $doc.activeElement\n\t}\n\tfunction isLifecycleMethod(attr) {\n\t\treturn attr === \"oninit\" || attr === \"oncreate\" || attr === \"onupdate\" || attr === \"onremove\" || attr === \"onbeforeremove\" || attr === \"onbeforeupdate\"\n\t}\n\tfunction hasPropertyKey(vnode, key, ns) {\n\t\t// Filter out namespaced keys\n\t\treturn ns === undefined && (\n\t\t\t// If it's a custom element, just keep it.\n\t\t\tvnode.tag.indexOf(\"-\") > -1 || vnode.attrs != null && vnode.attrs.is ||\n\t\t\t// If it's a normal element, let's try to avoid a few browser bugs.\n\t\t\tkey !== \"href\" && key !== \"list\" && key !== \"form\" && key !== \"width\" && key !== \"height\"// && key !== \"type\"\n\t\t\t// Defer the property check until *after* we check everything.\n\t\t) && key in vnode.dom\n\t}\n\n\t//style\n\tvar uppercaseRegex = /[A-Z]/g\n\tfunction toLowerCase(capital) { return \"-\" + capital.toLowerCase() }\n\tfunction normalizeKey(key) {\n\t\treturn key[0] === \"-\" && key[1] === \"-\" ? key :\n\t\t\tkey === \"cssFloat\" ? \"float\" :\n\t\t\t\tkey.replace(uppercaseRegex, toLowerCase)\n\t}\n\tfunction updateStyle(element, old, style) {\n\t\tif (old === style) {\n\t\t\t// Styles are equivalent, do nothing.\n\t\t} else if (style == null) {\n\t\t\t// New style is missing, just clear it.\n\t\t\telement.style.cssText = \"\"\n\t\t} else if (typeof style !== \"object\") {\n\t\t\t// New style is a string, let engine deal with patching.\n\t\t\telement.style.cssText = style\n\t\t} else if (old == null || typeof old !== \"object\") {\n\t\t\t// `old` is missing or a string, `style` is an object.\n\t\t\telement.style.cssText = \"\"\n\t\t\t// Add new style properties\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null) element.style.setProperty(normalizeKey(key), String(value))\n\t\t\t}\n\t\t} else {\n\t\t\t// Both old & new are (different) objects.\n\t\t\t// Update style properties that have changed\n\t\t\tfor (var key in style) {\n\t\t\t\tvar value = style[key]\n\t\t\t\tif (value != null && (value = String(value)) !== String(old[key])) {\n\t\t\t\t\telement.style.setProperty(normalizeKey(key), value)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove style properties that no longer exist\n\t\t\tfor (var key in old) {\n\t\t\t\tif (old[key] != null && style[key] == null) {\n\t\t\t\t\telement.style.removeProperty(normalizeKey(key))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Here's an explanation of how this works:\n\t// 1. The event names are always (by design) prefixed by `on`.\n\t// 2. The EventListener interface accepts either a function or an object\n\t//    with a `handleEvent` method.\n\t// 3. The object does not inherit from `Object.prototype`, to avoid\n\t//    any potential interference with that (e.g. setters).\n\t// 4. The event name is remapped to the handler before calling it.\n\t// 5. In function-based event handlers, `ev.target === this`. We replicate\n\t//    that below.\n\t// 6. In function-based event handlers, `return false` prevents the default\n\t//    action and stops event propagation. We replicate that below.\n\tfunction EventDict() {\n\t\t// Save this, so the current redraw is correctly tracked.\n\t\tthis._ = currentRedraw\n\t}\n\tEventDict.prototype = Object.create(null)\n\tEventDict.prototype.handleEvent = function (ev) {\n\t\tvar handler = this[\"on\" + ev.type]\n\t\tvar result\n\t\tif (typeof handler === \"function\") result = handler.call(ev.currentTarget, ev)\n\t\telse if (typeof handler.handleEvent === \"function\") handler.handleEvent(ev)\n\t\tif (this._ && ev.redraw !== false) (0, this._)()\n\t\tif (result === false) {\n\t\t\tev.preventDefault()\n\t\t\tev.stopPropagation()\n\t\t}\n\t}\n\n\t//event\n\tfunction updateEvent(vnode, key, value) {\n\t\tif (vnode.events != null) {\n\t\t\tif (vnode.events[key] === value) return\n\t\t\tif (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\t\tif (vnode.events[key] == null) vnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = value\n\t\t\t} else {\n\t\t\t\tif (vnode.events[key] != null) vnode.dom.removeEventListener(key.slice(2), vnode.events, false)\n\t\t\t\tvnode.events[key] = undefined\n\t\t\t}\n\t\t} else if (value != null && (typeof value === \"function\" || typeof value === \"object\")) {\n\t\t\tvnode.events = new EventDict()\n\t\t\tvnode.dom.addEventListener(key.slice(2), vnode.events, false)\n\t\t\tvnode.events[key] = value\n\t\t}\n\t}\n\n\t//lifecycle\n\tfunction initLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.oninit === \"function\") callHook.call(source.oninit, vnode)\n\t\tif (typeof source.oncreate === \"function\") hooks.push(callHook.bind(source.oncreate, vnode))\n\t}\n\tfunction updateLifecycle(source, vnode, hooks) {\n\t\tif (typeof source.onupdate === \"function\") hooks.push(callHook.bind(source.onupdate, vnode))\n\t}\n\tfunction shouldNotUpdate(vnode, old) {\n\t\tdo {\n\t\t\tif (vnode.attrs != null && typeof vnode.attrs.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.attrs.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\tif (typeof vnode.tag !== \"string\" && typeof vnode.state.onbeforeupdate === \"function\") {\n\t\t\t\tvar force = callHook.call(vnode.state.onbeforeupdate, vnode, old)\n\t\t\t\tif (force !== undefined && !force) break\n\t\t\t}\n\t\t\treturn false\n\t\t} while (false); // eslint-disable-line no-constant-condition\n\t\tvnode.dom = old.dom\n\t\tvnode.domSize = old.domSize\n\t\tvnode.instance = old.instance\n\t\t// One would think having the actual latest attributes would be ideal,\n\t\t// but it doesn't let us properly diff based on our current internal\n\t\t// representation. We have to save not only the old DOM info, but also\n\t\t// the attributes used to create it, as we diff *that*, not against the\n\t\t// DOM directly (with a few exceptions in `setAttr`). And, of course, we\n\t\t// need to save the children and text as they are conceptually not\n\t\t// unlike special \"attributes\" internally.\n\t\tvnode.attrs = old.attrs\n\t\tvnode.children = old.children\n\t\tvnode.text = old.text\n\t\treturn true\n\t}\n\n\treturn function(dom, vnodes, redraw) {\n\t\tif (!dom) throw new TypeError(\"Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.\")\n\t\tvar hooks = []\n\t\tvar active = activeElement()\n\t\tvar namespace = dom.namespaceURI\n\n\t\t// First time rendering into a node clears it out\n\t\tif (dom.vnodes == null) dom.textContent = \"\"\n\n\t\tvnodes = Vnode.normalizeChildren(Array.isArray(vnodes) ? vnodes : [vnodes])\n\t\tvar prevRedraw = currentRedraw\n\t\ttry {\n\t\t\tcurrentRedraw = typeof redraw === \"function\" ? redraw : undefined\n\t\t\tupdateNodes(dom, dom.vnodes, vnodes, hooks, null, namespace === \"http://www.w3.org/1999/xhtml\" ? undefined : namespace)\n\t\t} finally {\n\t\t\tcurrentRedraw = prevRedraw\n\t\t}\n\t\tdom.vnodes = vnodes\n\t\t// `document.activeElement` can return null: https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement\n\t\tif (active != null && activeElement() !== active && typeof active.focus === \"function\") active.focus()\n\t\tfor (var i = 0; i < hooks.length; i++) hooks[i]()\n\t}\n}\n","\"use strict\"\n\nmodule.exports = require(\"./render/render\")(window)\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\n\nmodule.exports = function(render, schedule, console) {\n\tvar subscriptions = []\n\tvar rendering = false\n\tvar pending = false\n\n\tfunction sync() {\n\t\tif (rendering) throw new Error(\"Nested m.redraw.sync() call\")\n\t\trendering = true\n\t\tfor (var i = 0; i < subscriptions.length; i += 2) {\n\t\t\ttry { render(subscriptions[i], Vnode(subscriptions[i + 1]), redraw) }\n\t\t\tcatch (e) { console.error(e) }\n\t\t}\n\t\trendering = false\n\t}\n\n\tfunction redraw() {\n\t\tif (!pending) {\n\t\t\tpending = true\n\t\t\tschedule(function() {\n\t\t\t\tpending = false\n\t\t\t\tsync()\n\t\t\t})\n\t\t}\n\t}\n\n\tredraw.sync = sync\n\n\tfunction mount(root, component) {\n\t\tif (component != null && component.view == null && typeof component !== \"function\") {\n\t\t\tthrow new TypeError(\"m.mount(element, component) expects a component, not a vnode\")\n\t\t}\n\n\t\tvar index = subscriptions.indexOf(root)\n\t\tif (index >= 0) {\n\t\t\tsubscriptions.splice(index, 2)\n\t\t\trender(root, [], redraw)\n\t\t}\n\n\t\tif (component != null) {\n\t\t\tsubscriptions.push(root, component)\n\t\t\trender(root, Vnode(component), redraw)\n\t\t}\n\t}\n\n\treturn {mount: mount, redraw: redraw}\n}\n","\"use strict\"\n\nvar render = require(\"./render\")\n\nmodule.exports = require(\"./api/mount-redraw\")(render, requestAnimationFrame, console)\n","\"use strict\"\n\nmodule.exports = function(object) {\n\tif (Object.prototype.toString.call(object) !== \"[object Object]\") return \"\"\n\n\tvar args = []\n\tfor (var key in object) {\n\t\tdestructure(key, object[key])\n\t}\n\n\treturn args.join(\"&\")\n\n\tfunction destructure(key, value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse if (Object.prototype.toString.call(value) === \"[object Object]\") {\n\t\t\tfor (var i in value) {\n\t\t\t\tdestructure(key + \"[\" + i + \"]\", value[i])\n\t\t\t}\n\t\t}\n\t\telse args.push(encodeURIComponent(key) + (value != null && value !== \"\" ? \"=\" + encodeURIComponent(value) : \"\"))\n\t}\n}\n","\"use strict\"\n\nmodule.exports = Object.assign || function(target, source) {\n\tif(source) Object.keys(source).forEach(function(key) { target[key] = source[key] })\n}\n","\"use strict\"\n\nvar buildQueryString = require(\"../querystring/build\")\nvar assign = require(\"./assign\")\n\n// Returns `path` from `template` + `params`\nmodule.exports = function(template, params) {\n\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(template)) {\n\t\tthrow new SyntaxError(\"Template parameter names *must* be separated\")\n\t}\n\tif (params == null) return template\n\tvar queryIndex = template.indexOf(\"?\")\n\tvar hashIndex = template.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? template.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = template.slice(0, pathEnd)\n\tvar query = {}\n\n\tassign(query, params)\n\n\tvar resolved = path.replace(/:([^\\/\\.-]+)(\\.{3})?/g, function(m, key, variadic) {\n\t\tdelete query[key]\n\t\t// If no such parameter exists, don't interpolate it.\n\t\tif (params[key] == null) return m\n\t\t// Escape normal parameters, but not variadic ones.\n\t\treturn variadic ? params[key] : encodeURIComponent(String(params[key]))\n\t})\n\n\t// In case the template substitution adds new query/hash parameters.\n\tvar newQueryIndex = resolved.indexOf(\"?\")\n\tvar newHashIndex = resolved.indexOf(\"#\")\n\tvar newQueryEnd = newHashIndex < 0 ? resolved.length : newHashIndex\n\tvar newPathEnd = newQueryIndex < 0 ? newQueryEnd : newQueryIndex\n\tvar result = resolved.slice(0, newPathEnd)\n\n\tif (queryIndex >= 0) result += template.slice(queryIndex, queryEnd)\n\tif (newQueryIndex >= 0) result += (queryIndex < 0 ? \"?\" : \"&\") + resolved.slice(newQueryIndex, newQueryEnd)\n\tvar querystring = buildQueryString(query)\n\tif (querystring) result += (queryIndex < 0 && newQueryIndex < 0 ? \"?\" : \"&\") + querystring\n\tif (hashIndex >= 0) result += template.slice(hashIndex)\n\tif (newHashIndex >= 0) result += (hashIndex < 0 ? \"\" : \"&\") + resolved.slice(newHashIndex)\n\treturn result\n}\n","\"use strict\"\n\nvar buildPathname = require(\"../pathname/build\")\n\nmodule.exports = function($window, Promise, oncompletion) {\n\tvar callbackCount = 0\n\n\tfunction PromiseProxy(executor) {\n\t\treturn new Promise(executor)\n\t}\n\n\t// In case the global Promise is some userland library's where they rely on\n\t// `foo instanceof this.constructor`, `this.constructor.resolve(value)`, or\n\t// similar. Let's *not* break them.\n\tPromiseProxy.prototype = Promise.prototype\n\tPromiseProxy.__proto__ = Promise // eslint-disable-line no-proto\n\n\tfunction makeRequest(factory) {\n\t\treturn function(url, args) {\n\t\t\tif (typeof url !== \"string\") { args = url; url = url.url }\n\t\t\telse if (args == null) args = {}\n\t\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\t\tfactory(buildPathname(url, args.params), args, function (data) {\n\t\t\t\t\tif (typeof args.type === \"function\") {\n\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tdata[i] = new args.type(data[i])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse data = new args.type(data)\n\t\t\t\t\t}\n\t\t\t\t\tresolve(data)\n\t\t\t\t}, reject)\n\t\t\t})\n\t\t\tif (args.background === true) return promise\n\t\t\tvar count = 0\n\t\t\tfunction complete() {\n\t\t\t\tif (--count === 0 && typeof oncompletion === \"function\") oncompletion()\n\t\t\t}\n\n\t\t\treturn wrap(promise)\n\n\t\t\tfunction wrap(promise) {\n\t\t\t\tvar then = promise.then\n\t\t\t\t// Set the constructor, so engines know to not await or resolve\n\t\t\t\t// this as a native promise. At the time of writing, this is\n\t\t\t\t// only necessary for V8, but their behavior is the correct\n\t\t\t\t// behavior per spec. See this spec issue for more details:\n\t\t\t\t// https://github.com/tc39/ecma262/issues/1577. Also, see the\n\t\t\t\t// corresponding comment in `request/tests/test-request.js` for\n\t\t\t\t// a bit more background on the issue at hand.\n\t\t\t\tpromise.constructor = PromiseProxy\n\t\t\t\tpromise.then = function() {\n\t\t\t\t\tcount++\n\t\t\t\t\tvar next = then.apply(promise, arguments)\n\t\t\t\t\tnext.then(complete, function(e) {\n\t\t\t\t\t\tcomplete()\n\t\t\t\t\t\tif (count === 0) throw e\n\t\t\t\t\t})\n\t\t\t\t\treturn wrap(next)\n\t\t\t\t}\n\t\t\t\treturn promise\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasHeader(args, name) {\n\t\tfor (var key in args.headers) {\n\t\t\tif ({}.hasOwnProperty.call(args.headers, key) && name.test(key)) return true\n\t\t}\n\t\treturn false\n\t}\n\n\treturn {\n\t\trequest: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar method = args.method != null ? args.method.toUpperCase() : \"GET\"\n\t\t\tvar body = args.body\n\t\t\tvar assumeJSON = (args.serialize == null || args.serialize === JSON.serialize) && !(body instanceof $window.FormData)\n\t\t\tvar responseType = args.responseType || (typeof args.extract === \"function\" ? \"\" : \"json\")\n\n\t\t\tvar xhr = new $window.XMLHttpRequest(), aborted = false\n\t\t\tvar original = xhr, replacedAbort\n\t\t\tvar abort = xhr.abort\n\n\t\t\txhr.abort = function() {\n\t\t\t\taborted = true\n\t\t\t\tabort.call(this)\n\t\t\t}\n\n\t\t\txhr.open(method, url, args.async !== false, typeof args.user === \"string\" ? args.user : undefined, typeof args.password === \"string\" ? args.password : undefined)\n\n\t\t\tif (assumeJSON && body != null && !hasHeader(args, /^content-type$/i)) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t\t}\n\t\t\tif (typeof args.deserialize !== \"function\" && !hasHeader(args, /^accept$/i)) {\n\t\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\n\t\t\t}\n\t\t\tif (args.withCredentials) xhr.withCredentials = args.withCredentials\n\t\t\tif (args.timeout) xhr.timeout = args.timeout\n\t\t\txhr.responseType = responseType\n\n\t\t\tfor (var key in args.headers) {\n\t\t\t\tif ({}.hasOwnProperty.call(args.headers, key)) {\n\t\t\t\t\txhr.setRequestHeader(key, args.headers[key])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txhr.onreadystatechange = function(ev) {\n\t\t\t\t// Don't throw errors on xhr.abort().\n\t\t\t\tif (aborted) return\n\n\t\t\t\tif (ev.target.readyState === 4) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar success = (ev.target.status >= 200 && ev.target.status < 300) || ev.target.status === 304 || (/^file:\\/\\//i).test(url)\n\t\t\t\t\t\t// When the response type isn't \"\" or \"text\",\n\t\t\t\t\t\t// `xhr.responseText` is the wrong thing to use.\n\t\t\t\t\t\t// Browsers do the right thing and throw here, and we\n\t\t\t\t\t\t// should honor that and do the right thing by\n\t\t\t\t\t\t// preferring `xhr.response` where possible/practical.\n\t\t\t\t\t\tvar response = ev.target.response, message\n\n\t\t\t\t\t\tif (responseType === \"json\") {\n\t\t\t\t\t\t\t// For IE and Edge, which don't implement\n\t\t\t\t\t\t\t// `responseType: \"json\"`.\n\t\t\t\t\t\t\tif (!ev.target.responseType && typeof args.extract !== \"function\") response = JSON.parse(ev.target.responseText)\n\t\t\t\t\t\t} else if (!responseType || responseType === \"text\") {\n\t\t\t\t\t\t\t// Only use this default if it's text. If a parsed\n\t\t\t\t\t\t\t// document is needed on old IE and friends (all\n\t\t\t\t\t\t\t// unsupported), the user should use a custom\n\t\t\t\t\t\t\t// `config` instead. They're already using this at\n\t\t\t\t\t\t\t// their own risk.\n\t\t\t\t\t\t\tif (response == null) response = ev.target.responseText\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof args.extract === \"function\") {\n\t\t\t\t\t\t\tresponse = args.extract(ev.target, args)\n\t\t\t\t\t\t\tsuccess = true\n\t\t\t\t\t\t} else if (typeof args.deserialize === \"function\") {\n\t\t\t\t\t\t\tresponse = args.deserialize(response)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (success) resolve(response)\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttry { message = ev.target.responseText }\n\t\t\t\t\t\t\tcatch (e) { message = response }\n\t\t\t\t\t\t\tvar error = new Error(message)\n\t\t\t\t\t\t\terror.code = ev.target.status\n\t\t\t\t\t\t\terror.response = response\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treject(e)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof args.config === \"function\") {\n\t\t\t\txhr = args.config(xhr, args, url) || xhr\n\n\t\t\t\t// Propagate the `abort` to any replacement XHR as well.\n\t\t\t\tif (xhr !== original) {\n\t\t\t\t\treplacedAbort = xhr.abort\n\t\t\t\t\txhr.abort = function() {\n\t\t\t\t\t\taborted = true\n\t\t\t\t\t\treplacedAbort.call(this)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (body == null) xhr.send()\n\t\t\telse if (typeof args.serialize === \"function\") xhr.send(args.serialize(body))\n\t\t\telse if (body instanceof $window.FormData) xhr.send(body)\n\t\t\telse xhr.send(JSON.stringify(body))\n\t\t}),\n\t\tjsonp: makeRequest(function(url, args, resolve, reject) {\n\t\t\tvar callbackName = args.callbackName || \"_mithril_\" + Math.round(Math.random() * 1e16) + \"_\" + callbackCount++\n\t\t\tvar script = $window.document.createElement(\"script\")\n\t\t\t$window[callbackName] = function(data) {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\tresolve(data)\n\t\t\t}\n\t\t\tscript.onerror = function() {\n\t\t\t\tdelete $window[callbackName]\n\t\t\t\tscript.parentNode.removeChild(script)\n\t\t\t\treject(new Error(\"JSONP request failed\"))\n\t\t\t}\n\t\t\tscript.src = url + (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") +\n\t\t\t\tencodeURIComponent(args.callbackKey || \"callback\") + \"=\" +\n\t\t\t\tencodeURIComponent(callbackName)\n\t\t\t$window.document.documentElement.appendChild(script)\n\t\t}),\n\t}\n}\n","\"use strict\"\n\nvar PromisePolyfill = require(\"./promise/promise\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./request/request\")(window, PromisePolyfill, mountRedraw.redraw)\n","\"use strict\"\n\nmodule.exports = function(string) {\n\tif (string === \"\" || string == null) return {}\n\tif (string.charAt(0) === \"?\") string = string.slice(1)\n\n\tvar entries = string.split(\"&\"), counters = {}, data = {}\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i].split(\"=\")\n\t\tvar key = decodeURIComponent(entry[0])\n\t\tvar value = entry.length === 2 ? decodeURIComponent(entry[1]) : \"\"\n\n\t\tif (value === \"true\") value = true\n\t\telse if (value === \"false\") value = false\n\n\t\tvar levels = key.split(/\\]\\[?|\\[/)\n\t\tvar cursor = data\n\t\tif (key.indexOf(\"[\") > -1) levels.pop()\n\t\tfor (var j = 0; j < levels.length; j++) {\n\t\t\tvar level = levels[j], nextLevel = levels[j + 1]\n\t\t\tvar isNumber = nextLevel == \"\" || !isNaN(parseInt(nextLevel, 10))\n\t\t\tif (level === \"\") {\n\t\t\t\tvar key = levels.slice(0, j).join()\n\t\t\t\tif (counters[key] == null) {\n\t\t\t\t\tcounters[key] = Array.isArray(cursor) ? cursor.length : 0\n\t\t\t\t}\n\t\t\t\tlevel = counters[key]++\n\t\t\t}\n\t\t\t// Disallow direct prototype pollution\n\t\t\telse if (level === \"__proto__\") break\n\t\t\tif (j === levels.length - 1) cursor[level] = value\n\t\t\telse {\n\t\t\t\t// Read own properties exclusively to disallow indirect\n\t\t\t\t// prototype pollution\n\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(cursor, level)\n\t\t\t\tif (desc != null) desc = desc.value\n\t\t\t\tif (desc == null) cursor[level] = desc = isNumber ? [] : {}\n\t\t\t\tcursor = desc\n\t\t\t}\n\t\t}\n\t}\n\treturn data\n}\n","\"use strict\"\n\nvar parseQueryString = require(\"../querystring/parse\")\n\n// Returns `{path, params}` from `url`\nmodule.exports = function(url) {\n\tvar queryIndex = url.indexOf(\"?\")\n\tvar hashIndex = url.indexOf(\"#\")\n\tvar queryEnd = hashIndex < 0 ? url.length : hashIndex\n\tvar pathEnd = queryIndex < 0 ? queryEnd : queryIndex\n\tvar path = url.slice(0, pathEnd).replace(/\\/{2,}/g, \"/\")\n\n\tif (!path) path = \"/\"\n\telse {\n\t\tif (path[0] !== \"/\") path = \"/\" + path\n\t\tif (path.length > 1 && path[path.length - 1] === \"/\") path = path.slice(0, -1)\n\t}\n\treturn {\n\t\tpath: path,\n\t\tparams: queryIndex < 0\n\t\t\t? {}\n\t\t\t: parseQueryString(url.slice(queryIndex + 1, queryEnd)),\n\t}\n}\n","\"use strict\"\n\nvar parsePathname = require(\"./parse\")\n\n// Compiles a template into a function that takes a resolved path (without query\n// strings) and returns an object containing the template parameters with their\n// parsed values. This expects the input of the compiled template to be the\n// output of `parsePathname`. Note that it does *not* remove query parameters\n// specified in the template.\nmodule.exports = function(template) {\n\tvar templateData = parsePathname(template)\n\tvar templateKeys = Object.keys(templateData.params)\n\tvar keys = []\n\tvar regexp = new RegExp(\"^\" + templateData.path.replace(\n\t\t// I escape literal text so people can use things like `:file.:ext` or\n\t\t// `:lang-:locale` in routes. This is all merged into one pass so I\n\t\t// don't also accidentally escape `-` and make it harder to detect it to\n\t\t// ban it from template parameters.\n\t\t/:([^\\/.-]+)(\\.{3}|\\.(?!\\.)|-)?|[\\\\^$*+.()|\\[\\]{}]/g,\n\t\tfunction(m, key, extra) {\n\t\t\tif (key == null) return \"\\\\\" + m\n\t\t\tkeys.push({k: key, r: extra === \"...\"})\n\t\t\tif (extra === \"...\") return \"(.*)\"\n\t\t\tif (extra === \".\") return \"([^/]+)\\\\.\"\n\t\t\treturn \"([^/]+)\" + (extra || \"\")\n\t\t}\n\t) + \"$\")\n\treturn function(data) {\n\t\t// First, check the params. Usually, there isn't any, and it's just\n\t\t// checking a static set.\n\t\tfor (var i = 0; i < templateKeys.length; i++) {\n\t\t\tif (templateData.params[templateKeys[i]] !== data.params[templateKeys[i]]) return false\n\t\t}\n\t\t// If no interpolations exist, let's skip all the ceremony\n\t\tif (!keys.length) return regexp.test(data.path)\n\t\tvar values = regexp.exec(data.path)\n\t\tif (values == null) return false\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tdata.params[keys[i].k] = keys[i].r ? values[i + 1] : decodeURIComponent(values[i + 1])\n\t\t}\n\t\treturn true\n\t}\n}\n","\"use strict\"\n\nvar Vnode = require(\"../render/vnode\")\nvar m = require(\"../render/hyperscript\")\nvar Promise = require(\"../promise/promise\")\n\nvar buildPathname = require(\"../pathname/build\")\nvar parsePathname = require(\"../pathname/parse\")\nvar compileTemplate = require(\"../pathname/compileTemplate\")\nvar assign = require(\"../pathname/assign\")\n\nvar sentinel = {}\n\nmodule.exports = function($window, mountRedraw) {\n\tvar fireAsync\n\n\tfunction setPath(path, data, options) {\n\t\tpath = buildPathname(path, data)\n\t\tif (fireAsync != null) {\n\t\t\tfireAsync()\n\t\t\tvar state = options ? options.state : null\n\t\t\tvar title = options ? options.title : null\n\t\t\tif (options && options.replace) $window.history.replaceState(state, title, route.prefix + path)\n\t\t\telse $window.history.pushState(state, title, route.prefix + path)\n\t\t}\n\t\telse {\n\t\t\t$window.location.href = route.prefix + path\n\t\t}\n\t}\n\n\tvar currentResolver = sentinel, component, attrs, currentPath, lastUpdate\n\n\tvar SKIP = route.SKIP = {}\n\n\tfunction route(root, defaultRoute, routes) {\n\t\tif (root == null) throw new Error(\"Ensure the DOM element that was passed to `m.route` is not undefined\")\n\t\t// 0 = start\n\t\t// 1 = init\n\t\t// 2 = ready\n\t\tvar state = 0\n\n\t\tvar compiled = Object.keys(routes).map(function(route) {\n\t\t\tif (route[0] !== \"/\") throw new SyntaxError(\"Routes must start with a `/`\")\n\t\t\tif ((/:([^\\/\\.-]+)(\\.{3})?:/).test(route)) {\n\t\t\t\tthrow new SyntaxError(\"Route parameter names must be separated with either `/`, `.`, or `-`\")\n\t\t\t}\n\t\t\treturn {\n\t\t\t\troute: route,\n\t\t\t\tcomponent: routes[route],\n\t\t\t\tcheck: compileTemplate(route),\n\t\t\t}\n\t\t})\n\t\tvar callAsync = typeof setImmediate === \"function\" ? setImmediate : setTimeout\n\t\tvar p = Promise.resolve()\n\t\tvar scheduled = false\n\t\tvar onremove\n\n\t\tfireAsync = null\n\n\t\tif (defaultRoute != null) {\n\t\t\tvar defaultData = parsePathname(defaultRoute)\n\n\t\t\tif (!compiled.some(function (i) { return i.check(defaultData) })) {\n\t\t\t\tthrow new ReferenceError(\"Default route doesn't match any known routes\")\n\t\t\t}\n\t\t}\n\n\t\tfunction resolveRoute() {\n\t\t\tscheduled = false\n\t\t\t// Consider the pathname holistically. The prefix might even be invalid,\n\t\t\t// but that's not our problem.\n\t\t\tvar prefix = $window.location.hash\n\t\t\tif (route.prefix[0] !== \"#\") {\n\t\t\t\tprefix = $window.location.search + prefix\n\t\t\t\tif (route.prefix[0] !== \"?\") {\n\t\t\t\t\tprefix = $window.location.pathname + prefix\n\t\t\t\t\tif (prefix[0] !== \"/\") prefix = \"/\" + prefix\n\t\t\t\t}\n\t\t\t}\n\t\t\t// This seemingly useless `.concat()` speeds up the tests quite a bit,\n\t\t\t// since the representation is consistently a relatively poorly\n\t\t\t// optimized cons string.\n\t\t\tvar path = prefix.concat()\n\t\t\t\t.replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent)\n\t\t\t\t.slice(route.prefix.length)\n\t\t\tvar data = parsePathname(path)\n\n\t\t\tassign(data.params, $window.history.state)\n\n\t\t\tfunction fail() {\n\t\t\t\tif (path === defaultRoute) throw new Error(\"Could not resolve default route \" + defaultRoute)\n\t\t\t\tsetPath(defaultRoute, null, {replace: true})\n\t\t\t}\n\n\t\t\tloop(0)\n\t\t\tfunction loop(i) {\n\t\t\t\t// 0 = init\n\t\t\t\t// 1 = scheduled\n\t\t\t\t// 2 = done\n\t\t\t\tfor (; i < compiled.length; i++) {\n\t\t\t\t\tif (compiled[i].check(data)) {\n\t\t\t\t\t\tvar payload = compiled[i].component\n\t\t\t\t\t\tvar matchedRoute = compiled[i].route\n\t\t\t\t\t\tvar localComp = payload\n\t\t\t\t\t\tvar update = lastUpdate = function(comp) {\n\t\t\t\t\t\t\tif (update !== lastUpdate) return\n\t\t\t\t\t\t\tif (comp === SKIP) return loop(i + 1)\n\t\t\t\t\t\t\tcomponent = comp != null && (typeof comp.view === \"function\" || typeof comp === \"function\")? comp : \"div\"\n\t\t\t\t\t\t\tattrs = data.params, currentPath = path, lastUpdate = null\n\t\t\t\t\t\t\tcurrentResolver = payload.render ? payload : null\n\t\t\t\t\t\t\tif (state === 2) mountRedraw.redraw()\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tstate = 2\n\t\t\t\t\t\t\t\tmountRedraw.redraw.sync()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// There's no understating how much I *wish* I could\n\t\t\t\t\t\t// use `async`/`await` here...\n\t\t\t\t\t\tif (payload.view || typeof payload === \"function\") {\n\t\t\t\t\t\t\tpayload = {}\n\t\t\t\t\t\t\tupdate(localComp)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (payload.onmatch) {\n\t\t\t\t\t\t\tp.then(function () {\n\t\t\t\t\t\t\t\treturn payload.onmatch(data.params, path, matchedRoute)\n\t\t\t\t\t\t\t}).then(update, fail)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse update(\"div\")\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfail()\n\t\t\t}\n\t\t}\n\n\t\t// Set it unconditionally so `m.route.set` and `m.route.Link` both work,\n\t\t// even if neither `pushState` nor `hashchange` are supported. It's\n\t\t// cleared if `hashchange` is used, since that makes it automatically\n\t\t// async.\n\t\tfireAsync = function() {\n\t\t\tif (!scheduled) {\n\t\t\t\tscheduled = true\n\t\t\t\tcallAsync(resolveRoute)\n\t\t\t}\n\t\t}\n\n\t\tif (typeof $window.history.pushState === \"function\") {\n\t\t\tonremove = function() {\n\t\t\t\t$window.removeEventListener(\"popstate\", fireAsync, false)\n\t\t\t}\n\t\t\t$window.addEventListener(\"popstate\", fireAsync, false)\n\t\t} else if (route.prefix[0] === \"#\") {\n\t\t\tfireAsync = null\n\t\t\tonremove = function() {\n\t\t\t\t$window.removeEventListener(\"hashchange\", resolveRoute, false)\n\t\t\t}\n\t\t\t$window.addEventListener(\"hashchange\", resolveRoute, false)\n\t\t}\n\n\t\treturn mountRedraw.mount(root, {\n\t\t\tonbeforeupdate: function() {\n\t\t\t\tstate = state ? 2 : 1\n\t\t\t\treturn !(!state || sentinel === currentResolver)\n\t\t\t},\n\t\t\toncreate: resolveRoute,\n\t\t\tonremove: onremove,\n\t\t\tview: function() {\n\t\t\t\tif (!state || sentinel === currentResolver) return\n\t\t\t\t// Wrap in a fragment to preserve existing key semantics\n\t\t\t\tvar vnode = [Vnode(component, attrs.key, attrs)]\n\t\t\t\tif (currentResolver) vnode = currentResolver.render(vnode[0])\n\t\t\t\treturn vnode\n\t\t\t},\n\t\t})\n\t}\n\troute.set = function(path, data, options) {\n\t\tif (lastUpdate != null) {\n\t\t\toptions = options || {}\n\t\t\toptions.replace = true\n\t\t}\n\t\tlastUpdate = null\n\t\tsetPath(path, data, options)\n\t}\n\troute.get = function() {return currentPath}\n\troute.prefix = \"#!\"\n\troute.Link = {\n\t\tview: function(vnode) {\n\t\t\tvar options = vnode.attrs.options\n\t\t\t// Remove these so they don't get overwritten\n\t\t\tvar attrs = {}, onclick, href\n\t\t\tassign(attrs, vnode.attrs)\n\t\t\t// The first two are internal, but the rest are magic attributes\n\t\t\t// that need censored to not screw up rendering.\n\t\t\tattrs.selector = attrs.options = attrs.key = attrs.oninit =\n\t\t\tattrs.oncreate = attrs.onbeforeupdate = attrs.onupdate =\n\t\t\tattrs.onbeforeremove = attrs.onremove = null\n\n\t\t\t// Do this now so we can get the most current `href` and `disabled`.\n\t\t\t// Those attributes may also be specified in the selector, and we\n\t\t\t// should honor that.\n\t\t\tvar child = m(vnode.attrs.selector || \"a\", attrs, vnode.children)\n\n\t\t\t// Let's provide a *right* way to disable a route link, rather than\n\t\t\t// letting people screw up accessibility on accident.\n\t\t\t//\n\t\t\t// The attribute is coerced so users don't get surprised over\n\t\t\t// `disabled: 0` resulting in a button that's somehow routable\n\t\t\t// despite being visibly disabled.\n\t\t\tif (child.attrs.disabled = Boolean(child.attrs.disabled)) {\n\t\t\t\tchild.attrs.href = null\n\t\t\t\tchild.attrs[\"aria-disabled\"] = \"true\"\n\t\t\t\t// If you *really* do want to do this on a disabled link, use\n\t\t\t\t// an `oncreate` hook to add it.\n\t\t\t\tchild.attrs.onclick = null\n\t\t\t} else {\n\t\t\t\tonclick = child.attrs.onclick\n\t\t\t\thref = child.attrs.href\n\t\t\t\tchild.attrs.href = route.prefix + href\n\t\t\t\tchild.attrs.onclick = function(e) {\n\t\t\t\t\tvar result\n\t\t\t\t\tif (typeof onclick === \"function\") {\n\t\t\t\t\t\tresult = onclick.call(e.currentTarget, e)\n\t\t\t\t\t} else if (onclick == null || typeof onclick !== \"object\") {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t} else if (typeof onclick.handleEvent === \"function\") {\n\t\t\t\t\t\tonclick.handleEvent(e)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Adapted from React Router's implementation:\n\t\t\t\t\t// https://github.com/ReactTraining/react-router/blob/520a0acd48ae1b066eb0b07d6d4d1790a1d02482/packages/react-router-dom/modules/Link.js\n\t\t\t\t\t//\n\t\t\t\t\t// Try to be flexible and intuitive in how we handle links.\n\t\t\t\t\t// Fun fact: links aren't as obvious to get right as you\n\t\t\t\t\t// would expect. There's a lot more valid ways to click a\n\t\t\t\t\t// link than this, and one might want to not simply click a\n\t\t\t\t\t// link, but right click or command-click it to copy the\n\t\t\t\t\t// link target, etc. Nope, this isn't just for blind people.\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Skip if `onclick` prevented default\n\t\t\t\t\t\tresult !== false && !e.defaultPrevented &&\n\t\t\t\t\t\t// Ignore everything but left clicks\n\t\t\t\t\t\t(e.button === 0 || e.which === 0 || e.which === 1) &&\n\t\t\t\t\t\t// Let the browser handle `target=_blank`, etc.\n\t\t\t\t\t\t(!e.currentTarget.target || e.currentTarget.target === \"_self\") &&\n\t\t\t\t\t\t// No modifier keys\n\t\t\t\t\t\t!e.ctrlKey && !e.metaKey && !e.shiftKey && !e.altKey\n\t\t\t\t\t) {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\te.redraw = false\n\t\t\t\t\t\troute.set(href, null, options)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn child\n\t\t},\n\t}\n\troute.param = function(key) {\n\t\treturn attrs && key != null ? attrs[key] : attrs\n\t}\n\n\treturn route\n}\n","\"use strict\"\n\nvar mountRedraw = require(\"./mount-redraw\")\n\nmodule.exports = require(\"./api/router\")(window, mountRedraw)\n","\"use strict\"\n\nvar hyperscript = require(\"./hyperscript\")\nvar request = require(\"./request\")\nvar mountRedraw = require(\"./mount-redraw\")\n\nvar m = function m() { return hyperscript.apply(this, arguments) }\nm.m = hyperscript\nm.trust = hyperscript.trust\nm.fragment = hyperscript.fragment\nm.mount = mountRedraw.mount\nm.route = require(\"./route\")\nm.render = require(\"./render\")\nm.redraw = mountRedraw.redraw\nm.request = request.request\nm.jsonp = request.jsonp\nm.parseQueryString = require(\"./querystring/parse\")\nm.buildQueryString = require(\"./querystring/build\")\nm.parsePathname = require(\"./pathname/parse\")\nm.buildPathname = require(\"./pathname/build\")\nm.vnode = require(\"./render/vnode\")\nm.PromisePolyfill = require(\"./promise/polyfill\")\n\nmodule.exports = m\n","export const typeWriter = ({ text, onStart = () => { }, onTyped = str => { }, onFinished = () => { } }) => {\r\n    let animId = \"\";\r\n    let str = \"\";\r\n\r\n    onStart();\r\n\r\n    const t = (s = \"\", i = 0) => {\r\n        if (i > text.length) {\r\n            cancelAnimationFrame(animId);\r\n            onFinished();\r\n            return;\r\n        }\r\n\r\n        str = s + text.charAt(i);\r\n\r\n        i += 1;\r\n        onTyped(str);\r\n\r\n        requestAnimationFrame(() => t(str, i));\r\n    };\r\n\r\n    return {\r\n        start: () => (animId = requestAnimationFrame(() => t()))\r\n    };\r\n};","import m from \"mithril\";\r\nimport { typeWriter } from \"./effects\";\r\n\r\nlet mounted = false;\r\nlet isTyping = false;\r\nlet name = \"\";\r\nlet text = \"\";\r\nlet choices = [];\r\n\r\nconst primeGlobals = props => {\r\n  name = props.name;\r\n  text = \"\";\r\n  choices = [];\r\n\r\n  m.redraw();\r\n}\r\n\r\nconst callTypewriter = props => typeWriter({\r\n  text: props.text,\r\n  onStart: () => isTyping = true,\r\n  onTyped: str => {\r\n    text = str;\r\n    m.redraw();\r\n  },\r\n  onFinished: () => {\r\n    isTyping = false;\r\n    choices = props.choices.length ? props.choices : [];\r\n    m.redraw();\r\n  }\r\n}).start();\r\n\r\nconst callText = (props) => {\r\n\r\n  if (isTyping) return;\r\n\r\n  primeGlobals(props);\r\n  callTypewriter(props);\r\n};\r\n\r\nconst Shell = ({ attrs }) => {\r\n  return {\r\n    oninit: () => mounted = true,\r\n    onremove: () => {\r\n      mounted = false;\r\n      isTyping = false;\r\n      name = \"\";\r\n      text = \"\";\r\n      choices = [];\r\n    },\r\n    view: () => m(\"div\", { class: \"uiShell\" }, text &&\r\n      m(\"div\", { class: \"dialogueBoxOuter\" }, [\r\n        m(\"div\", { class: \"dialogue\" }, [\r\n          m(\"span\", name ? `${name}:` : \"\"),\r\n          m(\"span\", name ? `\"${text}\"` : text),\r\n          m(\r\n            \"div\",\r\n            { class: \"choiceWindow\" },\r\n            choices.map(choice => {\r\n              return m(\r\n                \"button\",\r\n                {\r\n                  class: \"choiceBox\",\r\n                  onclick: () => attrs.onChoiceSelected(choice)\r\n                },\r\n                choice.text\r\n              );\r\n            })\r\n          ),\r\n          isTyping ? \"\" : m(\"span\", { class: \"arrow\" })\r\n        ])\r\n      ]))\r\n  };\r\n};\r\n\r\nexport default {\r\n  isBusy: () => isTyping,\r\n  mount: (attrs = {}) =>\r\n    m.mount(document.getElementById(\"ui\"), {\r\n      view: () => m(Shell, attrs)\r\n    }),\r\n  unmount: () => m.mount(document.getElementById(\"ui\"), null),\r\n  callText: props => {\r\n    if (!mounted) return;\r\n\r\n    callText({\r\n      ...props\r\n    })\r\n  }\r\n};\r\n","export const MODES = {\r\n  NOTRUNNING: 100,\r\n  NEXTNODE: 200,\r\n  AWAITINGINPUT: 300,\r\n  JUSTFINISHED: 400,\r\n  COMPLETED: 500\r\n}\r\n\r\nexport default ({\r\n  conversationData,\r\n  onChatStarted = (node, props) => { },\r\n  onChatNext = (node, props) => { },\r\n  onChatComplete = lastPositionSaved => { },\r\n  onChainProgress = lastNodeId => { },\r\n  onChatCancelled = () => { }\r\n}) => {\r\n  let index = 0;\r\n  let currentNode = conversationData[index];\r\n  let isRunning = false;\r\n  let isComplete = false;\r\n\r\n  const displayNode = queriedNode => {\r\n    if (queriedNode) {\r\n      currentNode = queriedNode;\r\n      index = queriedNode.index;\r\n      return queriedNode;\r\n    } else {\r\n      throw \"No node match.\";\r\n    }\r\n  };\r\n\r\n  const queryNode = query => {\r\n    const queriedNode = conversationData.length\r\n      ? conversationData.filter(node => query === node.id)[0]\r\n      : null;\r\n\r\n    return displayNode(queriedNode);\r\n  };\r\n\r\n  const start = (query, props = {}) => {\r\n    const queriedNode = queryNode(query);\r\n\r\n    isRunning = true;\r\n    isComplete = false;\r\n\r\n    onChatStarted(queriedNode, props);\r\n\r\n    return {\r\n      ...displayNode(queriedNode),\r\n      mode: MODES.NEXTNODE\r\n    };\r\n  };\r\n\r\n  const goToExact = (query, props = {}) => {\r\n    const queriedNode = queryNode(query);\r\n\r\n    onChatNext(queriedNode, props);\r\n\r\n    return {\r\n      ...displayNode(queriedNode),\r\n      mode: MODES.NEXTNODE\r\n    };\r\n  };\r\n\r\n  const goToNext = (props = {}) => {\r\n    // We need to run this 'after' the finish so it avoids chained exec on exit.\r\n    if (!isRunning) return {\r\n      mode: MODES.NOTRUNNING\r\n    };\r\n\r\n    if (isComplete) {\r\n      isRunning = false;\r\n      return {\r\n        mode: MODES.COMPLETED\r\n      };\r\n    }\r\n\r\n    // TODO: Beware, if you're not checking for existent choices, this will error out,\r\n    // or do something a little funky. May want to check for choices here instead?\r\n    const { id, to, choices, actions } = currentNode;\r\n\r\n    // Wait if choices are presented.\r\n    if (choices.length) return {\r\n      ...currentNode,\r\n      mode: MODES.AWAITINGINPUT\r\n    }\r\n\r\n    // TODO: Consts please.\r\n    if (\r\n      actions.some(action => action === \"endConversation\") ||\r\n      (choices.length === 0 && !to)\r\n    ) {\r\n      if (actions.some(action => action === \"save\")) {\r\n        onChainProgress(id);\r\n      }\r\n\r\n      if (actions.some(action => action === \"cancel\")) {\r\n        onChatCancelled();\r\n      }\r\n\r\n      isComplete = true;\r\n      onChatComplete(id);\r\n      console.log(\"End reached, close the convo.\");\r\n      return {\r\n        ...currentNode,\r\n        mode: MODES.JUSTFINISHED\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...goToExact(to, props),\r\n      mode: MODES.NEXTNODE\r\n    };\r\n  };\r\n\r\n  return {\r\n    isComplete: () => isComplete,\r\n    isRunning: () => isRunning,\r\n    currentIndex: () => index,\r\n    start,\r\n    goToExact,\r\n    goToNext\r\n  };\r\n};\r\n","import { keyPressed } from \"kontra\";\r\n\r\nexport default (key, cb = () => {}) => {\r\n  let pushed = false;\r\n\r\n  return props => {\r\n    if (!pushed && keyPressed(key)) {\r\n      cb(props);\r\n      pushed = true;\r\n    } else if (pushed && !keyPressed(\"e\")) {\r\n      pushed = false;\r\n    }\r\n  };\r\n};\r\n","import { setStoreItem, dataAssets } from \"kontra\";\r\nimport dialogue from \"../ui/dialogue\";\r\nimport { emit, EV_CONVOEND } from \"../common/events\";\r\nimport ConversationIterator, { MODES } from \"../common/conversationIterator\";\r\nimport onPush from \"../input/onPush\";\r\n\r\nexport default ({\r\n  id,\r\n  startId,\r\n  onEntry = () => { },\r\n  onExit = () => { }\r\n}) => {\r\n\r\n  console.log(\"Start convo.\");\r\n\r\n  let isComplete = false;\r\n\r\n  const dataKey = \"assets/gameData/conversationData.json\";\r\n  const conversationData = dataAssets[dataKey];\r\n\r\n  const conversationController = ConversationIterator({\r\n    conversationData,\r\n    onChatComplete: exitId => {\r\n      dialogue.unmount();\r\n      emit(EV_CONVOEND, { exitId })\r\n    },\r\n    onChainProgress: lastNodeId => setStoreItem(\"progress\", {\r\n      storyProgress: lastNodeId\r\n    })\r\n  });\r\n\r\n  const onDisplayText = ({ actor: name, text, choices }) =>\r\n    dialogue.callText({ name, text, choices });\r\n\r\n  const onInteractionPushed =\r\n    onPush(\"e\", () => {\r\n\r\n      if (dialogue.isBusy()) return;\r\n\r\n      const { mode, ...rest } = !conversationController.isRunning() ?\r\n        conversationController.start(startId, {\r\n          startId\r\n        }) : conversationController.goToNext();\r\n\r\n      if (mode === MODES.NEXTNODE) {\r\n        onDisplayText(rest);\r\n      }\r\n\r\n      isComplete = mode === MODES.JUSTFINISHED || mode === MODES.COMPLETED;\r\n    });\r\n\r\n  dialogue.mount({\r\n    onChoiceSelected: choice => {\r\n      console.log(\"Selected:\");\r\n      console.log(choice);\r\n      const { mode, ...rest } = conversationController.goToExact(choice.to);\r\n\r\n      if (mode === MODES.NEXTNODE) {\r\n        onDisplayText(rest);\r\n      }\r\n\r\n      isComplete = mode === MODES.JUSTFINISHED || mode === MODES.COMPLETED;\r\n    }\r\n  });\r\n\r\n  return {\r\n    id,\r\n    isComplete: () => isComplete,\r\n    enter: props => onEntry(),\r\n    update: () => onInteractionPushed(),\r\n    exit: () => onExit()\r\n  };\r\n};\r\n","import { dataAssets, getStoreItem } from \"kontra\";\r\nimport m from \"mithril\";\r\n\r\nlet mounted = false;\r\n\r\n/* still deciding how to work the UI either with\r\nsngular instances of mithril or otherwise. */\r\nconst Shell = ({ attrs }) => {\r\n    const entitiesInStore = getStoreItem(\"entities\");\r\n    const dataKey = \"assets/gameData/entityData.json\";\r\n    const itemsInData = dataAssets[dataKey];\r\n\r\n    return {\r\n        oninit: () => mounted = true,\r\n        onremove: () => mounted = false,\r\n        view: () =>\r\n            m(\"div\", { class: \"uiShell\" }, [\r\n                m(\"div\", { class: \"dialogueBoxOuter\" }, [\r\n                    m(\"div\", { class: \"dialogue\" }, [\r\n                        attrs.items.length ? m(\"dl\",\r\n                            { class: \"itemListing\" },\r\n                            attrs.items.map(item => {\r\n                                const data = itemsInData.find(({ id }) => id === item.id);\r\n                                const storedItem = entitiesInStore.find(({ id }) => id === item.id);\r\n                                const qty = storedItem ? storedItem.qty : 0;\r\n\r\n                                return m(\"dd\", {\r\n                                    class: \"itemNode\",\r\n                                    onclick: () => attrs.onItemSelected(data)\r\n                                }, [\r\n                                    m(\"img\", { src: data.thumb }),\r\n                                    m(\"h4\", `${data.name}: x${qty}`),\r\n                                    m(\"h5\", data.description)\r\n                                ])\r\n                            })\r\n                        ) : m(\"p\", \"No items.\"),\r\n                        m(\"div\",\r\n                            { class: \"choiceWindow\" },\r\n                            m(\r\n                                \"button\",\r\n                                {\r\n                                    class: \"choiceBox\",\r\n                                    onclick: () => attrs.onInventoryClosed()\r\n                                },\r\n                                \"Close\"\r\n                            )\r\n                        )\r\n                    ])\r\n                ])\r\n            ])\r\n    }\r\n}\r\n\r\nexport default {\r\n    isBusy: () => mounted,\r\n    mount: (attrs = {}) => {\r\n        m.mount(document.getElementById(\"ui\"), {\r\n            view: () => m(Shell, attrs)\r\n        })\r\n    },\r\n    unmount: () => m.mount(document.getElementById(\"ui\"), null)\r\n}","import inventory from \"../ui/inventory\";\r\nimport { ENTITY_TYPE } from \"../common/consts\";\r\nimport onPush from \"../input/onPush\";\r\n\r\nexport default ({\r\n  id,\r\n  reactionManager,\r\n  getAllEntitiesOfType = () => { },\r\n  onEntry = () => { },\r\n  onExit = () => { }\r\n}) => {\r\n  let isComplete = false;\r\n  let interactionCooldown = false;\r\n\r\n  /* TODO: Use consts on keys also */\r\n  const onInteractionPushed = onPush(\"e\", ({ origin, collisions = [] }) => {\r\n    if (collisions.length && origin.controlledByUser) {\r\n      if (!interactionCooldown) {\r\n        /* Collision usually pre-sorted by this point, it's not up to the state\r\n        to handle this though. */\r\n        const interactible = collisions[0];\r\n        const reactionData = reactionManager.get(interactible.type);\r\n        /* Not all things will have a reaction set, plus they might expect\r\n        different properties to be passed in future. */\r\n        if (reactionData) {\r\n          reactionData.reactionEvent(interactible, [interactible, origin]);\r\n        }\r\n      } else {\r\n        interactionCooldown = false;\r\n      }\r\n    }\r\n  });\r\n\r\n  /* Technically, the inventory should only be openable in the field (or battle, but that's\r\n  out of this scope). Note: You might want the inventory to be a whole new state, but doing\r\n  it this way means you can overlay it across the game whilst you play. Whatever you need\r\n  basically. You might even want to life this to the index like the other reactions, in fact\r\n  that might make more sense. */\r\n  const onInventoryOpened = onPush(\"i\", () => {\r\n\r\n    if (inventory.isBusy()) return;\r\n\r\n    /* Get you a list of all items that are being held in data */\r\n    inventory.mount({\r\n      items: getAllEntitiesOfType(ENTITY_TYPE.PICKUP),\r\n      onInventoryClosed: () => inventory.unmount(),\r\n      onItemSelected: itemData => {\r\n        console.log(itemData);\r\n      }\r\n    })\r\n\r\n    // Don't forget to unmount it when it's done also!\r\n  });\r\n\r\n  return {\r\n    id,\r\n    isComplete: () => isComplete,\r\n    enter: props => onEntry(),\r\n    update: props => {\r\n      // TODO: Careful these don't conflict and do weird things (inventory in convo, etc, do not want!)\r\n      onInteractionPushed(props);\r\n      onInventoryOpened();\r\n    },\r\n    exit: () => onExit()\r\n  };\r\n};\r\n","export default ({ id, ctx, direction = 1, onFadeComplete = () => {} }) => {\r\n  // https://stackoverflow.com/questions/19258169/fadein-fadeout-in-html5-canvas\r\n  let isComplete = false;\r\n  let alpha = direction < 0 ? 1 : 0,\r\n    delta = 0.05;\r\n\r\n  ctx.globalAlpha = direction < 0 ? 1 : 0;\r\n\r\n  return {\r\n    id,\r\n    isComplete: () => isComplete,\r\n    enter: props => {},\r\n    update: () => {\r\n      isComplete =\r\n        (direction > 0 && alpha >= 1) || (direction < 0 && alpha <= -1);\r\n\r\n      alpha = direction < 0 ? alpha - delta : alpha + delta;\r\n\r\n      ctx.clearRect(0, 0, ctx.width, ctx.height);\r\n      ctx.globalAlpha = isComplete ? Math.round(alpha) : alpha;\r\n    },\r\n    exit: () => {\r\n      ctx.globalAlpha = direction < 0 ? 0 : 1;\r\n      onFadeComplete();\r\n    }\r\n  };\r\n};\r\n","export default ({ sceneObject: Scene }) => {\r\n  let currentScene = null;\r\n\r\n  return {\r\n    loadScene: props => {\r\n      if (currentScene) currentScene.stop();\r\n\r\n      currentScene = Scene(props);\r\n      currentScene.start();\r\n    }\r\n  };\r\n};\r\n","export const moveSprite = ({\r\n  dir,\r\n  sprite,\r\n  checkCollision = () => {\r\n    return false;\r\n  }\r\n}) => {\r\n  /* Normalise so you don't go super fast diagonally */\r\n  const dirLength = Math.sqrt(dir.x * dir.x + dir.y * dir.y);\r\n\r\n  const directionNormal = {\r\n    x: dir.x !== 0 ? dir.x / dirLength : 0,\r\n    y: dir.y !== 0 ? dir.y / dirLength : 0\r\n  };\r\n\r\n  /// For collisions with tiles\r\n  let oldPos = {\r\n    x: sprite.x,\r\n    y: sprite.y\r\n  };\r\n\r\n  // Move X then check X (careful editing directly, might lead to issues with camera)\r\n  sprite.x += directionNormal.x;\r\n\r\n  // Collider check (const layer names please)\r\n  const collidedWithX = checkCollision(sprite);\r\n\r\n  if (sprite.collidesWithTiles && collidedWithX) {\r\n    sprite.x = oldPos.x;\r\n    sprite.y = oldPos.y;\r\n  }\r\n\r\n  // Update old pos ref\r\n  oldPos = {\r\n    x: sprite.x,\r\n    y: sprite.y\r\n  };\r\n\r\n  // Move Y then check Y (careful editing directly, might lead to issues with camera)\r\n  sprite.y += directionNormal.y;\r\n\r\n  // Collider check against tiles\r\n  const collidedWithY = checkCollision(sprite);\r\n\r\n  if (sprite.collidesWithTiles && collidedWithY) {\r\n    sprite.x = oldPos.x;\r\n    sprite.y = oldPos.y;\r\n  }\r\n\r\n  return {\r\n    directionNormal\r\n  };\r\n};\r\n\r\nexport const flipSprite = ({ direction, sprite }) => {\r\n  if (direction.x < 0) {\r\n    sprite.width = -sprite.width;\r\n  } else if (direction.x > 0) {\r\n    sprite.width = sprite.width;\r\n  }\r\n};\r\n","import { moveSprite, flipSprite } from \"./spriteFunctions\";\r\nimport {\r\n  Sprite,\r\n  dataAssets,\r\n  imageAssets,\r\n  SpriteSheet,\r\n  keyPressed\r\n} from \"kontra\";\r\n\r\nexport default ({\r\n  id,\r\n  x,\r\n  y,\r\n  z = 1,\r\n  customProperties = {},\r\n  collisionMethod = (layer, sprite) => { }\r\n}) => {\r\n  if (!id) {\r\n    throw new Error(\r\n      \"Entity is fairly useless without an id, you should add one.\"\r\n    );\r\n  }\r\n\r\n  const dataKey = \"assets/gameData/entityData.json\";\r\n  const entityData = dataAssets[dataKey];\r\n\r\n  const {\r\n    name,\r\n    type,\r\n    animations,\r\n    frameWidth,\r\n    frameHeight,\r\n    sheet,\r\n    collisionBodyOptions = null,\r\n    manualAnimation = false,\r\n    movementDisabled = false,\r\n    controlledByUser = false,\r\n    collidesWithTiles = true\r\n  } = entityData.find(ent => ent.id === id);\r\n\r\n  let spriteSheet = SpriteSheet({\r\n    image: imageAssets[sheet],\r\n    frameWidth,\r\n    frameHeight,\r\n    animations\r\n  });\r\n\r\n  const sprite = Sprite({\r\n    id,\r\n    type,\r\n    name,\r\n    x,\r\n    y,\r\n    z,\r\n    customProperties,\r\n    radius: 1,\r\n    animations: spriteSheet.animations,\r\n    collidesWithTiles,\r\n    controlledByUser,\r\n    collisionBodyOptions,\r\n    manualAnimation,\r\n    movementDisabled,\r\n    update: () => {\r\n      /* Attacking */\r\n      if (keyPressed(\"q\")) {\r\n        /*\r\n        For attacking, going full throttle with a turn-based system is quite a lot\r\n        to handle. For now it'd be easier to settle for arcade sort of attacks and\r\n        being clever with patterns / interaction such as seen on Zelda.\r\n\r\n        So that said, what general idea is this:\r\n        - Hitbox appears, probably with an animation in sync with it\r\n        - Collision picked up when hitbox hits whatever the thing is\r\n        - The thing that's hit get informed of the hit, and as to what actually\r\n        hit it. If the thing is hostile (no friendly-fire), we search for the item in\r\n        question and run against its stats.\r\n        - It's a lot to calculate on the hit, but it has to be done at some point. After\r\n        that the damage animation plays on the target, and so on. Let the entity handle\r\n        what happens to it under circumstances such as if it's locked in animation, etc.\r\n        - The attacker can just worry about its self and what it's doing with attack and\r\n        animations.\r\n        */\r\n      }\r\n\r\n      /* Movement */\r\n      const dir = controlledByUser\r\n        ? {\r\n          x: keyPressed(\"a\") ? -1 : keyPressed(\"d\") ? 1 : 0,\r\n          y: keyPressed(\"w\") ? -1 : keyPressed(\"s\") ? 1 : 0\r\n        }\r\n        : { x: 0, y: 0 }; // AI (to add later)\r\n\r\n      const { directionNormal } = moveSprite({\r\n        dir: sprite.movementDisabled ? { x: 0, y: 0 } : dir,\r\n        sprite,\r\n        checkCollision: sprite => collisionMethod(\"Collision\", sprite)\r\n      });\r\n\r\n      // Flip the sprite on movement\r\n      flipSprite({ direction: directionNormal, sprite });\r\n\r\n      // Do some animations\r\n      const isMoving = directionNormal.x !== 0 || directionNormal.y !== 0;\r\n      if (!sprite.manualAnimation) {\r\n        sprite.playAnimation(isMoving ? \"walk\" : \"idle\");\r\n      }\r\n\r\n      // Call this to ensure animations are player\r\n      sprite.advance();\r\n    }\r\n  });\r\n\r\n  console.log(\"=> Sprite generated:\", sprite.name, sprite.id);\r\n  console.log(sprite);\r\n\r\n  return sprite;\r\n};\r\n","import { dataAssets, TileEngine, setStoreItem, getStoreItem } from \"kontra\";\r\nimport Entity from \"../sprites/entity\";\r\n\r\nexport default (options = { dataKey: \"assets/gameData/worldData.json\" }) => {\r\n  const { dataKey } = options;\r\n  const worldData = dataAssets[dataKey];\r\n\r\n  // TODO: Move these commands out of here and in to some sort of helper layer.\r\n  const entitiesInStore = getStoreItem(\"entities\");\r\n  const getEntityFromStore = id =>\r\n    entitiesInStore ? entitiesInStore.find(e => e.id === id) : null;\r\n\r\n  return {\r\n    getAllEntitiesOfType: type => {\r\n      const existingEntities = getStoreItem(\"entities\");\r\n      return existingEntities ? existingEntities.filter(ent => ent.type === type) : [];\r\n    },\r\n    getAllEntities: () => getStoreItem(\"entities\"),\r\n    getEntityFromStore: id => getEntityFromStore(id),\r\n    resetEntityStates: () => setStoreItem(\"entities\", []),\r\n    savePickup: entityData => {\r\n      const { id, type, ttl } = entityData;\r\n      const existingEntities = getStoreItem(\"entities\");\r\n      const existingEntity = existingEntities ? existingEntities.find(x => x.id === id) : null;\r\n\r\n      setStoreItem(\r\n        \"entities\",\r\n        existingEntities\r\n          ? existingEntities.filter(ent => ent.id !== id).concat([{ id, type, ttl, qty: existingEntity.qty + 1 }])\r\n          : [{ id, type, ttl, qty: 1 }]\r\n      );\r\n    },\r\n    createWorld: ({ areaId, playerStartId }) => {\r\n      const { entities, mapKey } = worldData.find(x => x.areaId === areaId);\r\n      const map = dataAssets[mapKey];\r\n      const tileEngine = TileEngine(map);\r\n\r\n      const playerStart = entities.find(x => x.id === playerStartId);\r\n      const player = Entity({\r\n        id: \"player\",\r\n        x: playerStart.x,\r\n        y: playerStart.y,\r\n        collisionMethod: (layer, sprite) => tileEngine.layerCollidesWith(layer, sprite)\r\n      });\r\n\r\n      return {\r\n        mapKey,\r\n        tileEngine,\r\n        player,\r\n        sprites: entities\r\n          .map(entity => {\r\n            /* Check if item exists in store as it may have been destroyed\r\n            or collected. TODO: Move the pickup check out of here, it's a bit\r\n            confusing alongside other field entity types. */\r\n            const { id } = entity;\r\n            const exists = getEntityFromStore(id);\r\n\r\n            return !exists || (exists && exists.ttl > 0)\r\n              ? Entity({ ...entity, collisionMethod: (layer, sprite) => tileEngine.layerCollidesWith(layer, sprite) })\r\n              : null;\r\n          })\r\n          .filter(e => e)\r\n          .concat([player])\r\n      };\r\n    }\r\n  };\r\n};\r\n","export default (reactions = []) => {\r\n  return {\r\n    get: type => reactions.find(reaction => reaction.type === type)\r\n  };\r\n};\r\n","export default () => {\r\n  let states = [];\r\n  const top = arr => arr[arr.length - 1];\r\n\r\n  return {\r\n    push: (state, props) => {\r\n      if (!states.some(s => s.id === state.id)) {\r\n        states.push(state);\r\n        top(states).enter(props);\r\n      }\r\n    },\r\n    update: props => {\r\n      const currentState = top(states);\r\n      if (!currentState) return;\r\n\r\n      currentState.update(props);\r\n\r\n      if (currentState.isComplete()) {\r\n        currentState.exit();\r\n        states.pop();\r\n      }\r\n    },\r\n    pop: () => {\r\n      const currentState = top(states);\r\n      currentState.exit();\r\n      states.pop();\r\n    }\r\n  };\r\n};\r\n","/* Credits\r\n* Asset Pack:\r\n* https://pixel-poem.itch.io/dungeon-assetpuck\r\n* https://0x72.itch.io/dungeontileset-ii\r\n*/\r\n\r\n/* Libs */\r\nimport { init, GameLoop, load, initKeys } from \"kontra\";\r\n\r\n/* Common utils, objects and events */\r\nimport { circleCollision, sortByDist } from \"./common/helpers\";\r\nimport { ENTITY_TYPE } from \"./common/consts\";\r\nimport {\r\n  allOff,\r\n  on,\r\n  emit,\r\n  EV_SCENECHANGE\r\n} from \"./common/events\";\r\n\r\n/* States for global use */\r\nimport startConvo from \"./states/startConvoState\";\r\nimport fieldState from \"./states/fieldState\";\r\nimport curtainState from \"./states/curtainState\";\r\n\r\n/* Game managers */\r\nimport SceneManager from \"./managers/sceneManager\";\r\nimport WorldManager from \"./managers/worldManager\";\r\nimport ReactionManager from \"./managers/reactionManager\";\r\nimport StateMachine from \"./managers/stateManager\";\r\n\r\n/* Canvas initialization */\r\nconst { canvas } = init();\r\nconst ctx = canvas.getContext(\"2d\");\r\nctx.imageSmoothingEnabled = false;\r\nctx.webkitImageSmoothingEnabled = false;\r\nctx.mozImageSmoothingEnabled = false;\r\nctx.msImageSmoothingEnabled = false;\r\nctx.oImageSmoothingEnabled = false;\r\nctx.scale(3, 3);\r\n\r\n/* Primary field scene */\r\nconst FieldScene = sceneProps => {\r\n  /* World creation */\r\n  const { createWorld, savePickup, getAllEntitiesOfType } = WorldManager();\r\n  const { sprites, player, tileEngine } = createWorld(sceneProps);\r\n  let spriteCache = sprites.filter(spr => spr.isAlive());\r\n\r\n  /* Main states creation */\r\n  const sceneStateMachine = StateMachine();\r\n  const screenEffectsStateMachine = StateMachine();\r\n\r\n  /* Decide what happens on different player interaction events (was separated, seemed pointless at this stage) */\r\n  const reactionManager = ReactionManager([\r\n    {\r\n      type: ENTITY_TYPE.DOOR,\r\n      /* First available refers to the first given collision. So it might not always be what\r\n      what you want it to be. This needs to be made a bit more robust. */\r\n      reactionEvent: (interactible, actors = []) => {\r\n        // TODO: Entities should manage their own animations (same problem seen elsewhere)\r\n        interactible.playAnimation(\"open\");\r\n        screenEffectsStateMachine.push(\r\n          curtainState({\r\n            id: \"curtain\",\r\n            ctx,\r\n            direction: -1,\r\n            onFadeComplete: () => {\r\n              allOff([EV_SCENECHANGE]);\r\n              /* Player start becomes part of the collider data so we attempt to use that. */\r\n              emit(EV_SCENECHANGE, {\r\n                areaId: interactible.customProperties.goesTo,\r\n                playerStartId: interactible.customProperties.playerStartId\r\n              });\r\n            }\r\n          })\r\n        );\r\n      }\r\n    },\r\n    {\r\n      type: ENTITY_TYPE.PICKUP,\r\n      reactionEvent: (interactible, actors = []) => {\r\n        interactible.ttl = 0;\r\n        savePickup(interactible);\r\n      }\r\n    },\r\n    {\r\n      type: ENTITY_TYPE.NPC,\r\n      reactionEvent: (interactible, actors = []) =>\r\n        sceneStateMachine.push(\r\n          startConvo({\r\n            id: \"conversation\",\r\n            startId: \"m1\",\r\n            // I feel these might be better done within the state... perhaps the same elsewhere too.\r\n            onExit: () => actors.map(spr => (spr.movementDisabled = false)),\r\n            onEntry: () => actors.map(spr => (spr.movementDisabled = true))\r\n          })\r\n        )\r\n    }\r\n  ]);\r\n\r\n  // TODO: Can we please not have to pass everything in like this? It's a bit too coupled.\r\n  /* Start game within FieldState */\r\n  sceneStateMachine.push(\r\n    fieldState({\r\n      id: \"field\",\r\n      sprites,\r\n      tileEngine,\r\n      reactionManager,\r\n      getAllEntitiesOfType\r\n    })\r\n  );\r\n\r\n  /* Open up the first scene with a fade */\r\n  screenEffectsStateMachine.push(\r\n    curtainState({\r\n      id: \"curtain\",\r\n      ctx,\r\n      direction: 1\r\n    })\r\n  );\r\n\r\n  /* Primary loop */\r\n  return GameLoop({\r\n    update: () => {\r\n      /* Add a flag to sprite to enable/disable collision checks */\r\n      /* Check for anything dead (GC does the rest) */\r\n      spriteCache = spriteCache.filter(spr => spr.isAlive());\r\n\r\n      /* Player to useable collision */\r\n      const playerCollidingWith = sortByDist(player, circleCollision(\r\n        player,\r\n        spriteCache.filter(s => s.id !== \"player\")\r\n      ));\r\n\r\n      /* Update all sprites */\r\n      spriteCache.map(sprite => sprite.update());\r\n\r\n      // ...\r\n      player.isColliding = playerCollidingWith.length > 0;\r\n\r\n      /* Origin is the controller of the scene, so 9/10 that'll probably be the player */\r\n      sceneStateMachine.update({\r\n        origin: player,\r\n        collisions: playerCollidingWith\r\n      });\r\n    },\r\n    render: () => {\r\n      tileEngine.render();\r\n\r\n      /* Edit z-order based on 'y' then change render order */\r\n      spriteCache\r\n        .sort((a, b) => Math.round(a.y - a.z) - Math.round(b.y - b.z))\r\n        .forEach(sprite => sprite.render());\r\n\r\n      screenEffectsStateMachine.update();\r\n    }\r\n  });\r\n};\r\n\r\n/* Make sure to embed your tilesets or it'll run in to problems,\r\nTODO: Can we also const the dataKeys across the board plz. */\r\nload(\r\n  \"assets/tileimages/test.png\",\r\n  \"assets/tiledata/test.json\",\r\n  \"assets/tiledata/test2.json\",\r\n  \"assets/entityimages/little_devil.png\",\r\n  \"assets/entityimages/little_orc.png\",\r\n  \"assets/gameData/conversationData.json\",\r\n  \"assets/gameData/entityData.json\",\r\n  \"assets/gameData/assetData.json\",\r\n  \"assets/gameData/worldData.json\"\r\n).then(assets => {\r\n  initKeys();\r\n\r\n  // Hook up player start todo\r\n  const sceneManager = SceneManager({ sceneObject: FieldScene });\r\n\r\n  /* First load instigates a player start so this might be found from saveData\r\n  or if at the very beginning of a game, passed in directly.\r\n  If we look at the worldData, the playerStart id is actually linked to one of the\r\n  entities that gets loaded in. This in theory means you can make anything a player start\r\n  so long as you specify the right id for it. That being said, you do have to make sure\r\n  both of them exist in the same context, otherwise you'll never get access to it.\r\n  */\r\n  sceneManager.loadScene({ areaId: \"area1\", playerStartId: \"entrance\" });\r\n\r\n  on(EV_SCENECHANGE, props => sceneManager.loadScene({ ...props }));\r\n});\r\n"]}